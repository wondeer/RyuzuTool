<?xml version="1.0"?>
<doc>
<assembly>
<name>
DSAPI
</name>
</assembly>
<members>
<member name="T:DSAPI.My.Resources.Resources">
<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.ResourceManager">
<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.Culture">
<summary>
  重写当前线程的 CurrentUICulture 属性，对
  使用此强类型资源类的所有资源查找执行重写。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.DS16">
<summary>
  查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.dsencode">
<summary>
  查找 System.Byte[] 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.msk">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.Shadow">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.冰雹">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.多云">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.大雨">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.大雪">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.字符转拼音">
<summary>
  查找 System.Byte[] 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.小盾牌">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.小雨">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.小雪">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.强沙尘暴">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.扬沙">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.晴">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.暴雨">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.暴雪">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.沙尘暴">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.身份证地址代码对照">
<summary>
  查找类似 110000 北京市
110100 北京市市辖区
110101 北京市东城区
110102 北京市西城区
110103 北京市崇文区
110104 北京市宣武区
110105 北京市朝阳区
110106 北京市丰台区
110107 北京市石景山区
110108 北京市海淀区
110109 北京市门头沟区
110111 北京市房山区
110112 北京市通州区
110113 北京市顺义区
110200 北京市县
110221 北京市昌平县
110224 北京市大兴县
110226 北京市平谷县
110227 北京市怀柔县
110228 北京市密云县
110229 北京市延庆县
120000 天津市
120100 天津市市辖区
120101 天津市和平区
120102 天津市河东区
120103 天津市河西区
120104 天津市南开区
120105 天津市河北区
120106 天津市红桥区
120107 天津市塘沽区
120108 天津市汉沽区
120109 天津市大港区
120110 天津市东丽区
120111 天津市西青区
120112 天 [字符串的其余部分被截断]&quot;; 的本地化字符串。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.钥匙">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.钥匙2">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.锁">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.阴">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.阵雨">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.阵雪">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.雨夹雪">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.雷阵雨">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.雾">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.霾">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="T:DSAPI.DSAPI信息">
 <summary>
 显示当前DSAPI.dll的信息
 </summary>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI文件路径">
 <summary>
 返回当前DSAPI.dll文件所在物理路径
 </summary>
 <returns>当前DSAPI.dll文件所在物理路径</returns>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI文件版本">
 <summary>
 返回当前DSAPI.dll文件版本号
 </summary>
 <returns>当前DSAPI.dll文件版本号</returns>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI年号">
 <summary>
 返回当前DSAPI.dll文件版本中的年号部分
 </summary>
 <returns>当前DSAPI.dll文件版本中的年号部分</returns>
</member>
<member name="P:DSAPI.DSAPI信息.作者">
 <summary>
 返回当前DSAPI.dll文件的开发作者名称
 </summary>
 <returns>当前DSAPI.dll文件的开发作者名称，固定为『DYLIKE』</returns>
</member>
<member name="P:DSAPI.DSAPI信息.QQ">
 <summary>
 返回当前DSAPI.dll文件的开发作者QQ号
 </summary>
 <returns>当前DSAPI.dll文件的开发作者QQ号</returns>
</member>
<member name="P:DSAPI.DSAPI信息.QQ群">
 <summary>
 返回DSAPI官方支持QQ群号数组
 </summary>
 <example>
 <code>
 Console.WriteLine(join(DSAPI信息.QQ群,",")
 '输出 419130936,780470675
 </code>
 </example>
 <returns>DSAPI官方支持QQ群号数组</returns>
</member>
<member name="M:DSAPI.DSAPI信息.导出所有函数到txt文件(System.String,DSAPI.DSAPI信息.分级符)">
 <summary>
 通过反射方式将当前DSAPI.dll文件的所有函数名称（包括分支）导出到文本文件
 <paramref name="保存到">指定要保存并生成的文本文档路径</paramref>
 <paramref name="分级符号">导出时是否使用分级符号，默认为Tab字符</paramref>
 </summary>
</member>
<member name="T:DSAPI.DSAPI信息.分级符">
 <summary>
 导出DSAPI函数列表到文本文件时使用的分级符号
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI">
 <summary>
 <b>详细文档请参考<a href="Http://www.dylikesoftcom/dswebapi">DSWEBAPI专栏</a></b>
 </summary>
</member>
<member name="P:DSAPI.DSWebAPI.配置ws.启用大数据量支持">
 <summary>
 当一次无法传递完整数据时,自动分块连续传输,这会略微降低性能
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.DSWebAPI.配置ws.启用文件服务">
 <summary>
 指示是否允许客户端（通常为网页）下载位于文件服务文件夹下的文件
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.DSWebAPI.配置ws.文件服务文件夹">
 <summary>
 指定文件服务的根文件夹路径
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.DSWebAPI.配置ws.启用请求重定向">
 <summary>
 当启用请求重定向时,所有API请求将转发至另一个IP地址和端口
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.DSWebAPI.错误信息">
 <summary>
 DSWebAPI特有错误信息,由服务端方法中"当前客户端.设置错误信息"指定
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.启动服务(System.String)">
 <summary>
 监听指定网卡
 </summary>
<param name="指定网卡名称或IP地址">指定网卡名称或IP地址</param>
</member>
<member name="M:DSAPI.DSWebAPI.启动服务(System.Int32)">
 <summary>
 监听指定网卡
 </summary>
<param name="指定网卡索引">要监听的网卡序号</param>
</member>
<member name="P:DSAPI.DSWebAPI.WebAPI客户端.API名称">
 <summary>
 正在访问的API名称
 </summary>
</member>
<member name="P:DSAPI.DSWebAPI.当前客户端">
 <summary>
 获取正在请求该方法的WebAPI客户端，该属性不适用于默认执行的方法。
 </summary>
 <returns></returns>
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.作为分布式节点">
 <summary>                                                                                    
 暂未启用该项                                                                                 
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.从文本文件获取节点路径">
 <summary>
 指示该类应从指定的文本文件中获取节点路径
 <para>文本文件中对应格式：</para>
 <para>类名=节点路径</para>
 <para>例： Demo=v1/api</para>
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.节点路径">
 <summary>                                                                                    
 指示该类应替换成的路径(或别名)                                                               
 <para>例1，别名：测试节点</para>                                                             
 <para>例2路径：Ver1/Test</para>                                                              
 <para>节点路径访问时将忽略大小写</para>                                                      
 <para>注意：启用自定义节点路径（或别名）后，原类名（节点名）将不可用</para>                  
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.说明">
 <summary>                                                                                    
 对该类的描述                                                                                 
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.隐藏">
 <summary>                                                                                    
 指法该类是否出现在首页文档                                                                   
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.身份验证">
 <summary>
 以继承于DSWebAPI身份验证接口的类Type作为验证方式
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.身份验证.#ctor(System.Type)">
 <summary>
 以继承于DSWebAPI身份验证接口的类Type作为验证方式
 </summary>
 <param name="验证方式"></param>
</member>
<member name="T:DSAPI.DSWebAPI.免身份验证">
 <summary>
 即使在需要验证的类中也可以免去验证而直接访问
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.DS密法校验加密">
 <summary>
 对传入字符串参数及返回字符串进行DS密法加密，并追加校验码
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.默认执行">
 <summary>
 <para>当本类在DSWebAPI缓存中实例化后默认执行的方法，在同一个类中只允许有一个默认执行的方法且不带任何参数。<br/>
注意:该方法将不会公开也不允许客户端访问。
</para>
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.清理调用IP缓存列表">
 <summary>
 将所有API方法的IP统计缓存列表清空，但不清除调用次数
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.清理调用次数">
 <summary>
 将所有API方法的调用次数清零，但不清除调用IP缓存列表
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.添加DS密钥(System.String)">
 <summary>
 添加一个密钥到DS密钥令牌缓存列表
 </summary>
 <param name="密钥"></param>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.删除DS密钥(System.String)">
 <summary>
 从DS密钥令牌缓存列表中删除指定的密钥
 </summary>
 <param name="密钥"></param>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.清空DS密钥(System.String)">
 <summary>
 清空整个DS密钥令牌缓存列表中的所有密钥
 </summary>
 <param name="密钥"></param>
</member>
<member name="T:DSAPI.DSWebAPI.令牌系统.DS时效令牌">
 <summary>
 DSWebAPI专属时效令牌，该令牌在指定的时间及指定使用次数范围内有效
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.错误信息内容(DSAPI.DSWebAPI.错误代码,System.String)">
 <summary>
 产生一条内置编号的错误信息内容
 </summary>
 <param name="错误信息编号"></param>
 <returns></returns>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0000">
 <summary>
参数数量不匹配
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0001">
 <summary>
参数类型转换失败
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0002">
 <summary>
指定的API未开放
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0003">
 <summary>
发生了内部错误
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0004">
 <summary>
已限制该客户端类型对API的调用
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0005">
 <summary>
您的IP或IP段已在黑名单中
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0006">
 <summary>
已达到最大调用次数
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0007">
 <summary>
需要授权才可调用
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0008">
 <summary>
API库正在维护中，暂停访问
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0009">
 <summary>
此API要求传递参数才可调用
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0010">
 <summary>
当有传递某个参数名称时，所有参数均须带名称传递
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0011">
 <summary>
仅当数据类型为Byte数组或String类型时才可返回Base64文本
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0012">
 <summary>
仅当数据类型为Byte数组或String类型时才可返回文件下载类型
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0013">
 <summary>
仅当数据类型为Byte数组时才可返回图像类型
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0014">
 <summary>
身份或授权验证失败
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0015">
 <summary>
不能在一个DSWebAPI类中同时存在多个默认执行方法
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0016">
 <summary>
默认执行方法不应带有任何参数
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0017">
 <summary>
默认执行方法不应返回任何值
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0018">
 <summary>
循环执行的方法不应带有任何参数
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0019">
 <summary>
循环执行的方法不应返回任何值
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0020">
 <summary>
循环执行的参数不能叠加，优先级：毫秒间隔>周期
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0021">
 <summary>
指定的方法未加入到循环执行列表
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0022">
 <summary>
调用频率受限
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0023">
 <summary>
本函数调用频率为{0}秒/次
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0024">
 <summary>
程序内部错误导致无法生成首页
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0025">
 <summary>
CHAR(34)%API%CHAR(34)方法包含多个Byte数组参数，不受DSWebAPI支持
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0026">
 <summary>
CHAR(34)%API%CHAR(34)方法必须是带有返回值，否则客户端将无法收到任何响应，从而误认为服务端已失联
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0027">
 <summary>
->>CHAR(34)%API%CHAR(34)由于存在无法支持的错误而从API列表去除
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0028">
 <summary>
丢失令牌或令牌被破坏
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0029">
 <summary>
DS时效令牌无效
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0030">
 <summary>
用户名或密码错误
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.错误代码.CODE_0031">
 <summary>
DS时效令牌无效
 </summary>
</member>
<member name="M:DSAPI.QQ用户相关.获取昵称(System.String)">
 <summary>
 获取指定<paramref name="QQ号"/>的昵称
 </summary>
 <example>
  <code>
  ‘获取QQ号为20353841的QQ昵称
  Dim NickName As String=获取昵称("20353841")
  MsgBox(NickName)
       </code></example>
 <param name="QQ号">必须至少5位长度的<see cref="T:System.String"/>类型,可转换为<see cref="T:DSAPI.QQ用户相关.QQ昵称和号码"/>类型
 </param>
 <exception cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">无互联网连接</exception>
 <returns>返回获取到的QQ昵称</returns>
 <remarks></remarks>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.从左到右">
 <summary>
 从左到右打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.从右到左">
 <summary>
 从右到左打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.从上到下">
 <summary>
 从上到下打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.从下到上">
 <summary>
 从下到上打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.从中心扩展">
 <summary>
 若使用了AW_HIDE标志，则使窗口向内重叠；若未使用AW_HIDE标志，则使窗口向外扩展
 <para>可以组合“隐藏”实现从外向内收缩</para>
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.隐藏">
 <summary>
 隐藏窗口，缺省则显示窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.激活">
 <summary>
 激活窗口。在使用了AW_HIDE标志后不要使用这个标志
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.滚动进入">
 <summary>
 使用滑动类型。缺省则为滚动动画类型。当使用AW_CENTER标志时，这个标志就被忽略
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.窗口动画.淡入">
 <summary>
 使用淡出效果。只有当hWnd为顶层窗口的时候才可以使用此标志
 <para>可以组合“隐藏”实现淡出效果</para>
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_HOR_POSITIVE">
 <summary>
 从左到右打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_HOR_NEGATIVE">
 <summary>
 从右到左打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_VER_POSITIVE">
 <summary>
 从上到下打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_VER_NEGATIVE">
 <summary>
 从下到上打开窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_CENTER">
 <summary>
 若使用了AW_HIDE标志，则使窗口向内重叠；若未使用AW_HIDE标志，则使窗口向外扩展
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_HIDE">
 <summary>
 隐藏窗口，缺省则显示窗口
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_ACTIVATE">
 <summary>
 激活窗口。在使用了AW_HIDE标志后不要使用这个标志
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_SLIDE">
 <summary>
 使用滑动类型。缺省则为滚动动画类型。当使用AW_CENTER标志时，这个标志就被忽略
 </summary>
</member>
<member name="F:DSAPI.Win32API.User.AW_BLEND">
 <summary>
 使用淡出效果。只有当hWnd为顶层窗口的时候才可以使用此标志
 </summary>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.屏幕矩形区域">
 <summary>
 一个矩形，该矩形以屏幕坐标表示
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.矩形区域">
 <summary>
 一个矩形，该矩形以屏幕坐标表示
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.可用">
 <summary>
 设置窗口或控件是否可操作
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.句柄">
 <summary>
 目标窗口或控件的Handler
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.文本">
 <summary>
 窗口的标题或控件的Text文本
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.Win32API.常用操作.WIN32控件.点击鼠标(DSAPI.Win32API.常用操作.鼠标按键)">
 <summary>
 在不移动鼠标的情况下直接模拟点击鼠标，默认为窗口或控件的中心
 </summary>
 <param name="鼠标按键"></param>
</member>
<member name="M:DSAPI.Win32API.常用操作.WIN32控件.点击鼠标(DSAPI.Win32API.常用操作.鼠标按键,System.Drawing.Point)">
 <summary>
 在不移动鼠标的情况下直接模拟点击鼠标
 </summary>
 <param name="鼠标按键"></param>
 <param name="坐标">要点击的坐标</param>
</member>
<member name="M:DSAPI.Win32API.常用操作.WIN32控件.点击鼠标(DSAPI.Win32API.常用操作.鼠标按键,System.Int32,System.Int32)">
 <summary>
 在不移动鼠标的情况下直接模拟点击鼠标
 </summary>
 <param name="鼠标按键"></param>
 <param name="坐标X">要点击的坐标X轴位置</param>
 <param name="坐标y">要点击的坐标Y轴位置</param>
</member>
<member name="M:DSAPI.Win32API.常用操作.WIN32控件.发送字符串消息(System.Int32,System.String)">
 <summary>
 发送字符串消息,使用COPYDATA方式传递,接收方必须使用COPYDATA方式解析m.LParam参数
 </summary>
 <param name="参数1"></param>
 <param name="字符串"></param>
</member>
<member name="M:DSAPI.Win32API.常用操作.WIN32控件.解析LParam为字符串(System.Windows.Forms.Message)">
 <summary>
 接收方解析由"发送字符串消息"发送的Windows消息
 </summary>
 <param name="m"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.Win32API.常用操作.WIN32控件.界面图像">
 <summary>
 截取窗口或控件的客户区界面图像
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.Win32API.常用操作.查找WIN32控件(System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
 遍历所有窗口控件，查找包含指定文本的窗口和控件，文本比较时将忽略大小写
 </summary>
 <param name="部分或完整的标题文本"></param>
 <param name="窗口类名"></param>
 <param name="包括隐藏窗口"></param>
 <param name="包括子窗口"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.Win7特性.进度条状态">
 <summary>
 设置进度条相应的样式
 <note type="important">本功能不支持XP或更低版本的操作系统</note>
 </summary>
</member>
<member name="M:DSAPI.Win7特性.设置进度条状态(System.Windows.Forms.ProgressBar,DSAPI.Win7特性.进度条状态)">
 <summary>
 使ProgressBar控件应用相应的样式
 <note type="caution">本功能不支持XP或更低版本的操作系统</note> 
 </summary>
 <param name="进度条">要设置样式的ProgressBar控件</param>
 <param name="状态">要设置的进度条状态,如<b>正常</b>、<b>错误</b>、<b>暂停</b>等</param>
 <example>
 <para>将指定PrgressBar进度条控件设置为指定的样式</para>
 <para><img src="../CodesImages/进度条WIN7风格.gif"/></para>
 <para><a href="../Demos/DSAPI对Winform中Progressbar控件的WIN7风格样式控制.rar">下载本示例项目源码</a></para>
 <code language="vb" source="e:\codesdemo\进度条WIN7风格_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\进度条WIN7风格_cs.txt"></code>
 </example>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.初始化">
 <summary>
 在应用Windows7任务栏特效前，必须先初始化
 </summary>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.设置任务栏进度(System.Windows.Forms.Control,System.Int32,System.Int32)">
 <summary>
 <note type="important">窗体必须已经显示且已应用过<c>DSAPI.Win7特性.任务栏特效.初始化</c>
 <para>如在Form1_Shown中添加<c>DSAPI.Win7特性.任务栏特效.初始化</c></para>
 </note>
 在高于XP的操作系统中当前窗口所在任务栏按钮上显示指定进度的进度条
 </summary>
 <example>
 <para>设置"Form1"窗口对应的任务栏按钮显示50%的进度</para>
 <code> DSAPI.Win7特性.任务栏特效.设置任务栏进度(Form1, 50, 100)</code>
 </example>
 <param name="所属窗口">要设置任务栏进度的对应窗口</param>
 <param name="当前值">设置进度条最大值</param>
 <param name="最大值">设置进度条当前值</param>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.设置任务栏进度条状态(System.Windows.Forms.Control,DSAPI.Win7特性.任务栏特效.任务栏进度条状态)">
 <summary>
 <note type="important">窗体必须已经显示且已应用过<c>DSAPI.Win7特性.任务栏特效.初始化</c>
 <para>如在Form1_Shown中添加<c>DSAPI.Win7特性.任务栏特效.初始化</c></para>
 </note>
 在高于XP的操作系统中当前窗口所在任务栏按钮上设置已显示进度条的样式
 </summary>
 <example>
 <para>设置几种任务栏进度条样式样式</para>
 <img src="../CodesImages/DSAPI之任务栏进度条.png"/>
 <img src="../CodesImages/DSAPI之任务栏进度条2.gif"/>
 <code> DSAPI.Win7特性.任务栏特效.设置任务栏进度(Form1, 50, 100)</code>
 </example>
 <param name="所属窗口">要设置任务栏进度样式的对应窗口</param>
 <param name="状态">指示要显示何种进度条样式</param>
</member>
<member name="T:DSAPI.串口通讯">
 <summary>
 封装并简化一个串口通讯
 </summary>
<example>
<para>创建一个简单的DS串口通讯</para>
<para><img src="../CodesImages/DSAPI之串口通讯DEMO.png"></img></para>
<para><a href="../Demos/DSAPI之串口通讯DEMO.rar">下载本示例源码(VB.Net)</a></para>
<code source="E:\CodesDemo\串口通讯_vb.txt" language="vbnet"></code>
<code source="E:\CodesDemo\串口通讯_cs.txt" language="cs"></code>
 </example>
</member>
<member name="M:DSAPI.串口通讯.#ctor(System.String)">
 <summary>
 使用指定的参数创建串口配置
 <para>字符串格式：</para>
 <list type="bullet">格式1：波特率,数据位,奇偶校验位,停止位</list>
 <list type="bullet">示例：9600,8,E,1</list>
 <list type="bullet">格式2：数据位,奇偶校验位,停止位</list>
 <list type="bullet">示例：8,E,1</list>
 </summary>
 <param name="参数"></param>
</member>
<member name="T:DSAPI.串口通讯.配置信息">
 <summary>
 对串口进行各项配置
 </summary>
</member>
<member name="P:DSAPI.串口通讯.配置信息.编码">
 <summary>
 设置或获取当使用字符串通讯时默认使用的编码
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.波特率">
 <summary>
 设置或获取串口通讯时的波特率速度
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.奇偶校验位">
 <summary>
 设置或获取串口通讯时使用的使用的奇偶校验方式
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.每字节数据位长度">
 <summary>
 设置或获取串口通讯时的数据位长度
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.握手协议">
 <summary>
 设置或获取串口通讯时使用的使用的握手协议
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.停止位数">
 <summary>
 设置或获取串口通讯时使用的使用的停止位
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.读取超时时间">
 <summary>
 设置或获取当串口自上一次接收数据后，等待多久时间内如果没有接收到后续数据，便认为本次接收完成，触发"“接收到数据”"事件。以毫秒为单位
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.启用Dtr和Rts">
 <summary>
 设置或获取是否启用Dtr和Rts
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.忽略空帧">
 <summary>
 设置或获取当串口接收到不含任何数据的异常时，是否触发"“接收到数据”"事件
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.串口通讯.配置信息.串口名称">
 <summary>
 指示当前已经打开的串口名称
 </summary>
 <returns></returns>
</member>
<member name="E:DSAPI.串口通讯.收到数据">
 <summary>
 当打开的串口接收到数据时触发此事件
 </summary>
 <param name="ComName">指示当前是哪个串口发来的数据</param>
 <param name="e">指示从串口接收到的数据</param>
</member>
<member name="E:DSAPI.串口通讯.串口打开失败">
 <summary>
 试图打开串口但不成功时触发
 </summary>
 <param name="ComName">试图打开的串口名称</param>
</member>
<member name="E:DSAPI.串口通讯.串口打开成功">
 <summary>
 指定串口打开成功后触发
 </summary>
 <param name="ComName">打开的串口名称</param>
</member>
<member name="E:DSAPI.串口通讯.串口被关闭">
 <summary>
 主动或被动关闭指定串口时触发
 </summary>
 <param name="ComName">串口名称</param>
</member>
<member name="P:DSAPI.串口通讯.串口已经打开">
 <summary>
 返回当前类中指定的串口是否已经打开
 </summary>
 <returns>打开:True<para></para>关闭:False</returns>
</member>
<member name="P:DSAPI.串口通讯.串口对象">
 <summary>
 返回当前串口类中的SerialPort实体
 </summary>
 <returns>SerialPort实体</returns>
</member>
<member name="P:DSAPI.串口通讯.配置">
 <summary>
 串口相关配置信息
 </summary>
 <returns>配置信息</returns>
</member>
<member name="M:DSAPI.串口通讯.应用配置">
 <summary>
 使串口类应用当前设定的配置信息，<b>应用配置</b>在串口关闭或已打开时均可操作。
 </summary>
</member>
<member name="M:DSAPI.串口通讯.发送数据(System.Byte[])">
 <summary>
 向打开的串口发送数据,如果串口未打开则将自动跳过
 </summary>
 <param name="S1">要发送的数据</param>
</member>
<member name="M:DSAPI.串口通讯.关闭串口">
 <summary>
 关闭打开的串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.打开串口(System.String)">
 <summary>
 打开指定名称的串口，如<b>COM1</b>
 </summary>
 <param name="串口名称">要打开的串口名称，如<b>COM1</b></param>
</member>
<member name="T:DSAPI.串口通讯.发送模式">
 <summary>
 指示数据将以何种方式发送至串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.读取数据_String(System.String,System.Int32,System.Int32)">
 <summary>
 向串口发送字符串数据并等待返回,编码随配置信息而定
 </summary>
 <param name="发送数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="重发次数">当没有收到任何数据且到达超时间时自动重发</param>    ''' <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.Byte[],System.Int32,System.Int32)">
 <summary>
 向串口发送字节数组并等待返回
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="重发次数">当没有收到任何数据且到达超时间时自动重发</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.Collections.Generic.List{System.Byte},System.Int32,System.Int32)">
 <summary>
 向串口发送字节数组并等待返回
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="重发次数">当没有收到任何数据且到达超时间时自动重发</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.String,DSAPI.串口通讯.发送模式,System.Int32,System.Int32)">
 <summary>
  向串口发送字节数组并等待返回,编码随配置信息而定
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="模式">指示是按<b>ASC字符</b>模式发送还是<b>HEX16进制</b>模式发送</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="重发次数">当没有收到任何数据且到达超时间时自动重发</param>
 <returns></returns>
</member>
<member name="T:DSAPI.串口通讯.附加功能">
 <summary>
 串口类中额外提供的功能
 </summary>
</member>
<member name="M:DSAPI.串口通讯.附加功能.获取所有串口设备">
 <summary>
 获取本机包含的所有可用串口设备,包括物理串口和虚拟串口
 </summary>
 <returns>返回检测到的串口设备列表</returns>
 <note type="important">通过本功能检测所有串口设备<b>较为耗时</b>,在确定没有新的串口设备接入或拔出时请勿高频调用</note>
</member>
<member name="M:DSAPI.串口通讯.附加功能.获取包含指定设备名称的串口列表(System.String)">
 <summary>
 获取本机包含的所有可用串口设备,这些串口设备名称包含指定的字符串,包括物理串口和虚拟串口
 </summary>
 <param name="S">检测时设备名称需要包含的字符串,如"Usb"</param>
 <returns>返回检测到的串口设备列表</returns>
 <note type="important">通过本功能检测所有串口设备<b>较为耗时</b>,在确定没有新的串口设备接入或拔出时请勿高频调用</note>
</member>
<member name="T:DSAPI.串口通讯.公共模块">
 <summary>
 全局的公共模块,在项目中一个或多个DS串口类均可通过该模块来处理消息事件,如收到数据等
 </summary>
</member>
<member name="T:DSAPI.串口通讯.公共模块.事件订阅">
 <summary>
 在项目中一个或多个DS串口类均可订阅该事件来处理消息事件,如收到数据等
 </summary>
 <param name="SenderName">指示该事件是哪个DS串口触发的</param>
 <param name="消息类型">指示触发的消息类型,如发送数据完成、接收数据完成等</param>
 <param name="Message">事件产生的具体消息或数据</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.添加事件侦听(DSAPI.串口通讯.公共模块.事件订阅)">
 <summary>
 在任何地方添加事件侦听,以订阅DS串口事件消息
 </summary>
 <param name="触发">指定当订阅的DS串口事件触发时,转由哪个委托方法进行处理</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.删除事件侦听(System.Delegate)">
 <summary>
 删除一个已添加的事件订阅
 </summary>
 <param name="触发">要从订阅列表中删除的委托方法</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.广播事件(System.String,DSAPI.串口通讯.公共模块.消息类型,System.Object)">
 <summary>
 向DS串口的公共模块广播一条自定义消息,该消息将被所有订阅的对象获取
 </summary>
 <param name="SendName">指示该广播消息的发送者自定义名称</param>
 <param name="MsgType">消息类型</param>
 <param name="Msg">要广播发送的具体消息或数据</param>
</member>
<member name="T:DSAPI.串口通讯.显示串口选择界面">
 <summary>
 显示一个包含了下拉列表的小型窗口,下拉列表中将列出本机所有串口设备,包括物理串口和虚拟串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.显示串口选择界面.选择的串口名称(System.Boolean)">
 <summary>
 显示串口选择窗口,并获取用户选定的串口名称
 </summary>
 <param name="列表中显示关闭串口项">是否在下拉列表中添加"关闭串口"项,该项也会被作为返回值使用</param>
 <returns></returns>
</member>
<member name="M:DSAPI.串口通讯.显示串口选择界面.选择的串口名称(System.String,System.Boolean)">
 <summary>
 显示指定窗口标题的串口选择窗口,并获取用户选定的串口名称
 </summary>
 <param name="列表中显示关闭串口项">是否在下拉列表中添加"关闭串口"项,该项也会被作为返回值使用</param>
 <returns></returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.串口通讯.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.反射.从Dll创建对象``1(System.String,System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件路径">Dll文件所在路径</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.从Dll创建对象``1(System.Byte[],System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件">Dll文件的二进制数组</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.当前方法执行步骤顺序(System.String)">
 <summary>
 获取当前方法执行过程顺序，并以指定的连接符连接，如Main -> Form1_Load -> Test
 </summary>
 <param name="步骤连接符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.序列化.序列化(System.String,System.Object)">
 <summary>
 序列化到文件
 </summary>
 <param name="FilePath">文件路径</param>
 <param name="Obj">要序列化的对象</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.序列化.反序列化(System.String)">
 <summary>
 从文件反序列化
 </summary>
 <param name="FilePath">文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.序列化.反序列化(System.IO.Stream)">
 <summary>
 从文件反序列化
 </summary>
 <param name="Strm">要反序列化的流</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.序列化.反序列化(System.Byte[])">
 <summary>
 从文件反序列化
 </summary>
 <param name="bts">要反序列化的字节数组</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.XML序列化.序列化(System.String,System.Object)">
 <summary>
 序列化到文件
 </summary>
 <param name="FilePath">文件路径</param>
 <param name="Obj">要序列化的对象</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.XML序列化.反序列化(System.String,System.Type)">
 <summary>
 从文件反序列化
 </summary>
 <param name="FilePath">文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.XML序列化.反序列化(System.String,System.Type,System.Text.Encoding)">
 <summary>
 从文件反序列化
 </summary>
 <param name="FilePath">文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.清空字段和属性值(System.Object)">
 <summary>
 清除对象的字段和属性值
 <para>这将导致数值变成0或字符串变成空值，列表和数组会被清空</para>
 <para>该操作会忽略标识为“清空时忽略”特性的字段和属性，以及当标识有“DefaultValue”特性时会将设置为指定的默认值。</para>
 <para>"清空时忽略"特性位于DSAPI.反射</para>
 </summary>
 <param name="对象">要被执行操作的对象</param>
</member>
<member name="M:DSAPI.图形图像.设置桌面壁纸(System.String)">
 <summary>
 将指定路径的图像文件设置为桌面壁纸,成功返回True,失败返回False
 <paramref name="壁纸文件路径">要设置的壁纸文件所在路径</paramref>
 </summary>
</member>
<member name="M:DSAPI.图形图像.获取颜色组成(System.Drawing.Bitmap,System.Int32)">
 <summary>
 获取图像的颜色组成,返回一个DS字典包装的数据,(颜色,数量,占全图百分比)
 </summary>
 <param name="源图"></param>
 <param name="色阶数">色阶范围1到255,色阶越多,提取的颜色越多</param>
 <returns>颜色,数量,占全图百分比</returns>
</member>
<member name="M:DSAPI.图形图像.从可执行文件获取小图标(System.String)">
 <summary>
 获取小图标
 </summary>
 <param name="EXE或DLL路径"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.从可执行文件获取大图标(System.String)">
 <summary>
 获取大图标
 </summary>
 <param name="EXE或DLL路径"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取文件夹图标(System.String,System.Boolean)">
 <summary>
 获取文件夹图标
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取扩展名关联图标(System.String,System.Boolean)">
 <summary>
 获取注册表关联图标
 </summary>
 <param name="扩展名">扩展名</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取图片文件缩略图(System.String,System.Drawing.Size)">
 <summary>
 获取图片缩略图
 </summary>
 <param name="图片文件路径"></param>
 <param name="需要的缩略图尺寸"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取绘制文字所需大小(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Int32)">
 <summary>
 测量获取绘制文字所需大小,大小将增加预增加的宽度和高度
 </summary>
 <param name="要绘制的文本">要绘制的文本</param>
 <param name="字体">字体</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.透明度(System.Drawing.Bitmap@,System.Single)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用透明特效的图像">要调整透明度的图像</param>
 <param name="透明度">亮度值,范围0%-100%</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.投影(System.Drawing.Bitmap@,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.外发光(System.Drawing.Bitmap@,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
 <summary>
 图像外发光效果
 </summary>
 <param name="要应用外发光的图像"></param>
 <param name="光晕颜色"></param>
 <param name="光晕大小"></param>
 <param name="光晕浓度"></param>
 <param name="挖空处理"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.投影(System.Drawing.Bitmap@,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
<param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.挖空投影(System.Drawing.Bitmap@,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.挖空投影(System.Drawing.Bitmap@,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.模糊(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 图像模糊效果
 </summary>
 <param name="要应用模糊特效的图像">要应用模糊效果的图像</param>
 <param name="模糊半径">模糊半径,取值范围5-100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.应用透明度遮罩(System.Drawing.Bitmap@,System.Drawing.Bitmap)">
 <summary>
 将指定图像使用指定遮罩图的透明度
 </summary>
 <param name="要应用透明度遮罩的图像"></param>
 <param name="透明遮罩"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.灰度(System.Drawing.Bitmap@)">
 <summary>
 图像灰度效果
 </summary>
 <param name="要应用灰度特效的图像">要应用灰度特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.黑白(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 图像黑白效果
 </summary>
 <param name="要应用黑白特效的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-100到100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.对比度(System.Drawing.Bitmap@,System.Int32,System.Single)">
 <summary>
 更改图像对比度
 </summary>
 <param name="要应用更改对比度的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-127到127</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.亮度(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 调整图像亮度
 </summary>
 <param name="要调整亮度的图像">要调整亮度的图像</param>
 <param name="亮度值_负128到128">亮度值,范围-128,128</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.反色(System.Drawing.Bitmap@)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用反色特效的图像">要应用反色特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.保留通道(System.Drawing.Bitmap@,DSAPI.图形图像.色彩通道)">
 <summary>
 保留图像指定色彩
 </summary>
 <param name="要应用保留色彩通道特效的图像">只保留指定色彩通道特效的图像</param>
 <param name="要保留的色彩通道">指定哪种颜色通道应当保留,其余部分灰度处理</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡出淡入效果
 </summary>
 <param name="要使用背景淡出淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.01</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap)">
 <summary>
 对指定控件背景实现新图像的淡出淡入效果
 </summary>
 <param name="要使用背景淡出淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap)">
 <summary>
 对指定控件背景实现新图像的淡入效果
 </summary>
 <param name="要使用背景淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡入效果
 </summary>
 <param name="要使用背景淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.005</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出(System.Windows.Forms.Control@,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡出效果
 </summary>
 <param name="要使用背景淡出的控件"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.01</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出(System.Windows.Forms.Control@)">
 <summary>
 对指定控件背景实现新图像的淡出效果
 </summary>
 <param name="要使用背景淡出的控件"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.截取屏幕画面(System.Int32,System.Boolean)">
 <summary>
 截取指定序号的整个屏幕画面作为图像
 </summary>
 <param name="屏幕索引"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.图形图像.彩色文字图像.数值调整">
 <summary>
 格式：ChValue=显示文本,目标控件名称,绑定的属性名称,最小值,最大值,当前值
 </summary>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.输出图像">
 <summary>
 最终输出图像
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.字体">
 <summary>
 字体
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.描边颜色">
 <summary>
 文字描边颜色
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.图形图像.天气图.支持的天气类型">
 <summary>
 天气图所支持的天气类型，这些类型有与之对应的图片
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.图形图像.天气图.获取天气图像(System.String)">
 <summary>
 智能提取天气类型字符串中天气的类型，并返回对应的图像
 <list type="bullet">"示例1： 获取天气图像("小雨")</list>
 <list type="bullet">"示例2： 获取天气图像("外面在下小雨")</list>
 </summary>
 <param name="天气类型字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.图形图像.获取渐变对应颜色(System.Drawing.Color,System.Drawing.Color,System.Single)">
 <summary>
 获取由一种颜色到另一种颜色渐变过程中指定位置的颜色
 </summary>
 <param name="起始颜色">渐变的起始颜色</param>
 <param name="结束颜色">渐变的结束颜色</param>
 <param name="获取位置">位置百分比，位于0和1之间</param>
 <returns></returns>
</member>
<member name="M:DSAPI.图形图像.获取渐变对应颜色(System.Drawing.Color[],System.Single)">
 <summary>
 获取由一种颜色到另一种颜色渐变过程中指定位置的颜色
 </summary>
 <param name="颜色数组">一系列用来平均分布渐变颜色的颜色数组</param>
 <param name="获取位置">位置百分比，位于0和1之间</param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.线性提取(System.String,System.UInt32[])">
 <summary>
 从0开始依次提取指定长度的字符串，返回提取后的字符串数组
 <para>示例：</para>
 <para>线性提取("123456789",{2,1,4,2})</para>
 <para>返回 {"12","3","4567","89"}</para>
 </summary>
 <param name="源文本"></param>
 <param name="依次提取的长度"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.插入字符串数组(System.String[],System.String[])">
 <summary>
 将指定的数组中每个字符串依次插入到目标字符串数组之间，并返回合并后的字符串
 <para>示例</para>
 <para>插入字符串数组({"2021","02","21","15:00"},{"年","月","日"}</para>
 <para>返回"2021年02月21日15:00"</para>
 </summary>
 <param name="源数组"></param>
 <param name="要插入的数组"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.插入字符串数组(System.String[],System.String)">
 <summary>
 将指定的字符串中每个字符依次插入到目标字符串数组之间，并返回合并后的字符串
 <para>示例</para>
 <para>插入字符串数组({"2021","02","21","15:00"},{"年月日"}</para>
 <para>返回"2021年02月21日15:00"</para>
 </summary>
 <param name="源数组"></param>
 <param name="要插入的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.包含(System.String,System.String,System.Boolean)">
 <summary>
 判断是否包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.包含(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否完全包含指定字符串数组
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.包含其一(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否至少包含指定字符串数组中的一个
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字体.安装字体到系统(System.String)">
 <summary>
 将一个字体文件安装到操作系统的"字体"文件夹中
 <para>成功返回True,失败返回False</para>
 <para>该操作可能需要系统管理员权限</para>
 </summary>
 <param name="字体文件路径">字体文件路径,如 d:\宋体.ttf</param>
 <returns></returns>
</member>
<member name="M:DSAPI.字体.从系统中删除字体(System.String)">
 <summary>
 从操作系统的"字体"文件夹内删除指定的字体文件
 <para>成功返回True,失败返回False</para>
 <para>该操作可能需要系统管理员权限</para>
 </summary>
 <param name="字体名称">字体文件包含的一系列字体名称</param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值`1">
 <summary>
 一个由键名称和一个值对象组成的键值对,键名称区分大小写
 </summary>
 <typeparam name="值类型"></typeparam>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`1">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
 <typeparam name="值类型"></typeparam>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.生成INI字符串(System.String,System.Boolean,System.Boolean)">
 <summary>
 从当前的键值列表生成一个指定节点名称的字段列表字符串
 <para>输出示例：</para>
 <para>[节点名称]<br/>键名称1=键值...<br/>键名称2=键值....<br/>键名称3=键值....</para>
 </summary>
 <param name="节点名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.导入INI字符串到字典(System.String)">
 <summary>
 一个INI字符串中的字段和值添加到字典中
 </summary>
 <param name="INI字符串"></param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`1.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`1.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.添加或设置(System.String,`0)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="键名称"></param>
 <param name="值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.添加(`0)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.删除(System.Func{DSAPI.神扩展.DS字典.键值{`0},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`1.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.包含(System.Func{DSAPI.神扩展.DS字典.键值{`0},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.提取键值(System.Func{DSAPI.神扩展.DS字典.键值{`0},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`1.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值{`0},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值II`2">
 <summary>
 一个由键名称和两个值对象组成的键值对,键名称区分大小写
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`2">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`2.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`2.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.添加或设置(System.String,`0,`1)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="键名称"></param>
 <param name="值1"></param>
 <param name="值2"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.添加(`0,`1)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="值1"></param>
 <param name="值2"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.删除(System.Func{DSAPI.神扩展.DS字典.键值II{`0,`1},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`2.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.包含(System.Func{DSAPI.神扩展.DS字典.键值II{`0,`1},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.提取键值(System.Func{DSAPI.神扩展.DS字典.键值II{`0,`1},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`2.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值II{`0,`1},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值III`3">
 <summary>
 一个由键名称和三个值对象组成的键值对,键名称区分大小写
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`3">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`3.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`3.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.添加或设置(System.String,`0,`1,`2)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="键名称"></param>
 <param name="值1"></param>
 <param name="值2"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.添加(`0,`1,`2)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="值1"></param>
 <param name="值2"></param>
 <param name="值3"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.删除(System.Func{DSAPI.神扩展.DS字典.键值III{`0,`1,`2},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`3.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.包含(System.Func{DSAPI.神扩展.DS字典.键值III{`0,`1,`2},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.提取键值(System.Func{DSAPI.神扩展.DS字典.键值III{`0,`1,`2},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`3.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值III{`0,`1,`2},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值IV`4">
 <summary>
 一个由键名称和四个值对象组成的键值对,键名称区分大小写
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
 <typeparam name="值类型4"></typeparam>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`4">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
 <typeparam name="值类型4"></typeparam>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`4.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`4.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.添加或设置(System.String,`0,`1,`2,`3)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="键名称"></param>
 <param name="值1"></param>
 <param name="值2"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.添加(`0,`1,`2,`3)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="值1"></param>
 <param name="值2"></param>
 <param name="值3"></param>
 <param name="值4"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.删除(System.Func{DSAPI.神扩展.DS字典.键值IV{`0,`1,`2,`3},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`4.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.包含(System.Func{DSAPI.神扩展.DS字典.键值IV{`0,`1,`2,`3},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.提取键值(System.Func{DSAPI.神扩展.DS字典.键值IV{`0,`1,`2,`3},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`4.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值IV{`0,`1,`2,`3},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值V`5">
 <summary>
 一个由键名称和五个值对象组成的键值对,键名称区分大小写
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
 <typeparam name="值类型4"></typeparam>
 <typeparam name="值类型5"></typeparam>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`5">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
 <typeparam name="值类型1"></typeparam>
 <typeparam name="值类型2"></typeparam>
 <typeparam name="值类型3"></typeparam>
 <typeparam name="值类型4"></typeparam>
 <typeparam name="值类型5"></typeparam>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`5.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`5.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.添加或设置(System.String,`0,`1,`2,`3,`4)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="键名称"></param>
 <param name="值1"></param>
 <param name="值2"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.添加(`0,`1,`2,`3,`4)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <param name="值1"></param>
 <param name="值2"></param>
 <param name="值3"></param>
 <param name="值4"></param>
 <param name="值5"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.删除(System.Func{DSAPI.神扩展.DS字典.键值V{`0,`1,`2,`3,`4},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`5.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.包含(System.Func{DSAPI.神扩展.DS字典.键值V{`0,`1,`2,`3,`4},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.提取键值(System.Func{DSAPI.神扩展.DS字典.键值V{`0,`1,`2,`3,`4},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`5.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值V{`0,`1,`2,`3,`4},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值VI`6">
 <summary>
 一个由键名称和六个值对象组成的键值对,键名称区分大小写
 </summary>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`6">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`6.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`6.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.添加或设置(System.String,`0,`1,`2,`3,`4,`5)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.添加(`0,`1,`2,`3,`4,`5)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.删除(System.Func{DSAPI.神扩展.DS字典.键值VI{`0,`1,`2,`3,`4,`5},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`6.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.包含(System.Func{DSAPI.神扩展.DS字典.键值VI{`0,`1,`2,`3,`4,`5},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.提取键值(System.Func{DSAPI.神扩展.DS字典.键值VI{`0,`1,`2,`3,`4,`5},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`6.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值VI{`0,`1,`2,`3,`4,`5},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值VII`7">
 <summary>
 一个由键名称和七个值对象组成的键值对,键名称区分大小写
 </summary>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`7">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`7.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`7.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.添加或设置(System.String,`0,`1,`2,`3,`4,`5,`6)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.添加(`0,`1,`2,`3,`4,`5,`6)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.删除(System.Func{DSAPI.神扩展.DS字典.键值VII{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`7.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.包含(System.Func{DSAPI.神扩展.DS字典.键值VII{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.提取键值(System.Func{DSAPI.神扩展.DS字典.键值VII{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`7.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值VII{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值VIII`8">
 <summary>
 一个由键名称和八个值对象组成的键值对,键名称区分大小写
 </summary>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`8">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`8.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`8.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.添加或设置(System.String,`0,`1,`2,`3,`4,`5,`6,`7)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.添加(`0,`1,`2,`3,`4,`5,`6,`7)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.删除(System.Func{DSAPI.神扩展.DS字典.键值VIII{`0,`1,`2,`3,`4,`5,`6,`7},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`8.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.包含(System.Func{DSAPI.神扩展.DS字典.键值VIII{`0,`1,`2,`3,`4,`5,`6,`7},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.提取键值(System.Func{DSAPI.神扩展.DS字典.键值VIII{`0,`1,`2,`3,`4,`5,`6,`7},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`8.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值VIII{`0,`1,`2,`3,`4,`5,`6,`7},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值IX`9">
 <summary>
 一个由键名称和九个值对象组成的键值对,键名称区分大小写
 </summary>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`9">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`9.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`9.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.添加或设置(System.String,`0,`1,`2,`3,`4,`5,`6,`7,`8)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.添加(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.删除(System.Func{DSAPI.神扩展.DS字典.键值IX{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`9.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.包含(System.Func{DSAPI.神扩展.DS字典.键值IX{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.提取键值(System.Func{DSAPI.神扩展.DS字典.键值IX{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`9.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值IX{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.神扩展.DS字典.键值X`10">
 <summary>
 一个由键名称和十个值对象组成的键值对,键名称区分大小写
 </summary>
</member>
<member name="T:DSAPI.神扩展.DS字典.DS字典`10">
 <summary>
 一个由键名称和值对象组成的键值对的动态的可增删改查的的键值集合
 </summary>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`10.项(System.String)">
 <summary>
 获取指定名称的键值项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`10.键值列表">
 <summary>
 获取完整的键值列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.添加或设置(System.String,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
 <summary>
 向集合设置一个键值对,如果键已存在,则更新对应的值
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.添加(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
 <summary>
 向集合设置一个键值对,将以自动生成的GUID作为键名称
 <para>如果指定的键不存在,则自动添加</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.删除(System.String)">
 <summary>
 从集合中删除指定名称的键值
 </summary>
 <param name="键名称"></param>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.删除(System.Func{DSAPI.神扩展.DS字典.键值X{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Boolean})">
 <summary>
 从集合中删除满足条件键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件,满足条件的键值将从集合中删除</param>
</member>
<member name="P:DSAPI.神扩展.DS字典.DS字典`10.集合数量">
 <summary>
 返回键值集合的键值项数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.清空">
 <summary>
 清空键值集合
 </summary>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.包含(System.String)">
 <summary>
 检查集合中是否包含指定的键
 </summary>
 <param name="键名称">要检查的键名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.包含(System.Func{DSAPI.神扩展.DS字典.键值X{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Boolean})">
 <summary>
 检查集合中是否包含满足指定条件的键值
 </summary>
 <param name="满足条件">传入键值,并判断是否满足指定的条件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.提取键值(System.Func{DSAPI.神扩展.DS字典.键值X{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称和值
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.DS字典.DS字典`10.提取键名称(System.Func{DSAPI.神扩展.DS字典.键值X{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Boolean})">
 <summary>
 提取集合中满足条件的键名称
 </summary>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.如果(System.Boolean,System.Object,System.Object)">
 <summary>
 根据传入的表达式计算结果，获取True或False时不同的对象
 </summary>
 <param name="判断条件">要执行的表达式，该表达式返回为Boolean类型的结果</param>
 <param name="True时返回">表达式执行结果为True时返回的值</param>
 <param name="False时返回">表达式执行结果为False时返回的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.如果(System.Boolean,System.Action)">
 <summary>
 根据传入的表达式计算结果，决定是否执行指定的方法
 </summary>
 <param name="判断条件">要执行的表达式，该表达式返回为Boolean类型的结果</param>
 <param name="True时执行">表达式执行结果为True时执行的方法</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.如果是True(System.Boolean,System.Action)">
 <summary>
 根据传入的表达式计算结果，决定是否执行指定的方法
 </summary>
 <param name="判断条件">要执行的表达式，该表达式返回为Boolean类型的结果</param>
 <param name="True时执行">表达式执行结果为True时执行的方法</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.转16进制字符串(System.Collections.Generic.List{System.Byte},System.String)">
 <summary>
 将一个Byte列表生成16进制字符串
 </summary>
 <param name="Lt"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.XML节点值(System.String,System.String)">
 <summary>
 从传入的XML格式的字符串中提取指定节点的值
 </summary>
 <param name="S"></param>
 <param name="节点名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.XML节点所有值(System.String,System.String)">
 <summary>
 从传入的XML格式的字符串中提取指定节点的所有的值
 </summary>
 <param name="S"></param>
 <param name="节点名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.导出控件属性到Json(System.Windows.Forms.Control,DSAPI.神扩展.DS字典.DS字典{System.String,System.String},System.Boolean)">
 <summary>
 保存指定控件及其所有指定类型子控件的指定属性值到Json字符串
 </summary>
 <param name="字典">一个DS字典，值对应控件名称字符串,值2对应要保存的控件属性名称</param>
 <param name="包含子级的子级">指示是否同时保存子级容器内的控件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.导入Json到控件属性(System.Windows.Forms.Control,System.String)">
 <summary>
 从一个Json格式的字符串，将保存的控件属性值应用到指定控件
 </summary>
 <param name="父控件"></param>
 <param name="Json字符串"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.转Base64字符串(System.Drawing.Bitmap)">
 <summary>
 将一个图像转换为Base64字符串的表现形式
 </summary>
 <param name="原图"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转Base64字符串(System.Drawing.Image)">
 <summary>
 将一个图像转换为Base64字符串的表现形式
 </summary>
 <param name="原图"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Base64转图像(System.String)">
 <summary>
 从一个以Base64表示的字符串转换为图像
 </summary>
 <param name="S">以Base64表示的字符串</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转图像(System.Byte[])">
 <summary>
 从一个字节数组转换为图像
 </summary>
 <param name="S">原始的图像Byte()数据</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.数值(System.Boolean)">
 <summary>
 将一个Boolean类型转为1或0的数值,True时1,False则为0
 </summary>
 <param name="Bl"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从DataRow取值``1(``0@,System.Data.DataRow)">
 <summary>
 将一个对象中的属性和字段值,通过指定的DataRow单元格获取
 </summary>
 <typeparam name="T"></typeparam>
 <param name="要赋值的对象"></param>
 <param name="R"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建对象``1(System.Data.DataRow)">
 <summary>
 创建一个指定对象,对象的字段值和属性值将从DataRow单元格取值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="R"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建列表``1(System.Data.DataTable)">
 <summary>
 从一个DataTable创建指定类型的对象列表,每个对象从每一行的各字段获取字段值或属性值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.询问(System.String,System.String,DSAPI.神扩展.神扩展.询问对话框按钮)">
 <summary>
 显示一个系统的“消息窗口”，该窗口将显示一个问号图标和一个字符串信息，以及“是”和“否”按钮。
 </summary>
 <param name="问什么"></param>
 <returns>一个DialogResult返回值</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.询问(System.String,DSAPI.神扩展.神扩展.询问对话框按钮)">
 <summary>
 显示一个系统的“消息窗口”，该窗口将显示一个问号图标和一个字符串信息，以及“是”和“否”按钮。
 </summary>
 <param name="问什么"></param>
 <returns>一个DialogResult返回值</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从对象字段属性生成列(System.Windows.Forms.ListView,System.Object,System.Boolean)">
 <summary>
 遍历对象的字段和属性,将其名称添加到ListView控件作为新的列
 </summary>
 <param name="DGV"></param>
 <param name="来源对象"></param>
 <param name="先清空原有的列"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从对象字段属性生成列(System.Windows.Forms.ListView,System.Type,System.Boolean)">
 <summary>
 遍历对象的字段和属性,将其名称添加到ListView控件作为新的列
 </summary>
 <param name="DGV"></param>
 <param name="来源类型"></param>
 <param name="先清空原有的列"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取颜色组成(System.Drawing.Bitmap,System.Int32)">
 <summary>
 获取图像的颜色组成,返回一个DS字典包装的数据,(颜色,数量,占全图百分比)
 </summary>
 <param name="源图"></param>
 <param name="色阶数">色阶范围1到255,色阶越多,提取的颜色越多</param>
 <returns>颜色,数量,占全图百分比</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取颜色组成(System.Drawing.Image)">
 <summary>
 获取图像的颜色组成,返回一个DS字典包装的数据,(颜色,数量,占全图百分比)
 </summary>
 <param name="源图"></param>
 <returns>颜色,数量,占全图百分比</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.生成ListViewItem``1(``0,System.Windows.Forms.ListView)">
 <summary>
 生成一个ListViewItem项,将根据ListView的每一列赋值对象中相应字段或属性的值
 </summary>
 <param name="来源对象"></param>
 <param name="Lv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从对象字段属性生成列(System.Windows.Forms.DataGridView,System.Object,System.Boolean)">
 <summary>
 遍历对象的字段和属性,将其名称添加到DataGridView控件作为新的列
 </summary>
 <param name="DGV"></param>
 <param name="来源对象"></param>
 <param name="先清空原有的列"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从对象字段属性生成列(System.Windows.Forms.DataGridView,System.Type,System.Boolean)">
 <summary>
 遍历对象类型的字段和属性,将其名称添加到DataGridView控件作为新的列
 </summary>
 <param name="DGV"></param>
 <param name="来源类型"></param>
 <param name="先清空原有的列"></param>
</member>
<member name="T:DSAPI.神扩展.神扩展.ST3">
 <summary>
 表示一个三态值的枚举
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.ST3.T1">
 <summary>
 三态中的状态一
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.ST3.T2">
 <summary>
 三态中的状态二
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.ST3.T3">
 <summary>
 三态中的状态三
 </summary>
</member>
<member name="T:DSAPI.神扩展.神扩展.三态值">
 <summary>
 一个表示有3种状态的结构值，通常用在具有3种状态的地方，如“是，否，取消”，或“成功，失败，未知”等。
 </summary>
</member>
<member name="T:DSAPI.神扩展.神扩展.是否">
 <summary>
 一个表示有2种状态的结构值，通常用在具有2种状态的地方，如“是，否”，或“成功，失败”等。
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Dll创建对象``1(System.String,System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件路径">Dll文件所在路径</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Dll创建对象``1(System.Byte[],System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件">Dll文件的二进制数组</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取重复元素(System.String)">
 <summary>
 从一个字符串中提取重复的元素列表字典,键值分别对应"字符串元素"和"出现的次数"
 </summary>
 <param name="源字符串">要进行分析的字符串</param>
 <returns>返回一个DS字典,键值分别对应"字符串元素"和"出现的次数"</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取不重复元素(System.String)">
 <summary>
 从一个字符串中提取不重复的元素列表字典,键值分别对应"字符串元素"和"出现的次数"
 </summary>
 <param name="源字符串">要进行分析的字符串</param>
 <returns>返回一个DS字典,键值分别对应"字符串元素"和"出现的次数"</returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置为单列列表样式(System.Windows.Forms.ListView)">
 <summary>
 将ListView设置为List列表方式呈现,且第一列宽度设置为ListView宽度。
 </summary>
 <param name="Lv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.所有TextBox显示为下划线(System.Windows.Forms.Control,System.Drawing.Pen,System.Boolean)">
 <summary>
 将窗体上的TextBox控件去掉边框,并在其下方绘制一条下划线
 </summary>
 <param name="控件">要操作的窗体</param>
 <param name="下划线">下划线要显示的线条样式</param>
 <param name="包括所有子容器">指示是否同时作用于窗体的子容器</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.清空所有项(System.Windows.Forms.ListView)">
 <summary>
 清除ListView控件里所有ListViewItem
 </summary>
 <param name="Lv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.清空所有分组(System.Windows.Forms.ListView)">
 <summary>
 清除ListView控件里所有GroupItems
 </summary>
 <param name="Lv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.清空所有项和分组(System.Windows.Forms.ListView)">
 <summary>
 清除ListView控件里所有ListViewItem和GroupItems
 </summary>
 <param name="Lv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在或没有行(System.Data.DataTable)">
 <summary>
 判断一个DataTable是否是空的
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建ListViewItem(System.Data.DataRow)">
 <summary>
 将一个数据行生成一个ListViewItem
 </summary>
 <param name="R"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建ListViewItem(System.Data.DataRow,System.Windows.Forms.ListViewGroup)">
 <summary>
 将一个数据行生成一个ListViewItem
 </summary>
 <param name="R"></param>
 <param name="组">要将此ListViewItem设置为哪一个ListViewGroup</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.激活并全选文本(System.Windows.Forms.TextBox)">
 <summary>
 使一个TextBox控件获得焦点,并且全选所有文本
 </summary>
 <param name="Tb">要操作的TextBox控件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.激活并全选文本(System.Windows.Forms.NumericUpDown)">
 <summary>
 使一个NumericUpDown控件获得焦点,并且全选所有文本
 </summary>
 <param name="Nb">要操作的NumericUpDown控件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.去除头尾空格后的字符串(System.Windows.Forms.TextBox)">
 <summary>
 获取去掉了头尾空格的字符串
 </summary>
 <param name="Tb">要操作的TextBox控件</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.是空字符串(System.Windows.Forms.TextBox,System.Boolean)">
 <summary>
 判断TextBox控件的Text属性是否是零长度的字符串
 </summary>
 <param name="Tb">要操作的TextBox控件</param>
 <param name="排除头尾空格">如果为False,则空格被视为有效字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.返回(System.Windows.Forms.Form,System.Windows.Forms.DialogResult)">
 <summary>
 返回窗口属性DialogResult
 </summary>
 <param name="F"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置模态自动化(System.Windows.Forms.Form,System.Windows.Forms.Button,System.Windows.Forms.Button,System.Func{System.Boolean})">
 <summary>
 使一个窗体在以ShowDialg时,自动实现OK按钮和Cancel按钮的返回代码
 </summary>
 <param name="Fm">要设置的窗体</param>
 <param name="OK按钮">指定一个存在于窗体的按钮,该按钮点击后窗体将返回DialogResult.OK</param>
 <param name="Cancel按钮">指定一个存在于窗体的按钮,该按钮点击后窗体将返回DialogResult.Cancel</param>
 <param name="点击OK按钮时先判断条件">如有必要,可指定一个Func判断方法,这将在窗体返回DialogResult.OK前先执行,如果方法返回False,则不再返回DialogResult.OK,而是返回当前调用此处代码的地方,例如,您可以传入一个function判断窗体上所有的TextBox均已输入内容</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.有未填写的TextBox控件(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 检查窗体或控件的TextBox类型的子控件中是否包含了零长度的字符串文本,如果参数排除头尾空格,则如果字符串完全由空格组成,也被识别为零长度
 </summary>
 <param name="Fm">要从中检查的窗体或控件</param>
 <param name="也查找子控件">指定是否检查其子级控件内的TextBox</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历日期(System.DateTime,System.DateTime,System.Action{System.DateTime})">
 <summary>
 按天从起始日期到结束日期进行遍历
 </summary>
 <param name="起始日期"></param>
 <param name="结束日期"></param>
 <param name="遍历过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.数据(System.Data.DataTable,System.Boolean)">
 <summary>
 取DataTable中第1行第1列的单元格值
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回数组中的第一个元素
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.最后一个``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回数组中的最后一个元素
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置按ESC键关闭(System.Windows.Forms.Form,System.Boolean)">
 <summary>
 指示当用户按下键盘上的Esc键时是否需要关闭该窗体
 </summary>
 <param name="Fm">要操作的窗体</param>
 <param name="按ESC键时关闭">True表示需要关闭,False表示不需要关闭</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.延时微秒(System.Int64)">
 <summary>
 实现一个微秒级的延时
 </summary>
 <param name="微秒">要延时的微秒数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并``1(``0,``0[])">
 <summary>
 返回一个已将其他相同类型的对象数据合并到该对象后的新的对象
 例如:数值类的将进行做加法运算,列表或数组类的做添加处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="首个被用来合并的对象"></param>
 <param name="其他同类对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并``1(``0,System.Collections.Generic.List{``0})">
 <summary>
 返回一个已将其他相同类型的对象数据合并到该对象后的新的对象
 例如:数值类的将进行做加法运算,列表或数组类的做添加处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="首个被用来合并的对象"></param>
 <param name="其他同类对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并``1(System.Collections.Generic.List{``0})">
 <summary>
 返回一个已将其他相同类型的对象数据合并后的新的对象
 例如:数值类的将进行做加法运算,列表或数组类的做添加处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="其他同类对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并``1(``0[])">
 <summary>
 返回一个已将其他相同类型的对象数据合并后的新的对象
 例如:数值类的将进行做加法运算,列表或数组类的做添加处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="其他同类对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回一个已将其他相同类型的对象数据合并后的新的对象
 例如:数值类的将进行做加法运算,列表或数组类的做添加处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="源">要合并的源</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.扩展名(System.String,System.Boolean)">
 <summary>
 假定字符串是一个文件路径或文件名时，返回其扩展名部分
 </summary>
 <param name="S"></param>
 <param name="转为小写">是否转为小写格式</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.全选(System.Windows.Forms.TextBox)">
 <summary>
 全选TextBox控件中的文本
 </summary>
 <param name="Tb"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.全选(System.Windows.Forms.NumericUpDown)">
 <summary>
 全选NumericUpDown控件中的文本
 </summary>
 <param name="Tb"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.滚动到末尾(System.Windows.Forms.TextBox)">
 <summary>
 将光标定位并滚动到文本末尾
 </summary>
 <param name="Tb"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.打开串口配置窗口(System.IO.Ports.SerialPort@,System.Windows.Forms.Form)">
 <summary>
 打开一个针对指定SerialPort的配置界面，配置完成后，如果串口已打开，则串口可能需要重新打开才能生效
 </summary>
 <param name="串口">要配置的串口</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加到文本结尾(System.Windows.Forms.TextBox,System.String,System.Boolean,System.Boolean)">
 <summary>
 将指定的内容追加到TextBox文本结尾,并可设置是否自动将光标转移到结尾
 </summary>
 <param name="Tb"></param>
 <param name="追加字符串">要追加到TextBox的字符串</param>
 <param name="光标转移到结尾"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加到文本结尾(System.Windows.Forms.RichTextBox,System.String,System.Boolean,System.Boolean)">
 <summary>
 将指定的内容追加到RichTextBox文本结尾,并可设置是否自动将光标转移到结尾
 </summary>
 <param name="RT"></param>
 <param name="追加字符串">要追加到RichTextBox的字符串</param>
 <param name="光标转移到结尾"></param>
</member>
<member name="P:DSAPI.神扩展.神扩展.文本编辑器.允许输入空文本">
 <summary>
 指示是否允许用户不输入任何字符,包括完全由空格组成的字符串
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转换为长路径(System.String)">
 <summary>
 将一个变短的文件路径转换为原始长路径
 </summary>
 <param name="短路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转换为短路径(System.String)">
 <summary>
 将一个超长的文件路径转换为短路径
 </summary>
 <param name="长路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.截取局部(System.Drawing.Bitmap,System.Drawing.Rectangle)">
 <summary>
 从一个图片中截取一个矩形区域局部图像
 </summary>
 <param name="源图"></param>
 <param name="截取区域"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.截取局部(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 从一个图片中截取一个矩形区域局部图像
 </summary>
 <param name="源图"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不为空(System.String,System.Boolean)">
 <summary>
 检查一个字符串是否为Nothing/Null或是零长度,可选检查是否全部由TAB或空格组成
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不为空(System.Collections.ICollection)">
 <summary>
 检查一个集合是否是空的(不存在或者没有任何项的)
 </summary>
 <param name="IC"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.限定绘制区域(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
 <summary>
 限定GDI+绘制时的有效区域,这针大大提升GDI+绘图性能
 </summary>
 <param name="G"></param>
 <param name="限定区域"></param>
 <param name="自动扩展边缘2像素"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.分割并解析为字符串数组(System.String,System.Char)">
 <summary>
 解析字符串，并以分割符分割成字符串数组
 <para>示例</para>
 <para>1,2,3,"4,5",6,"7,8,9"</para>
 <para>输出<br/>1<br/>2<br/>3<br/>4,5<br/>6<br/>7,8,9</para>
 </summary>
 <param name="SS">处理前的字符串</param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取字段值(System.String,System.String,System.String[],System.Boolean,System.String)">
 <summary>
 提取字符串中等于号后面的值，通常，这用在类似INI的 字段＝值 这样的一行或多行字符串中，该方法忽略大小写
 <para>比如，提取字段值("Link")<br/>这将遍历所有行，并找到"Link="开头的一行，返回该行=等号后面的字符串</para>
 </summary>
 <param name="S"></param>
 <param name="字段名">要查找的字段名称，即行中位于等号左边的字符串，忽略首尾空格</param>
 <param name="移除字符">指示哪些字符应从返回值中移除</param>
 <param name="去除值头尾空格">指示是否去掉获取的字段的值的头尾空格</param>
 <param name="当值不存在时返回">指示将没有找到指定的字段时，应返回什么内容</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取字段值(System.String,System.String,System.String,System.Boolean,System.String)">
 <summary>
 提取字符串中等于号后面的值，通常，这用在类似INI的 字段＝值 这样的一行或多行字符串中，该方法忽略大小写
 <para>比如，提取字段值("Link")<br/>这将遍历所有行，并找到"Link="开头的一行，返回该行=等号后面的字符串</para>
 </summary>
 <param name="S"></param>
 <param name="字段名">要查找的字段名称，即行中位于等号左边的字符串，忽略首尾空格</param>
 <param name="移除字符">指示哪些字符应从返回值中移除</param>
 <param name="去除值头尾空格">指示是否去掉获取的字段的值的头尾空格</param>
 <param name="当值不存在时返回">指示将没有找到指定的字段时，应返回什么内容</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取字段值(System.String,System.String,System.Boolean,System.String)">
 <summary>
 提取字符串中等于号后面的值，通常，这用在类似INI的 字段＝值 这样的一行或多行字符串中，该方法忽略大小写
 <para>比如，提取字段值("Link")<br/>这将遍历所有行，并找到"Link="开头的一行，返回该行=等号后面的字符串</para>
 </summary>
 <param name="S"></param>
 <param name="字段名">要查找的字段名称，即行中位于等号左边的字符串，忽略首尾空格</param>
 <param name="去除值头尾空格">指示是否去掉获取的字段的值的头尾空格</param>
 <param name="当值不存在时返回">指示将没有找到指定的字段时，应返回什么内容</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在时补默认值(System.String,System.String)">
 <summary>
 当一个字符串为空Null时,自动赋值为指定的默认值
 </summary>
 <param name="S"></param>
 <param name="默认值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.闪烁任务栏窗口(System.Windows.Forms.Form,System.Int32)">
 <summary>
 闪烁窗口所在任务栏按钮，以提醒用户注意
 </summary>
 <param name="宿主窗口"></param>
 <param name="闪烁次数"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.CPU处理消息队列">
 <summary>
 处理当前在消息队列中的所有 Windows 消息。
 <para>调用Application.DoEvents()</para>
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.允许拖放节点(System.Windows.Forms.TreeView,DSAPI.TV节点拖放.节点拖放完毕EventHandler)">
 <summary>
 使TreeView控件支持节点拖放
 </summary>
 <param name="Tv"></param>
 <param name="绑定拖放事件">当用户拖放节点完毕时触发的事件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.允许拖放节点(System.Windows.Forms.TreeView,System.UInt32[],System.UInt32[],DSAPI.TV节点拖放.节点拖放完毕EventHandler)">
 <summary>
 使TreeView控件支持节点拖放
 </summary>
 <param name="Tv"></param>
 <param name="绑定拖放事件">当用户拖放节点完毕时触发的事件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.禁止拖放节点(System.Windows.Forms.TreeView)">
 <summary>
 使TreeView控件禁止节点拖放
 </summary>
 <param name="Tv"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.拖放时自动展开鼠标经过的节点(System.Windows.Forms.TreeView,System.Boolean)">
 <summary>
 当启用节点拖放时，指示是否在拖放时自动展开鼠标经过的节点。
 </summary>
 <param name="Tv"></param>
 <param name="自动展开"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.长度(System.Collections.ICollection)">
 <summary>
 返回一个集合的项数量
 </summary>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.数量(System.Collections.ICollection)">
 <summary>
 返回一个集合的项数量
 </summary>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在且不为空(System.Collections.ICollection)">
 <summary>
 判断一个集合是否存在并且项数量不为零
 </summary>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.长度(System.String)">
 <summary>
 返回一个字符串的字符数量
 </summary>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.昨天(System.DateTime)">
 <summary>
 返回指定日期的前一天
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.明天(System.DateTime)">
 <summary>
 返回指定日期的后一天
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.前天(System.DateTime)">
 <summary>
 返回指定日期的前两天
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.后天(System.DateTime)">
 <summary>
 返回指定日期的后两天
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.去年(System.DateTime)">
 <summary>
 返回指定日期的前一年
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.明年(System.DateTime)">
 <summary>
 返回指定日期的后一年
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.前年(System.DateTime)">
 <summary>
 返回指定日期的前两年
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.后年(System.DateTime)">
 <summary>
 返回指定日期的后两年
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.上个月(System.DateTime)">
 <summary>
 返回指定日期的前一月
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.下个月(System.DateTime)">
 <summary>
 返回指定日期的后一月
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环执行(System.Func{System.Boolean},System.Action,System.Int32,System.Boolean)">
 <summary>
 循环执行指定的方法，直到满足循环中止条件或是达到最多执行次数。
 </summary>
 <param name="循环中止条件">当条件返回True则立即退出循环</param>
 <param name="执行的方法"></param>
 <param name="最多执行次数"></param>
 <param name="循环开始时先执行一次指定方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环执行(System.Action,System.Int32,System.Boolean)">
 <summary>
 循环执行指定的方法，直到达到最多执行次数。
 </summary>
 <param name="执行的方法"></param>
 <param name="最多执行次数"></param>
 <param name="循环开始时先执行一次指定方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.异步循环执行(System.Func{System.Boolean},System.Action,System.Int32,System.Boolean)">
 <summary>
 在异步线程中循环执行指定的方法，直到满足循环中止条件或是达到最多执行次数。
 </summary>
 <param name="循环中止条件">当条件返回True则立即退出循环</param>
 <param name="执行的方法"></param>
 <param name="最多执行次数"></param>
 <param name="循环开始时先执行一次指定方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.异步循环执行(System.Action,System.Int32,System.Boolean)">
 <summary>
 在异步线程中循环执行指定的方法，直到达到最多执行次数。
 </summary>
 <param name="执行的方法"></param>
 <param name="最多执行次数"></param>
 <param name="循环开始时先执行一次指定方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.打开文件(System.String)">
 <summary>
 以操作系统默认的打开方式打开指定的文件
 </summary>
 <param name="文件路径"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.打开文件(System.String,System.String)">
 <summary>
 以操作系统默认的打开方式打开指定的文件
 </summary>
 <param name="文件路径"></param>
 <param name="参数">传递给可执行程序的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.启动程序(System.String)">
 <summary>
 打开指定的文件并等待进程启动完成
 </summary>
 <param name="可执行文件路径"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.启动程序(System.String,System.String)">
 <summary>
 打开指定的文件并等待进程启动完成
 </summary>
 <param name="可执行文件路径"></param>
 <param name="参数">传递给可执行程序的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.启动程序并等待进程退出(System.String,System.Int32)">
 <summary>
 打开指定的文件并等待进程启动完成
 </summary>
 <param name="可执行文件路径"></param>
 <param name="默认超时时间">超过该时间立即返回不再继续等待</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.启动程序(System.String,System.String,System.Int32)">
 <summary>
 打开指定的文件并等待进程启动完成
 </summary>
 <param name="可执行文件路径"></param>
 <param name="参数">传递给可执行程序的参数</param>
  ''' <param name="默认超时时间">超过该时间立即返回不再继续等待</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.执行内部方法(System.Type,System.Object,System.String,System.Object[])">
 <summary>
 执行目标对象中指定的方法,方法名称不区分大小写
 </summary>
 <param name="Tp"></param>
 <param name="目标对象">该方法所在的对象</param>
 <param name="方法名">方法名称，不区分大小写</param>
 <param name="参数">要传入到方法中的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.执行内部方法(System.Object,System.String,System.Object[])">
 <summary>
 执行目标对象中指定的方法,方法名称不区分大小写
 </summary>
 <param name="目标对象">该方法所在的对象</param>
 <param name="方法名">方法名称，不区分大小写</param>
 <param name="参数">要传入到方法中的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.执行内部方法(System.Type,System.Object,System.String)">
 <summary>
 执行目标对象中指定的方法,方法名称不区分大小写
 </summary>
 <param name="Tp"></param>
 <param name="目标对象">该方法所在的对象</param>
 <param name="方法名">方法名称，不区分大小写</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.执行内部方法(System.Type,System.Object,System.String,System.Object)">
 <summary>
 执行目标对象中指定的方法,方法名称不区分大小写
 </summary>
 <param name="Tp"></param>
 <param name="目标对象">该方法所在的对象</param>
 <param name="方法名">方法名称，不区分大小写</param>
 <param name="参数">要传入到方法中的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.执行内部方法(System.Object,System.String,System.Object)">
 <summary>
 执行目标对象中指定的方法,方法名称不区分大小写
 </summary>
 <param name="目标对象">该方法所在的对象</param>
 <param name="方法名">方法名称，不区分大小写</param>
 <param name="参数">要传入到方法中的参数</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.重启应用程序">
 <summary>
 退出并重新启动本程序
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.ASCII解码(System.Byte[])">
 <summary>
 获取经过ASCII解码后的字符串
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.UTF8解码(System.Byte[])">
 <summary>
 获取经过UTF8解码后的字符串
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Unicode解码(System.Byte[])">
 <summary>
 获取经过Unicode解码后的字符串
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.ASCII编码(System.String)">
 <summary>
 返回经过ASCII编码后的字节数组
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.UTF8编码(System.String)">
 <summary>
 返回经过UTF8编码后的字节数组
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Unicode编码(System.String)">
 <summary>
 返回经过Unicode编码后的字节数组
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除回车换行(System.String)">
 <summary>
 返回已经移除了CR和LF的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除结尾回车换行(System.String)">
 <summary>
 返回已经移除了结尾的CR和LF的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除头尾回车换行(System.String)">
 <summary>
 返回已经移除了头尾的CR和LF的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除头部回车换行(System.String)">
 <summary>
 返回已经移除了前部的CR和LF的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加回车换行(System.String)">
 <summary>
 返回已经添加了CRLF结尾的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.截图(System.Windows.Forms.Control)">
 <summary>
 截取控件或窗体的画面并生成一个Bitmap对象
 </summary>
 <param name="Ct"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.保存到文件(System.Drawing.Bitmap,System.String)">
 <summary>
 将图像保存到文件
 <para>支持格式：jpg,jpeg,png,bmp,gif,tif,tiff,emf,exif,ico,icon,wmf</para>
 </summary>
 <param name="B"></param>
 <param name="保存路径"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建文件夹路径(System.String,System.Boolean)">
 <summary>
 检查指定的文件路径中文件夹及子文件夹路径是否存在,如果不存在,则创建文件夹路径,包括子文件夹路径
 </summary>
 <param name="S">要检查并创建的完整文件夹路径</param>
 <param name="路径含文件名">当路径最后一级不是以路径分割符"\"结尾时,指示最后一级是文件还是文件夹</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.模态显示(System.Windows.Forms.Form)">
 <summary>
 以模态显示一个窗体，并等待返回值
 </summary>
 <param name="F"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.模态显示(System.Windows.Forms.Form,System.Windows.Forms.IWin32Window)">
 <summary>
 以模态显示一个窗体，并等待返回值
 </summary>
 <param name="F"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加CRC16校验(System.String,System.Boolean)">
 <summary>
 对字符串进行16进制CRC16位校验，并追加到字符串结尾
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加CRC16校验(System.Byte[],System.Boolean)">
 <summary>
 对数组进行16进制CRC16位校验，并追加到数组结尾
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.生成列表``1(``0[])">
 <summary>
 从数组生成一个可动态添加删除的List泛形列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.置顶(System.Windows.Forms.Form)">
 <summary>
 将一个窗体放到窗口最前面
 </summary>
 <param name="窗体"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.取消置顶(System.Windows.Forms.Form)">
 <summary>
 将一个窗体放到窗口回到原始的窗口层次
 </summary>
 <param name="窗体"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到``1(System.Object)">
 <summary>
 获取对象中的第一个指定类型的字段和属性
 </summary>
 <typeparam name="T">要查找的字段或属性类型</typeparam>
 <param name="目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到所有``1(System.Object)">
 <summary>
 获取对象中的所有指定类型的字段和属性
 </summary>
 <typeparam name="T">要查找的字段或属性类型</typeparam>
 <param name="目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.最后一天(System.DateTime)">
 <summary>
 获取指定年份的最后一天日期
 </summary>
 <param name="日期"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一天(System.DateTime)">
 <summary>
 获取指定年份的第一天日期,即当年的1月1日
 </summary>
 <param name="日期"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int16,System.Int16)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt16,System.UInt16)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int32,System.Int32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt32,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int64,System.Int64)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt64,System.UInt64)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Byte,System.Byte)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.SByte)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.Decimal)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.Single)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.Double)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Int16,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.UInt16,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Int32,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.UInt32,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Int64,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.UInt64,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Decimal,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Double,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转文件容量单位(System.Single,System.Boolean)">
 <summary>
 将数值转换为可读性强的文件容量大小单位的字符串
 <para>示例：1024将被转换为字符串“1KB”</para>
 </summary>
 <param name="当前值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int16,System.Int16,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int16,System.Int16,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt16,System.UInt16,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt16,System.UInt16,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int32,System.Int32,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int32,System.Int32,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt32,System.UInt32,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int64,System.Int64,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Int64,System.Int64,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt64,System.UInt64,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.UInt64,System.UInt64,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Byte,System.Byte,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Byte,System.Byte,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.SByte,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.SByte,System.SByte,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Decimal,System.Decimal,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Decimal,System.Decimal,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Single,System.Single,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Single,System.Single,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Double,System.Double,System.UInt32)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.百分比(System.Double,System.Double,System.UInt32,System.Boolean)">
 <summary>
 获取当前值与最大值的百分比
 </summary>
 <param name="当前值"></param>
 <param name="最大值"></param>
 <param name="保留小数位">要保留的小数位，默认值2</param>
 <param name="追加百分比符号">是否在结尾加上"%"字符</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.已运行了相同实例">
 <summary>
 检查是否已经运行了本程序的另一个实例
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.激活指定进程的主窗口(System.Diagnostics.Process)">
 <summary>
 如果一个进程有主窗口时，激活主窗口到前台显示
 </summary>
 <param name="P"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加``1(System.Collections.Generic.ICollection{``0},``0)">
 <summary>
 添加一个项到组合中
 </summary>
 <typeparam name="T"></typeparam>
 <param name="集合对象"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除``1(System.Collections.Generic.ICollection{``0}@,System.Func{``0,System.Boolean})">
 <summary>
 从集合中移除符合条件的项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="集合对象"></param>
 <param name="移除条件"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除``1(System.Collections.Generic.List{``0}@,System.Func{``0,System.Boolean})">
 <summary>
 从集合中移除符合条件的项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="集合对象"></param>
 <param name="移除条件"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.求和(System.Data.DataTable,System.Func{System.Data.DataRow,System.Decimal})">
 <summary>
 获取调用每行计算方法的求和结果
 </summary>
 <param name="Tb"></param>
 <param name="计算方法">传入DataRow对象，返回可被用来计算的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.补全当前路径(System.String)">
 <summary>
 将当前程序所在文件夹路径补充到该文件路径前
 </summary>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.压缩加密并保存到文件``1(``0,System.String)">
 <summary>
 将一个可序列化对象经过压缩和反转之后保存到文件
 <para>操作成功返回True,失败返回False</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="对象"></param>
 <param name="保存路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件解压缩并解密文件``1(System.String,System.Boolean)">
 <summary>
 将一个经过压缩和反转之后保存的文件逆向操作,解密和解压缩还原成实体对象
 <para>当文件不存在且设置不愿失败时创建新对象为True时,将创建一个新的实体对象</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="保存路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.压缩加密``1(``0)">
 <summary>
 返回一个可序列化对象经过压缩和反转之后的Byte数组
 </summary>
 <typeparam name="T"></typeparam>
 <param name="对象"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.解压缩解密``1(System.Byte[])">
 <summary>
 返回数组经过反转和解压缩之后反序列化的对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="数组"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.当前程序集名称">
 <summary>
 获取当前可执行程序的程序集名称
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.当前程序集版本">
 <summary>
 获取当前可执行程序的程序集版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.当前程序集名称和版本">
 <summary>
 获取当前可执行程序集的名称和版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.当前鼠标指针坐标">
 <summary>
 获取鼠标在屏幕上的坐标
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并(System.Data.DataTable,System.Data.DataTable)">
 <summary>
 返回一个DataTable与另一个DataTable合并后的DataTable
 </summary>
 <param name="Dt"></param>
 <param name="被合并的数据表">另一个被用来合并的DataTable</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.合并(System.Data.DataTable,System.Data.DataTable[])">
 <summary>
 返回一个DataTable与其他DataTable合并后的DataTable
 </summary>
 <param name="Dt"></param>
 <param name="被合并的数据表">一个或多个被用来合并的DataTable</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.农历日期(System.DateTime)">
 <summary>
 获取指定公历日期对应的农历日期字符串
 </summary>
 <param name="指定日期">用来转换的公历日期</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.随机(System.Int32,System.Int32,System.Boolean)">
 <summary>
 获取一个指定类型的随机整数
 </summary>
 <param name="最小值">随机过程中允许出现的最小值</param>
 <param name="最大值">随机过程中允许出现的最大值，如果不允许结果达到最大值，则随机结果最高为最大值-1</param>
 <param name="是否允许结果达到最大值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.是空的(System.Data.DataTable)">
 <summary>
 判断一个DataTable是不存在的，或者是没有任何行的
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.填充到ListView(System.Data.DataTable,System.Windows.Forms.ListView@)">
 <summary>
 将一个DataTable表填充到一个ListView控件中，这将会清除ListView原有的行和列
 </summary>
 <param name="Dt"></param>
 <param name="LV"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.填充到ListView(System.Data.DataTable,System.Windows.Forms.ListView@,System.Int32[])">
 <summary>
 将一个DataTable表填充到一个ListView控件中，这将会清除ListView原有的行和列
 <para>可以只提取指定的一列或多列</para>
 </summary>
 <param name="Dt"></param>
 <param name="LV"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置隔行不同颜色(System.Windows.Forms.DataGridView,System.Drawing.Color,System.Drawing.Color)">
 <summary>
 设置DGV隔行不同颜色,注意:不支持带透明度的颜色
 </summary>
 <param name="DGV"></param>
 <param name="奇数行颜色"></param>
 <param name="偶数行颜色"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.取消隔行不同颜色(System.Windows.Forms.DataGridView)">
 <summary>
 取消DGV隔行不同颜色
 </summary>
 <param name="DGV"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置列别名(System.Data.DataTable,DSAPI.神扩展.DS字典.DS字典{System.String})">
 <summary>
 返回一个更改了列标题后的DataTable
 </summary>
 <param name="DT">原始DataTable</param>
 <param name="DS字典">一个DS字典(Of String),键名称和值分别对应原列名称和别名</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留小数(System.Decimal,System.Int32)">
 <summary>
 将一个数值转换为保留了指定小数位的字符串
 </summary>
 <param name="值"></param>
 <param name="要保留的小数位"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留小数(System.Single,System.Int32)">
 <summary>
 将一个数值转换为保留了指定小数位的字符串
 </summary>
 <param name="值"></param>
 <param name="要保留的小数位"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留小数(System.Double,System.Int32)">
 <summary>
 将一个数值转换为保留了指定小数位的字符串
 </summary>
 <param name="值"></param>
 <param name="要保留的小数位"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.逐个字符(System.String)">
 <summary>
 将一个字符串转为一个由单字符组成的数组
 </summary>
 <param name="S">要转换的原始字符串</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加(System.Byte[],System.Byte[])">
 <summary>
 获取一个追加了指定数据的数组
 </summary>
 <param name="Bts"></param>
 <param name="追加的数组"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加(System.Byte[],System.Collections.Generic.List{System.Byte})">
 <summary>
 获取一个追加了指定数据的数组
 </summary>
 <param name="Bts"></param>
 <param name="追加的数组"></param>
 <returns></returns>
</member>
<member name="F:DSAPI.神扩展.神扩展.空值">
 <summary>
 表示一个Nothing/Null
 </summary>
</member>
<member name="T:DSAPI.神扩展.神扩展.请求参数">
 <summary>
 用以在“从网址下载字符串”或“从网址下载字节数组”方法中提供一组请求参数
 <para>参数将生成格式： 参数名称=值</para>
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含(System.String,System.String[],System.Boolean)">
 <summary>
 检查字符串是否同时包含指定数组中的所有字符串
 </summary>
 <param name="Item"></param>
 <param name="查询项"></param>
 <param name="按查询项先后顺序"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取(System.String,System.UInt32,System.UInt32)">
 <summary>
 提取从指定位置和长度的字符串
 </summary>
 <param name="S"></param>
 <param name="起始位"></param>
 <param name="长度"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.String,System.Action{System.String},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行。
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.String,System.Func{System.String,System.Boolean},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行，如果执行过程返回False，则立即退出遍历过程。
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.String,System.Action{System.String,System.Int32},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行，并向执行过程传入当前处理的行号。
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.String,System.Func{System.String,System.Int32,System.Boolean},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行，并向执行过程传入当前处理的行号，如果执行过程返回False，则立即退出遍历过程。
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行_高速无序(System.String,System.Action{System.String},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行。
 <para>以内存中的顺序进行遍历,该顺序不一定是从前到后。</para>
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行_高速无序(System.String,System.Func{System.String,System.Boolean},System.Boolean)">
 <summary>
 从0开始按顺序遍历所有行，如果执行过程返回False，则立即退出遍历过程。
 <para>以内存中的顺序进行遍历,该顺序不一定是从前到后。</para>
 </summary>
 <param name="S"></param>
 <param name="执行过程"></param>
 <param name="忽略空白行"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.发送电子邮件(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 将字符串作为邮件正文发送到指定的电子邮箱,发送成功返回“成功”,否则返回“失败”
 </summary>
 <param name="S"></param>
 <param name="发件人邮箱"></param>
 <param name="发件人邮箱密码"></param>
 <param name="收件人邮箱"></param>
 <param name="邮件主题内容"></param>
 <param name="邮箱需要验证"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.延时(System.Int32)">
 <summary>
 在指定的时间内阻塞当前线程
 </summary>
 <param name="毫秒数"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.等待(System.Int32)">
 <summary>
 在指定的时间内阻塞当前线程
 </summary>
 <param name="毫秒数"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取指定行(System.String,System.Int32)">
 <summary>
 提取指定行的内容,从第0行开始
 </summary>
 <param name="S"></param>
 <param name="要取的行号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取指定行(System.String,System.Int32[])">
 <summary>
 提取指定各行的内容,从第0行开始
 </summary>
 <param name="S"></param>
 <param name="要取的行号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除指定行(System.String,System.Int32)">
 <summary>
 移除指定行的内容,从第0行开始
 </summary>
 <param name="S"></param>
 <param name="要移除的行号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除指定行(System.String,System.Int32[])">
 <summary>
 移除指定各行的内容,从第0行开始
 </summary>
 <param name="S"></param>
 <param name="要移除的行号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.所有行(System.String,System.Boolean,System.Boolean)">
 <summary>
 提取字符串中所有的行
 </summary>
 <param name="S"></param>
 <param name="去除空行">指示是否要忽略没有字符或完全由空格字符组成的行</param>
 <param name="去除首尾空格">指示提取每一行时是否去掉行的首尾空格</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.前面插入(System.String,System.String,System.Boolean)">
 <summary>
 在字符串前部插入指定字符串
 </summary>
 <param name="S"></param>
 <param name="插入内容"></param>
 <param name="追加换行符"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.前面插入(System.String,System.Boolean,System.String,System.Boolean)">
 <summary>
 在字符串前部插入指定字符串
 </summary>
 <param name="S"></param>
 <param name="插入内容"></param>
 <param name="追加换行符"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在(System.Object)">
 <summary>
 检查目标是否是空对象，如果是空对象返回是，反之返回否
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在``1(``0)">
 <summary>
 检查目标是否是空对象，如果是空对象返回是，反之返回否
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在``1(``0)">
 <summary>
 检查目标是否是空对象，如果是空对象返回否，反之返回是
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.String,System.String[])">
 <summary>
 返回一个已经移除了指定字符或字符串的字符串
 <para>示例：</para>
 <para>移除("a")</para>
 <para>移除("a","b")</para>
 </summary>
 <param name="S"></param>
 <param name="要移除的字符">一个或多个字符或字符串，当有多个字符串时，使用逗号分割</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在或空白的(System.String,System.Boolean)">
 <summary>
 判断一个字符串是否是Nothing/Null，或只包含空格
 </summary>
 <param name="S"></param>
 <param name="包括仅由空格组成"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在或零长度(Microsoft.VisualBasic.Collection)">
 <summary>
 判断一个集合或数组是否为Nothing/Null，或者集合或数组是不存在任何项
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在或零长度(System.Collections.ICollection)">
 <summary>
 判断一个集合或数组是否为Nothing/Null，或者集合或数组是不存在任何项
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取所有数值(System.String)">
 <summary>
 从字符串中提取所有数值并返回一个Decimal数组
 </summary>
 <param name="源文本"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取所有数值2(System.String)">
 <summary>
 从字符串中提取所有数值并返回一个String数组
 </summary>
 <param name="源文本"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转字符串(System.Byte[],System.String)">
 <summary>
 使用指定的编码将字节数组转为文本字符串
 </summary>
 <param name="字节数组"></param>
 <param name="编码">要使用的编码，如"utf8、utf32、ascii、unicode"等</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转字符串(System.Byte[],System.Text.Encoding)">
 <summary>
 使用指定的编码将字节数组转为文本字符串
 </summary>
 <param name="字节数组"></param>
 <param name="编码">要使用的编码</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Text.Encoding,System.Int32,System.Boolean,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Text.Encoding,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Int32,System.Boolean,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="端口">指示Http请求将要发送到的服务端端口</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Int32,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="端口">指示Http请求将要发送到的服务端端口</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.追加到(System.Net.WebHeaderCollection,System.Net.WebHeaderCollection@)">
 <summary>
 将源Header中所有项追加到目标Headers中
 </summary>
 <param name="源"></param>
 <param name="目标"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Text.Encoding,System.Int32,System.Net.WebHeaderCollection,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Net.WebHeaderCollection,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Net.WebHeaderCollection,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字符串(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,System.Boolean,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Net.WebHeaderCollection,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Net.WebHeaderCollection,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Int32,System.Net.WebHeaderCollection,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="端口">指示Http请求将要发送到的服务端端口</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载字节数组(System.String,System.Int32,System.Net.WebHeaderCollection,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="端口">指示Http请求将要发送到的服务端端口</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Text.Encoding,System.Int32,System.Boolean,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Text.Encoding,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,System.Boolean,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Text.Encoding,System.Net.WebHeaderCollection,System.Int32,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Net.WebHeaderCollection,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识,Utf8编码传递和接收,超时间10秒
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Net.WebHeaderCollection,System.Int32,System.Boolean)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从网址下载DataTable(System.String,System.Net.WebHeaderCollection,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="编码">指示应以哪种编码进行请求和接收</param>
 <param name="读取超时">如果在指定的时间内没有收到服务端响应，则立即返回</param>
 <param name="不使用UserAgent">指示在请求的Header中是否包含UserAgent标识信息</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含(System.String,System.String,System.Boolean)">
 <summary>
 判断是否包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不包含(System.String,System.String,System.Boolean)">
 <summary>
 判断是否不包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不包含(System.String[],System.String,System.Boolean)">
 <summary>
 判断是否不包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不包含(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否完全不包含指定字符串数组
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含其一(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否至少包含指定字符串数组中的一个
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取``1(System.Collections.Generic.ICollection{``0},System.UInt32,System.UInt32)">
 <summary>
 从集合提取从指定位置和长度的集合,当提取长度超出集合范围时将立即返回。
 </summary>
 <param name="S"></param>
 <param name="起始位"></param>
 <param name="长度"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取``1(System.Collections.Generic.ICollection{``0},System.UInt32[])">
 <summary>
 从集合提取从指定位置和长度的集合,当提取长度超出集合范围时将立即返回。
 </summary>
 <param name="S"></param>
 <param name="位置数组">要提取的位置数组</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.随机提取``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 从集合随机提取指定数量的集合。
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.随机提取``1(System.Collections.Generic.ICollection{``0},System.UInt32,System.Boolean)">
 <summary>
 从集合随机提取指定数量的集合。
 </summary>
 <param name="S"></param>
 <param name="提取数量">要提取的位置数组</param>
 <param name="允许重复">指示提取时是否允许多次提取某一项</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取``1(System.Collections.Generic.ICollection{``0},System.UInt32)">
 <summary>
 从集合提取从0开始到长度的集合,当提取长度超出集合范围时将立即返回。
 </summary>
 <param name="S"></param>
 <param name="长度"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从尾部提取``1(System.Collections.Generic.ICollection{``0},System.Int32,System.Int32)">
 <summary>
 从数组中提取指定数量的项（从尾部开始）
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <param name="提取数量">要提取的项数量</param>
 <param name="提取后再从尾部去掉指定数量的字节">在提取后，还希望从尾部开始去掉指定长度的项数量</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.输出(System.Object,System.String,System.Func{System.Boolean})">
 <summary>
 输出到“输出窗口”
 </summary>
 <param name="S"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.输出到控制台(System.Object,System.String,System.Func{System.Boolean})">
 <summary>
 当条件为True时，输出到“输出窗口”
 </summary>
 <param name="S"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.序号``2(System.Collections.Generic.Dictionary{``0,``1},System.Int32)">
 <summary>
 获取字典中指定序号的项
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <param name="Dic">要从中获取指定项的字典对象</param>
 <param name="指定序号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项``1(System.Collections.ICollection,System.Func{``0,System.Object})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <param name="判断目标">用以判断作为重复标识的目标</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项_高速无序``1(System.Collections.ICollection,System.Func{``0,System.Object})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <param name="判断目标">用以判断作为重复标识的目标</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <param name="判断目标">用以判断作为重复标识的目标</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项_高速无序``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <param name="判断目标">用以判断作为重复标识的目标</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除重复项_高速无序``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回一个已经去掉重复项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.无">
 <summary>
 不使用任何图标
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.手形或停止或错误">
 <summary>
 消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号。
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.问号">
 <summary>
 消息框包含一个符号，该符号包含一个圆圈，圆圈中为问号。 不再建议使用问号消息图标，因为这种图标无法清楚地表示特定类型的消息，并且作为问题的消息表述可应用于任何消息类型。
 <para>此外，用户可能会将问号符号与帮助信息符合混淆。 因此，请不要在消息框中使用问号符号。 系统继续支持它包含的内容，只为满足反向兼容性。</para>
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.感叹号或警示">
 <summary>
  消息框包含一个符号，该符号包含一个黄色背景三角形，三角形中为感叹号。
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.普通消息i">
 <summary>
  消息框包含一个符号，该符号在圆圈中包含小写字母 i。
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,System.Action{System.Int32})">
 <summary>
 循环指定的操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环生成列表``1(System.Int32,System.Int32,System.Func{System.Int32,``0})">
 <summary>
 生成一个指定类型的对象列表
 </summary>
 <typeparam name="生成目标类型">要生成列表中每个对象的类型</typeparam>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用">调用指定方法并传入当前循环的索引，返回目标类型的对象
 <para>示例：function(Index) return "项"+Index </para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
 <summary>
 执行一个从起始点到结束点的循环操作，直到循环完成。如果中途调用方返回True则立即跳出循环。
 </summary>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。如果方法返回True则立即跳出循环。
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Single,System.Single,System.Action{System.Single})">
 <summary>
 循环指定的操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Single,System.Single,System.Single,System.Action{System.Single})">
 <summary>
 循环指定的操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用"></param>.
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,System.Int32,System.Int32,System.Action{System.Int32})">
 <summary>
 循环指定的操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Single,System.Single,System.Single,System.Single,System.Action{System.Single})">
 <summary>
 循环指定的操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
 <summary>
 执行一个从起始点到结束点的循环操作，直到循环完成。如果中途调用方返回True则立即跳出循环。
 </summary>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。如果方法返回True则立即跳出循环。
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Single,System.Single,System.Single,System.Func{System.Single,System.Boolean})">
 <summary>
 执行一个从起始点到结束点的循环操作，直到循环完成。如果中途调用方返回True则立即跳出循环。
 </summary>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。如果方法返回True则立即跳出循环。
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
 <summary>
 执行一个从起始点到结束点的循环操作，直到循环完成。如果中途调用方返回True则立即跳出循环。
 </summary>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。如果方法返回True则立即跳出循环。
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Single,System.Single,System.Single,System.Single,System.Func{System.Single,System.Boolean})">
 <summary>
 执行一个从起始点到结束点的循环操作，直到循环完成。如果中途调用方返回True则立即跳出循环。
 </summary>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。如果方法返回True则立即跳出循环。
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历_高速无序``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Int32,System.Boolean})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象"></param>
 <param name="处理过程">指定要调用的处理过程，第二个参数为当前遍历到的顺序索引号，当处理过程返回True表示立即退出遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Int32,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的行</param>
 <param name="处理过程">传入参数：当前正在遍历的行,当前正在遍历的行的索引。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Data.DataTable,System.Func{System.Data.DataRow,System.Int32,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行,当前正在遍历的行的索引。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Data.DataTable,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Data.DataTable,System.Action{System.Data.DataRow})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Data.DataTable,System.Action{System.Data.DataRow,System.Int32})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行,当前正在遍历的行的索引。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行_高速无序(System.Data.DataTable,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后。
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行_高速无序(System.Data.DataTable,System.Action{System.Data.DataRow})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后。
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Data.DataTable,System.Action{System.Data.DataColumn})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Data.DataTable,System.Action{System.Data.DataColumn,System.Int32})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列,当前正在遍历的列的索引。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Data.DataTable,System.Func{System.Data.DataColumn,System.Int32,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列,当前正在遍历的列的索引。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 返回一个满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取_高速无序(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 返回一个满足查找条件的项的列表,以内存顺序查找，不一定是从0开始。
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Windows.Forms.DataGridView,System.Func{System.Windows.Forms.DataGridViewRow,System.Int32,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行,当前正在遍历的行的索引。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Windows.Forms.DataGridView,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Windows.Forms.DataGridView,System.Action{System.Windows.Forms.DataGridViewRow})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有行(System.Windows.Forms.DataGridView,System.Action{System.Windows.Forms.DataGridViewRow,System.Int32})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的行,当前正在遍历的行的索引。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Windows.Forms.DataGridView,System.Action{System.Windows.Forms.DataGridViewColumn})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Windows.Forms.DataGridView,System.Action{System.Windows.Forms.DataGridViewColumn,System.Int32})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列,当前正在遍历的列的索引。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有列(System.Windows.Forms.DataGridView,System.Func{System.Windows.Forms.DataGridViewColumn,System.Int32,System.Boolean})">
 <summary>
 按顺序逐行遍历
 </summary>
 <param name="遍历对象">当前正在遍历的DataTable</param>
 <param name="处理过程">传入参数：当前正在遍历的列,当前正在遍历的列的索引。返回如果为True将立即退出遍历，反之继续遍历。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Data.DataColumnCollection,System.Func{System.Data.DataColumn,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Windows.Forms.DataGridViewColumnCollection,System.Func{System.Windows.Forms.DataGridViewColumn,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Windows.Forms.ListView.ListViewItemCollection,System.Func{System.Windows.Forms.ListViewItem,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除(System.Windows.Forms.ListView.ColumnHeaderCollection,System.Func{System.Windows.Forms.ColumnHeader,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除``2(System.Collections.Generic.Dictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 找到并返回集合中的第一个符合条件的项
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个位置(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 找到并返回集合中的第一个符合条件的项
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
 找到并返回集合中的第一个符合条件的项
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个``1(System.Collections.ICollection,System.Func{``0,System.Boolean})">
 <summary>
 找到并返回集合中的第一个符合条件的项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.其中一个``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
 <summary>
 找到并返回集合中位于内存的第一个符合条件的项，这不一定是位于索引中的第一个。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.其中一个(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 找到并返回集合中位于内存的第一个符合条件的项，这不一定是位于索引中的第一个。
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.其中一个(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
 找到并返回集合中位于内存的第一个符合条件的项，这不一定是位于索引中的第一个。
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.其中一个``1(System.Collections.ICollection,System.Func{``0,System.Boolean})">
 <summary>
 找到并返回集合中位于内存的第一个符合条件的项，这不一定是位于索引中的第一个。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.第一个位置(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
 找到并返回集合中的第一个符合条件的项的索引
 </summary>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
 <summary>
 从集合中提取符合条件的项列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取类型``2(System.Collections.Generic.ICollection{``0},System.Func{``0,``1})">
 <summary>
 从集合中提取子目标类型的列表
 </summary>
 <typeparam name="T1"></typeparam>
   <typeparam name="目标类型">要生成集合的类型</typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取字符串列表``1(System.Collections.ICollection,System.Func{``0,System.String})">
 <summary>
 从集合中提取指定类型的子集列表
 </summary>
 <param name="查找对象"></param>
 <param name="提取内容">对集合中每个项提取指定的字符串内容</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取子集列表``2(System.Collections.ICollection,System.Func{``0,``1})">
 <summary>
 从集合中提取指定类型的子集列表
 <para>T1表示从集合中需要提取的类型</para>
 <para>T2表示需要生成的列表中包含的类型</para>
 <para>示例:提取Controls中所有控件的Text并生成字符串列表</para>
 <para>提取子集列表(Of Control,String)(Me.Controls,Function(x) x.Text)</para>
 </summary>
 <param name="查找对象"></param>
 <param name="提取元素">对集合中每个项提取指定的元素</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取字符串列表``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.String})">
 <summary>
 从集合中提取指定类型的子集列表并生成字符串列表
 </summary>
 <param name="查找对象"></param>
 <param name="提取内容">对集合中每个项提取指定的字符串内容</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.移除``1(System.Collections.ICollection,System.Func{``0,System.Boolean})">
 <summary>
 返回一个已移除了满足查找条件的项的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Int32,System.Boolean})">
 <summary>
 按从前到后顺序对目标进行遍历,并进行相应的处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象"></param>
 <param name="处理过程">指定要调用的处理过程，第二个参数为当前遍历到的顺序索引号，当处理过程返回True表示立即退出遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程">要执行的过程和方法，如果返回True，则立即退出遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.ICollection{``0},System.Action{``0,System.Int32})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.ICollection{``0},System.Action{``0})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.ICollection,System.Action{``0})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历_高速无序``1(System.Collections.ICollection,System.Action{``0})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后，并调用指定的委托方法
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象"></param>
 <param name="处理过程">指定要调用的处理过程，当处理过程返回True表示立即退出遍历过程。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历_高速无序``1(System.Collections.Generic.ICollection{``0},System.Action{``0})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
 <summary>
 按从前到后顺序对目标进行遍历,并进行相应的处理
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象"></param>
 <param name="处理过程">指定要调用的处理过程，第二个参数为当前遍历到的顺序索引号，当处理过程返回True表示立即退出遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程">要执行的过程和方法，如果返回True，则立即退出遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历_高速无序``1(System.Collections.IEnumerable,System.Action{``0})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后，并调用指定的委托方法
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象"></param>
 <param name="处理过程">指定要调用的处理过程，当处理过程返回True表示立即退出遍历过程。</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历_高速无序``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
 <summary>
 以内存中的顺序进行遍历,该顺序不一定是从前到后，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="处理过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件(System.Windows.Forms.Control,System.String)">
 <summary>
 查找并获取指定名称的控件，包括子控件。
 </summary>
 <param name="C"></param>
 <param name="控件名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件``1(System.Windows.Forms.Control,System.Boolean)">
 <summary>
 找到指定类型的所有控件
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件``1(System.Windows.Forms.Control,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 查找并获取指定条件的第一个控件。
 </summary>
 <param name="C"></param>
 <param name="查找条件">如果符合指定的条件(True)时，立即返回</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件(System.Windows.Forms.Control,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 查找并获取指定条件的第一个控件。
 </summary>
 <param name="C"></param>
 <param name="查找条件">如果符合指定的条件(True)时，立即返回</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件(System.Windows.Forms.Control.ControlCollection,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 查找并获取指定条件的第一个控件。
 </summary>
 <param name="C"></param>
 <param name="查找条件">如果符合指定的条件(True)时，立即返回</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件``1(System.Windows.Forms.Control.ControlCollection,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 查找并获取指定条件的第一个控件。
 </summary>
 <param name="C"></param>
 <param name="查找条件">如果符合指定的条件(True)时，立即返回</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件``1(System.Windows.Forms.Control.ControlCollection,System.String)">
 <summary>
 查找并获取指定名称的控件，包括子控件。
 </summary>
 <param name="C"></param>
 <param name="控件名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到控件(System.Windows.Forms.Control.ControlCollection,System.String)">
 <summary>
 查找并获取指定名称的控件，包括子控件。
 </summary>
 <param name="C"></param>
 <param name="控件名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control.ControlCollection,System.Action{System.Windows.Forms.Control},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
 <param name="包含所有子控件"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control.ControlCollection,System.Action{``0},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control.ControlCollection,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <param name="遍历对象"></param>
 <param name="执行过程">如果取消中途取消遍历，返回True，继续遍历，返回False</param>
 <param name="包含所有子控件"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control.ControlCollection,System.Func{``0,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象">如果取消中途取消遍历，返回True，继续遍历，返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件并判断条件``1(System.Windows.Forms.Control.ControlCollection,System.Func{``0,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件,执行的方法中的条件判断，如条件成立返回True，否则返回False
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象">执行的方法中的条件判断，如条件成立返回True，否则返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件并判断条件(System.Windows.Forms.Control,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件,执行的方法中的条件判断，如条件成立返回True，否则返回False
 </summary>
 <param name="遍历对象">执行的方法中的条件判断，如条件成立返回True，否则返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件并判断条件``1(System.Windows.Forms.Control,System.Func{``0,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件,执行的方法中的条件判断，如条件成立返回True，否则返回False
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象">执行的方法中的条件判断，如条件成立返回True，否则返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control,System.Action{``0},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control,System.Func{``0,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象">如果取消中途取消遍历，返回True，继续遍历，返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control,System.Func{System.Windows.Forms.Control,System.Boolean},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
<param name="遍历对象">如果取消中途取消遍历，返回True，继续遍历，返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历并判断条件``1(System.Collections.ICollection,System.Func{``0,System.Boolean})">
 <summary>
 遍历指定类型的集合,执行的方法中的条件判断，如条件成立返回True，否则返回False
 </summary>
 <param name="遍历对象">执行的方法中的条件判断，如条件成立返回True，否则返回False</param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在文件(System.String)">
 <summary>
 当字符串为一个文件路径时，检查该路径的文件是否存在
 </summary>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在文件夹(System.String)">
 <summary>
 当字符串为一个文件夹路径时，检查该路径的文件夹是否存在
 </summary>
 <param name="文件夹路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.当前堆栈中指定层的方法(System.Int32)">
 <summary>
 获取运行到当前方法时的链路层中的指定方法
 </summary>
 <param name="层级">1表示当前方法,数字越大,调用层级越往前</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.当前方法">
 <summary>
 获取当前方法
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.结果(System.TimeSpan)">
 <summary>
 输出TimeSpan计时结果,如**毫秒
 </summary>
 <param name="T"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.结果(System.Diagnostics.Stopwatch)">
 <summary>
 输出StopWatch计时结果,如**毫秒
 </summary>
 <param name="T"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.计时器.计时结果">
 <summary>
 输出计时结果，如***毫秒
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.矩形.Width">
 <summary>
 矩形宽度
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.矩形.Height">
 <summary>
 矩形高度
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action)">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object[]},System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object},System.Object)">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object},System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object},System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object})">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object},System.Object)">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object},System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Func{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.排序``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object},DSAPI.神扩展.神扩展.排序顺序)">
 <summary>
 生成一个序列经过排序后的序列列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="排序对象"></param>
 <param name="排序依据">指示应以序列中对象的哪个参数作为排序依据，比如x.Index或x.tostring.length等</param>
 <param name="排序方式"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.排序``1(System.Collections.ICollection,System.Func{``0,System.Object},DSAPI.神扩展.神扩展.排序顺序)">
 <summary>
 生成一个序列经过排序后的序列列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="排序对象"></param>
 <param name="排序依据">指示应以序列中对象的哪个参数作为排序依据，比如x.Index或x.tostring.length等</param>
 <param name="排序方式"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建快捷菜单(System.Enum,System.EventHandler,System.Object)">
 <summary>
 使一个枚举项生成一个弹出式菜单
 </summary>
 <param name="菜单项点击事件委托">指示点击菜单项时应调用的方法</param> 
 <param name="传递Tag">传递给菜单控件的一个额外对象</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建快捷菜单(System.Collections.ICollection,System.EventHandler,System.Object)">
 <summary>
 使用集合中的每一个对象的ToString()方法生成一个弹出式菜单
 <para>可以使用"%%"来插入一条菜单分割线</para>
 <para>可以使用"Dis|"作为文本的开头来使该菜单项禁用,示例:  Dis|被禁用的菜单项</para>
 </summary>
 <param name="对象数组"></param>
 <param name="菜单项点击事件委托">指示点击菜单项时应调用的方法</param> 
 <param name="传递Tag">传递给菜单控件的一个额外对象</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建快捷菜单(System.Collections.ICollection,System.Action{System.String})">
 <summary>
 使用集合中的每一个对象的ToString()方法生成一个弹出式菜单
 <para>可以使用"%%"来插入一条菜单分割线</para>
 <para>可以使用"Dis|"作为文本的开头来使该菜单项禁用,示例:  Dis|被禁用的菜单项</para>
 </summary>
 <param name="对象数组"></param>
 <param name="菜单项点击事件委托">指示点击菜单项时应调用的方法,并传入点击的菜单项Text属性</param> 
</member>
<member name="M:DSAPI.神扩展.神扩展.创建快捷菜单(System.Collections.ICollection,System.Action{System.String},System.Int32,System.Int32)">
 <summary>
 使用集合中的每一个对象的ToString()方法生成一个弹出式菜单
 <para>可以使用"%%"来插入一条菜单分割线</para>
 <para>可以使用"Dis|"作为文本的开头来使该菜单项禁用,示例:  Dis|被禁用的菜单项</para>
 </summary>
 <param name="对象数组"></param>
 <param name="菜单项点击事件委托">指示点击菜单项时应调用的方法,并传入点击的菜单项Text属性</param> 
</member>
<member name="M:DSAPI.神扩展.神扩展.创建快捷菜单(System.Collections.ICollection,System.Action{System.String},System.Drawing.Point)">
 <summary>
 使用集合中的每一个对象的ToString()方法生成一个弹出式菜单
 <para>可以使用"%%"来插入一条菜单分割线</para>
 <para>可以使用"Dis|"作为文本的开头来使该菜单项禁用,示例:  Dis|被禁用的菜单项</para>
 </summary>
 <param name="对象数组"></param>
 <param name="菜单项点击事件委托">指示点击菜单项时应调用的方法,并传入点击的菜单项Text属性</param> 
</member>
<member name="M:DSAPI.神扩展.神扩展.透明(System.Drawing.Bitmap,System.Single)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用透明特效的图像">要调整透明度的图像</param>
 <param name="透明度">亮度值,范围0%-100%</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.透明(System.Drawing.Image,System.Single)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用透明特效的图像">要调整透明度的图像</param>
 <param name="透明度">亮度值,范围0%-100%</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Bitmap,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.外发光(System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
 <summary>
 图像外发光效果
 </summary>
 <param name="要应用外发光的图像"></param>
 <param name="光晕颜色"></param>
 <param name="光晕大小"></param>
 <param name="光晕浓度"></param>
 <param name="挖空处理"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
<param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Bitmap,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.模糊(System.Drawing.Bitmap,System.Int32)">
 <summary>
 图像模糊效果
 </summary>
 <param name="要应用模糊特效的图像">要应用模糊效果的图像</param>
 <param name="模糊半径">模糊半径,取值范围5-100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.应用透明度遮罩(System.Drawing.Bitmap,System.Drawing.Bitmap)">
 <summary>
 将指定图像使用指定遮罩图的透明度
 </summary>
 <param name="要应用透明度遮罩的图像"></param>
 <param name="透明遮罩"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.灰度(System.Drawing.Bitmap)">
 <summary>
 图像灰度效果
 </summary>
 <param name="要应用灰度特效的图像">要应用灰度特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.黑白(System.Drawing.Bitmap,System.Int32)">
 <summary>
 图像黑白效果
 </summary>
 <param name="要应用黑白特效的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-100到100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.更改对比度(System.Drawing.Bitmap,System.Int32,System.Single)">
 <summary>
 更改图像对比度
 </summary>
 <param name="要应用更改对比度的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-127到127</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.反色(System.Drawing.Bitmap)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用反色特效的图像">要应用反色特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留色彩通道(System.Drawing.Bitmap,DSAPI.图形图像.色彩通道)">
 <summary>
 保留图像指定色彩
 </summary>
 <param name="要应用保留色彩通道特效的图像">只保留指定色彩通道特效的图像</param>
 <param name="要保留的色彩通道">指定哪种颜色通道应当保留,其余部分灰度处理</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Image,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.外发光(System.Drawing.Image,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
 <summary>
 图像外发光效果
 </summary>
 <param name="要应用外发光的图像"></param>
 <param name="光晕颜色"></param>
 <param name="光晕大小"></param>
 <param name="光晕浓度"></param>
 <param name="挖空处理"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
<param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Image,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.模糊(System.Drawing.Image,System.Int32)">
 <summary>
 图像模糊效果
 </summary>
 <param name="要应用模糊特效的图像">要应用模糊效果的图像</param>
 <param name="模糊半径">模糊半径,取值范围5-100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.应用透明度遮罩(System.Drawing.Image,System.Drawing.Image)">
 <summary>
 将指定图像使用指定遮罩图的透明度
 </summary>
 <param name="要应用透明度遮罩的图像"></param>
 <param name="透明遮罩"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.灰度(System.Drawing.Image)">
 <summary>
 图像灰度效果
 </summary>
 <param name="要应用灰度特效的图像">要应用灰度特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.黑白(System.Drawing.Image,System.Int32)">
 <summary>
 图像黑白效果
 </summary>
 <param name="要应用黑白特效的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-100到100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.更改对比度(System.Drawing.Image,System.Int32,System.Single)">
 <summary>
 更改图像对比度
 </summary>
 <param name="要应用更改对比度的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-127到127</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.反色(System.Drawing.Image)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用反色特效的图像">要应用反色特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留色彩通道(System.Drawing.Image,DSAPI.图形图像.色彩通道)">
 <summary>
 保留图像指定色彩
 </summary>
 <param name="要应用保留色彩通道特效的图像">只保留指定色彩通道特效的图像</param>
 <param name="要保留的色彩通道">指定哪种颜色通道应当保留,其余部分灰度处理</param>
 <remarks></remarks>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.透明色">
<summary>
透明色 Color=(255,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.爱丽丝蓝色">
<summary>
爱丽丝蓝色 Color=(240,248,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.仿古白色">
<summary>
仿古白色 Color=(250,235,215)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.湖绿色">
<summary>
湖绿色 Color=(0,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海洋蓝色">
<summary>
海洋蓝色 Color=(127,255,212)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蔚蓝色">
<summary>
蔚蓝色 Color=(240,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.米色">
<summary>
米色 Color=(245,245,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.乳白色">
<summary>
乳白色 Color=(255,228,196)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑色">
<summary>
黑色 Color=(0,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.杏仁白色">
<summary>
杏仁白色 Color=(255,235,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓝色">
<summary>
蓝色 Color=(0,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫罗兰色">
<summary>
紫罗兰色 Color=(138,43,226)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.棕色">
<summary>
棕色 Color=(165,42,42)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.木头色">
<summary>
木头色 Color=(222,184,135)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.军蓝色">
<summary>
军蓝色 Color=(95,158,160)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡黄色">
<summary>
淡黄色 Color=(127,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.巧克力色">
<summary>
巧克力色 Color=(210,105,30)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.珊瑚色">
<summary>
珊瑚色 Color=(255,127,80)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.矢车菊蓝色">
<summary>
矢车菊蓝色 Color=(100,149,237)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.米绸色">
<summary>
米绸色 Color=(255,248,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.赤红色">
<summary>
赤红色 Color=(220,20,60)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.青色">
<summary>
青色 Color=(0,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深蓝色">
<summary>
深蓝色 Color=(0,0,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深青色">
<summary>
深青色 Color=(0,139,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗金色">
<summary>
暗金色 Color=(184,134,11)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深灰色">
<summary>
深灰色 Color=(169,169,169)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深绿色">
<summary>
深绿色 Color=(0,100,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑暗卡其色">
<summary>
黑暗卡其色 Color=(189,183,107)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深洋红色">
<summary>
深洋红色 Color=(139,0,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深橄榄绿色">
<summary>
深橄榄绿色 Color=(85,107,47)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深橙色">
<summary>
深橙色 Color=(255,140,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗兰花色">
<summary>
暗兰花色 Color=(153,50,204)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深红色">
<summary>
深红色 Color=(139,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑鲑鱼色">
<summary>
黑鲑鱼色 Color=(233,150,122)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深海绿色">
<summary>
深海绿色 Color=(143,188,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑暗石板蓝色">
<summary>
黑暗石板蓝色 Color=(72,61,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深板岩灰色">
<summary>
深板岩灰色 Color=(47,79,79)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深蓝绿色">
<summary>
深蓝绿色 Color=(0,206,209)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗紫色">
<summary>
暗紫色 Color=(148,0,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深粉红色">
<summary>
深粉红色 Color=(255,20,147)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深天蓝色">
<summary>
深天蓝色 Color=(0,191,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗灰色">
<summary>
暗灰色 Color=(105,105,105)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.道奇蓝色">
<summary>
道奇蓝色 Color=(30,144,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.耐火砖色">
<summary>
耐火砖色 Color=(178,34,34)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.花白色">
<summary>
花白色 Color=(255,250,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.森林绿色">
<summary>
森林绿色 Color=(34,139,34)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫红色">
<summary>
紫红色 Color=(255,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡灰色">
<summary>
淡灰色 Color=(220,220,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.幽灵白色">
<summary>
幽灵白色 Color=(248,248,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.金色">
<summary>
金色 Color=(255,215,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.金毛色">
<summary>
金毛色 Color=(218,165,32)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.灰色">
<summary>
灰色 Color=(128,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿色">
<summary>
绿色 Color=(0,128,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿黄色">
<summary>
绿黄色 Color=(173,255,47)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.甘露色">
<summary>
甘露色 Color=(240,255,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亮粉色">
<summary>
亮粉色 Color=(255,105,180)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.印度红色">
<summary>
印度红色 Color=(205,92,92)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.靛青色">
<summary>
靛青色 Color=(75,0,130)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.象牙色">
<summary>
象牙色 Color=(255,255,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄褐色">
<summary>
黄褐色 Color=(240,230,140)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薰衣草色">
<summary>
薰衣草色 Color=(230,230,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薰衣草腮红色">
<summary>
薰衣草腮红色 Color=(255,240,245)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.草坪绿色">
<summary>
草坪绿色 Color=(124,252,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.柠檬雪纺色">
<summary>
柠檬雪纺色 Color=(255,250,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅蓝色">
<summary>
浅蓝色 Color=(173,216,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.轻珊瑚色">
<summary>
轻珊瑚色 Color=(240,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅青色">
<summary>
浅青色 Color=(224,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅金黄色">
<summary>
浅金黄色 Color=(250,250,210)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅灰色">
<summary>
浅灰色 Color=(211,211,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅绿色">
<summary>
浅绿色 Color=(144,238,144)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅粉红色">
<summary>
浅粉红色 Color=(255,182,193)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡鲑鱼色">
<summary>
淡鲑鱼色 Color=(255,160,122)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅海绿色">
<summary>
浅海绿色 Color=(32,178,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅天蓝色">
<summary>
浅天蓝色 Color=(135,206,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅板岩灰色">
<summary>
浅板岩灰色 Color=(119,136,153)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅钢蓝色">
<summary>
浅钢蓝色 Color=(176,196,222)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅黄色">
<summary>
浅黄色 Color=(255,255,224)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.酸橙色">
<summary>
酸橙色 Color=(0,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.柠檬绿色">
<summary>
柠檬绿色 Color=(50,205,50)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亚麻色">
<summary>
亚麻色 Color=(250,240,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.品红色">
<summary>
品红色 Color=(255,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.栗色">
<summary>
栗色 Color=(128,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中海蓝宝石色">
<summary>
中海蓝宝石色 Color=(102,205,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中蓝色">
<summary>
中蓝色 Color=(0,0,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中兰花色">
<summary>
中兰花色 Color=(186,85,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中紫色">
<summary>
中紫色 Color=(147,112,219)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中海绿色">
<summary>
中海绿色 Color=(60,179,113)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中号SlateBlue色">
<summary>
中号SlateBlue色 Color=(123,104,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中春绿色">
<summary>
中春绿色 Color=(0,250,154)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中绿松石色">
<summary>
中绿松石色 Color=(72,209,204)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中紫红色">
<summary>
中紫红色 Color=(199,21,133)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.午夜蓝色">
<summary>
午夜蓝色 Color=(25,25,112)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薄荷色">
<summary>
薄荷色 Color=(245,255,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅玫瑰色">
<summary>
浅玫瑰色 Color=(255,228,225)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.莫卡辛皮革色">
<summary>
莫卡辛皮革色 Color=(255,228,181)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.纳瓦霍白色">
<summary>
纳瓦霍白色 Color=(255,222,173)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海军蓝色">
<summary>
海军蓝色 Color=(0,0,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.旧织物色">
<summary>
旧织物色 Color=(253,245,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橄榄色">
<summary>
橄榄色 Color=(128,128,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亚橄榄色">
<summary>
亚橄榄色 Color=(107,142,35)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橙子色">
<summary>
橙子色 Color=(255,165,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橙红色">
<summary>
橙红色 Color=(255,69,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.兰花色">
<summary>
兰花色 Color=(218,112,214)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.枯萎鼠尾草色">
<summary>
枯萎鼠尾草色 Color=(238,232,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡绿色">
<summary>
淡绿色 Color=(152,251,152)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡青绿色">
<summary>
淡青绿色 Color=(175,238,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅紫红色">
<summary>
浅紫红色 Color=(219,112,147)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.木瓜蒂色">
<summary>
木瓜蒂色 Color=(255,239,213)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.桃红色">
<summary>
桃红色 Color=(255,218,185)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.土黄色">
<summary>
土黄色 Color=(205,133,63)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.粉色">
<summary>
粉色 Color=(255,192,203)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.梅红色">
<summary>
梅红色 Color=(221,160,221)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.粉蓝色">
<summary>
粉蓝色 Color=(176,224,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫色">
<summary>
紫色 Color=(128,0,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.红色">
<summary>
红色 Color=(255,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.玫瑰褐色">
<summary>
玫瑰褐色 Color=(188,143,143)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.宝蓝色">
<summary>
宝蓝色 Color=(65,105,225)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.马鞍棕色">
<summary>
马鞍棕色 Color=(139,69,19)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.三文鱼红色">
<summary>
三文鱼红色 Color=(250,128,114)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.沙土褐色">
<summary>
沙土褐色 Color=(244,164,96)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海绿色">
<summary>
海绿色 Color=(46,139,87)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海贝壳色">
<summary>
海贝壳色 Color=(255,245,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.赭色">
<summary>
赭色 Color=(160,82,45)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.银色">
<summary>
银色 Color=(192,192,192)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.天蓝色">
<summary>
天蓝色 Color=(135,206,235)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.板岩蓝色">
<summary>
板岩蓝色 Color=(106,90,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.板岩灰色">
<summary>
板岩灰色 Color=(112,128,144)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.雪白色">
<summary>
雪白色 Color=(255,250,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.春天绿色">
<summary>
春天绿色 Color=(0,255,127)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.钢蓝色">
<summary>
钢蓝色 Color=(70,130,180)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.棕褐色">
<summary>
棕褐色 Color=(210,180,140)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓝绿色">
<summary>
蓝绿色 Color=(0,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓟色">
<summary>
蓟色 Color=(216,191,216)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.番茄色">
<summary>
番茄色 Color=(255,99,71)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿松石色">
<summary>
绿松石色 Color=(64,224,208)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绛紫色">
<summary>
绛紫色 Color=(238,130,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.小麦黄色">
<summary>
小麦黄色 Color=(245,222,179)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.白色">
<summary>
白色 Color=(255,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.白烟色">
<summary>
白烟色 Color=(245,245,245)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄色">
<summary>
黄色 Color=(255,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄绿色">
<summary>
黄绿色 Color=(154,205,50)
</summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.给内部成员赋值``1(``0,System.String,System.Object,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并赋给指定的值。成功返回True，失败返回False
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="要设置的值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取内部成员值``1(``0,System.String,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并获取该成员的值。如果找不到成员或成员值为Nothing/Null时返回Nothing/Null。
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="成员目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取内部成员``1(``0,System.String,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并获取该成员。如果找不到成员或成员值为Nothing/Null时返回Nothing/Null。
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="成员目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取所有字段``1(``0,System.Boolean)">
 <summary>
 获取指定对象中所有的字段
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <param name="包含非公开">指示是否同时获取除Public外的其他字段</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取所有属性``1(``0,System.Boolean)">
 <summary>
 获取指定对象中所有的属性
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <param name="包含非公开">指示是否同时获取除Public外的其他属性</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取所有字段(System.Type,System.Boolean)">
 <summary>
 获取指定对象中所有的字段
 </summary>
 <param name="Obj"></param>
 <param name="包含非公开">指示是否同时获取除Public外的其他字段</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取所有属性(System.Type,System.Boolean)">
 <summary>
 获取指定对象中所有的属性
 </summary>
 <param name="Obj"></param>
 <param name="包含非公开">指示是否同时获取除Public外的其他属性</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化到文件_DS格式``1(``0,System.String)">
 <summary>
 将对象序列化成Byte数组，并写入到指定的文件路径,前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="D"></param>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化到文件_DS格式2``1(``0,System.String,System.String,System.Boolean)">
 <summary>
 将对象序列化成Byte数组，并写入到指定的文件路径,前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="D"></param>
 <param name="文件路径"></param>
 <param name="文件头标识">可使用一个字符串（通常为英文）来作为文件的文件头标识，这使得当使用记事本等打开序列化的文件时，可知道这个是什么文件</param>
 <param name="启用压缩">压缩后文件可以更小</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化到文件_XML格式``1(``0,System.String)">
 <summary>
 将对象序列化成XML字符串，并写入到指定的文件路径,前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="D"></param>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成Bytes数组_DS格式2``1(``0,System.String,System.Boolean)">
 <summary>
 将对象序列化成Byte数组，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <param name="文件头标识">可使用一个字符串（通常为英文）来作为文件的文件头标识，这使得当使用记事本等打开序列化的文件时，可知道这个是什么文件</param>        
 <param name="启用压缩">压缩后文件可以更小</param>
  <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成Bytes数组_DS格式``1(``0)">
 <summary>
 将对象序列化成Byte数组，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_DS格式``1(``0,System.Byte[])">
 <summary>
 将对象由指定的Byte数组进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bytes">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.反序列化_DS格式``1(System.Byte[])">
 <summary>
 将对象由指定的Byte数组进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bytes">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_DS格式(System.String)">
 <summary>
 将对象由指定的文件路径进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成XML字符串_XML格式``1(``0)">
 <summary>
 将对象序列化成XML字符串，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从XML字符串反序列化_XML序列化格式``1(``0,System.String,System.Text.Encoding)">
 <summary>
 将对象由指定的XML字符串进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="XML">要从中反序列化的XML字符串</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_XML格式``1(``0,System.String)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的文件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_XML格式``1(``0,System.Byte[])">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bts">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从XML字符串反序列化_XML序列化格式``1(System.String)">
 <summary>
 将对象由指定的XML字符串进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="XML">要从中反序列化的XML字符串</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_XML格式``1(System.String)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的文件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_XML格式``1(System.Byte[])">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bts">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成XML字符串_XML格式``1(``0,System.Text.Encoding)">
 <summary>
 将对象序列化成XML字符串，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从XML字符串反序列化_XML序列化格式``1(``0,System.String)">
 <summary>
 将对象由指定的XML字符串进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="XML">要从中反序列化的XML字符串</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_XML格式``1(``0,System.String,System.Text.Encoding)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的文件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_XML格式``1(``0,System.Byte[],System.Text.Encoding)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bts">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从XML字符串反序列化_XML序列化格式``1(System.String,System.Text.Encoding)">
 <summary>
 将对象由指定的XML字符串进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="XML">要从中反序列化的XML字符串</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_XML格式``1(System.String,System.Text.Encoding)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的文件</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_XML格式``1(System.Byte[],System.Text.Encoding)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bts">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.Json序列化``1(``0,System.Boolean,System.Boolean)">
 <summary>
 将一个对象序列化为Json字符串
 可将不需要被序列化的字段或属性打上"ScriptIgnore"特性标记,需要引用System.Web.extansion,导入System.Web.Script.Serialization
 </summary>
 <param name="Obj">要用来序列化的Json对象</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.DataTable到Json序列化(System.Data.DataTable,System.Boolean)">
 <summary>
 将一个对象序列化为Json字符串
 </summary>
 <param name="Obj">要用来序列化的Json对象</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Json反序列化``1(System.String)">
 <summary>
 将一个Json字符串反序列化为对象
 </summary>
 <param name="Json字符串">要用来反序列化的Json字符串</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Json反序列化到DataTable(System.String,System.Boolean)">
 <summary>
 将一个Json字符串反序列化为DataTable
 </summary>
 <param name="Json字符串">要用来反序列化的Json字符串</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.动画(System.Windows.Forms.Form,System.Int32,DSAPI.Win32API.User.窗口动画)">
 <summary>
 使窗体产生一个动画效果
 <para>注意：该动画不支持无边框窗口样式</para>
 <para>动画必须是一个状态的更改，比如界面从隐藏到显示，或从显示到隐藏，如果状态不变，则动画无效果</para>
 <para>示例：Form_Load中使用不带“隐藏”组合的动画，可以实现窗体以动画方式呈现。</para>
 <para>如果窗体已经显示，则调用不带“隐藏”组合的动画将无效果。</para>
 <para>当需要窗体从显示到隐藏的动画时，动画参数应组合“隐藏”（常量的“或”运算）</para>
 <para>示例：VB.Net中使用 淡入 or 隐藏</para>
 <para>示例：C#中使用 淡入 | 隐藏</para>
 </summary>
 <param name="F">要显示动画的窗体</param>
 <param name="时长">以毫秒为单位，指示动画过程应持续多久</param>
 <param name="动画">选择一种动画效果，也可以是多种效果的组合</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 将路径添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点到(System.Windows.Forms.TreeView,System.String[])">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点(System.Windows.Forms.TreeView,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.通过路径查找节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView查找指定树路径的唯一节点
 </summary>
 <param name="Tv">要在其中查找的TreeView</param>
 <param name="路径">完整的树路径</param>
 <returns>返回一个节点</returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.清除指定路径节点的子节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView中清空指定树路径中最后一个节点
 </summary>
 <param name="Tv">要在其中清空树路径中最后一个节点的TreeView</param>
 <param name="路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置进度条状态(System.Windows.Forms.ProgressBar,DSAPI.Win7特性.进度条状态)">
 <summary>
 使ProgressBar控件应用相应的样式
 <note type="caution">本功能不支持XP或更低版本的操作系统</note> 
 </summary>
 <param name="进度条">要设置样式的ProgressBar控件</param>
 <param name="状态">要设置的进度条状态,如<b>正常</b>、<b>错误</b>、<b>暂停</b>等</param>
 <example>
 <para>将指定PrgressBar进度条控件设置为指定的样式</para>
 <para><img src="../CodesImages/进度条WIN7风格.gif"/></para>
 <para><a href="../Demos/DSAPI对Winform中Progressbar控件的WIN7风格样式控制.rar">下载本示例项目源码</a></para>
 <code language="vb" source="e:\codesdemo\进度条WIN7风格_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\进度条WIN7风格_cs.txt"></code>
 </example>
</member>
<member name="M:DSAPI.神扩展.神扩展.最大值``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 获取集合内的最大值项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.最大值``1(System.Collections.ICollection,System.Func{``0,System.Object})">
 <summary>
 获取集合内的最大值项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <param name="比较目标">用来比较的元素</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.最小值``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 获取集合内的最小值项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.最小值``1(System.Collections.ICollection,System.Func{``0,System.Object})">
 <summary>
 获取集合内的最小值项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <param name="比较目标">用来比较的元素</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.平均值``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 获取集合内的平均值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.平均值``1(System.Collections.ICollection,System.Func{``0,System.Object})">
 <summary>
 获取集合内的平均值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <param name="计算目标">用来计算的元素</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.求和``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 获取集合内的累加值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.求和``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Decimal})">
 <summary>
 获取集合内的累加值
 </summary>
 <typeparam name="T"></typeparam>
 <param name="V"></param>
 <param name="计算目标">用来计算的元素</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.已到达(System.DateTime,System.DateTime,DSAPI.神扩展.神扩展.时间比较精确度)">
 <summary>
 判断是否已到达或晚于指定时间
 </summary>
 <param name="x"></param>
 <param name="y"></param>
 <param name="比较范围到"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.位于时间段(System.DateTime,System.DateTime,System.DateTime,DSAPI.神扩展.神扩展.时间比较精确度)">
 <summary>
 判断是否在两个时间之内
 </summary>
 <param name="x"></param>
 <param name="开始时间"></param>
 <param name="比较范围到"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.是同一天(System.DateTime,System.DateTime)">
 <summary>
 比较两个日期是否是同一天
 </summary>
 <param name="Dt"></param>
 <param name="比较日期"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.是同一个``1(``0,``0)">
 <summary>
 比较两个对象是否为同一个
 </summary>
 <typeparam name="T"></typeparam>
 <param name="A"></param>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不是``1(``0,``0)">
 <summary>
 比较两个对象是否为同一个
 </summary>
 <typeparam name="T"></typeparam>
 <param name="A"></param>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.压缩(System.Byte[])">
 <summary>
 使用GZip方式压缩一个Byte数组
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.解压缩(System.Byte[])">
 <summary>
 使用GZip方式解压缩一个Byte数组
 </summary>
 <param name="Bts"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.批量添加``1(System.Collections.Generic.List{``0},System.Int32,System.Func{``0})">
 <summary>
 向列表添加指定数量的指定项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="添加数量"></param>
 <param name="项"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.批量添加``1(System.Collections.Generic.List{``0},System.Int32,System.Func{System.Int32,``0})">
 <summary>
 从0开始到循环次数-1,向列表添加项,Func中第1个参数为循环序号
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="循环次数"></param>
 <param name="项"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.批量添加``1(System.Collections.Generic.List{``0},System.Int32,``0)">
 <summary>
 向列表添加指定数量的指定项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="添加数量"></param>
 <param name="项"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.批量添加``1(System.Collections.Generic.ICollection{``0},``0[])">
 <summary>
 向列表添加指定的集合项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Lst"></param>
 <param name="Obj"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.批量添加``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.List{``0})">
 <summary>
 向列表添加指定的集合项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Lst"></param>
 <param name="Obj"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加``1(System.Collections.Generic.ICollection{``0},``0[])">
 <summary>
 向列表添加指定的集合项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Lst"></param>
 <param name="Obj"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.List{``0})">
 <summary>
 向列表添加指定的集合项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Lst"></param>
 <param name="Obj"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.数组``1(System.Collections.Generic.ICollection{``0})">
 <summary>
 返回集合生成的数组
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含``1(System.Collections.Generic.ICollection{``0},``0)">
 <summary>
 判断集合是否包含指定项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="查询项"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.不包含``1(System.Collections.Generic.ICollection{``0},``0[])">
 <summary>
 判断集合是否同时不包含指定的所有项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="查询项"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含其一``1(System.Collections.Generic.ICollection{``0},``0[])">
 <summary>
 判断集合是否包含指定查询项的其中一个
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="查询项"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含``1(System.Collections.Generic.ICollection{``0},``0[])">
 <summary>
 判断集合是否同时包含指定的所有项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="查询项"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.同步至操作系统(System.DateTime)">
 <summary>
 将日期时间应用到操作系统,此操作需要管理员权限,成功返回True,失败返回False
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.年月日时分秒(System.DateTime,System.Boolean,System.Boolean,System.Char,System.Char)">
 <summary>
 输出一个指定格式的代表时间的字符串
 <para>如果年份分割符为空，则年份部分输出“____年__月__日”</para>
   <para>如果时分秒分割符为空，则年份部分输出“__时__分__秒”</para>
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.本月第一天(System.DateTime)">
 <summary>
 获取指定日期所在月份的第一天日期
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.本月最后一天(System.DateTime)">
 <summary>
 获取指定日期所在月份的最后一天日期
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.星期(System.DateTime)">
 <summary>
 获取指定日期是星期几
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.年月日(System.DateTime,System.String,System.Boolean)">
 <summary>
 输出一个指定格式的代表时间的字符串
 <para>如果年份分割符为空，则年份部分输出“____年__月__日”</para>
 <para>年份分割符特殊格式:2,输出8位数字,如20210412</para>
 <paramref name="使用两位值">指示是否使用两位时间，如06月而不是6月</paramref>
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.时分秒(System.DateTime,System.Boolean,System.Boolean,System.Char)">
 <summary>
 输出一个指定格式的代表时间的字符串
   <para>如果时分秒分割符为空，则时间部分输出“__时__分__秒”</para>
 </summary>
 <param name="Dt"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转存为字节数组(System.Drawing.Bitmap)">
 <summary>
 将一个图像转存为Byte数组以便传输
 </summary>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转存为字节数组(System.Drawing.Bitmap,System.Drawing.Imaging.ImageFormat)">
 <summary>
 将一个图像转存为Byte数组以便传输
 </summary>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转存为字节数组(System.Drawing.Image)">
 <summary>
 将一个图像转存为Byte数组以便传输
 </summary>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转存为字节数组(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
 <summary>
 将一个图像转存为Byte数组以便传输
 </summary>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.延时等待直到(System.Func{System.Boolean},System.UInt32,System.UInt32)">
 <summary>
 无限等待，直到指定的条件满足或者达到指定的超时时间
 <para>未达到超时时间并且条件执行结果为True，返回True</para>
 <para>已达到超时时间并且条件执行结果为False，返回False</para>
 </summary>
 <param name="条件"></param>
 <param name="超时时间">(毫秒单位)当从开始等待到该指定时长后就不再等待，继续执行后续代码。
 <para>如果设置为0，则将永不超时。</para></param>>
 <param name="检查间隔时间">每隔指定时间间隔(毫秒单位）检查条件是否满足</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.等待(System.Func{System.Boolean},System.UInt32,System.UInt32)">
 <summary>
 无限等待，直到指定的条件满足或者达到指定的超时时间
 <para>未达到超时时间并且条件执行结果为True，返回True</para>
 <para>已达到超时时间并且条件执行结果为False，返回False</para>
 </summary>
 <param name="条件"></param>
 <param name="超时时间">(毫秒单位)当从开始等待到该指定时长后就不再等待，继续执行后续代码。
 <para>如果设置为0，则将永不超时。</para></param>>
 <param name="检查间隔时间">每隔指定时间间隔(毫秒单位）检查条件是否满足</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.清理一下内存">
 <summary>
 强制收缩本进程提交的内存页面数量，并调用GC强制回收
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.捕捉Win32错误信息">
 <summary>
  捕捉由GetLastError产生的错误信息字符串
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.拷贝字段属性值到(System.Object,System.Object@,System.String[])">
 <summary>
 将一个对象的所有字段和属性值设置到另一个对象（当另一个对象中存在相同的字段和属性名时）
 </summary>
 <param name="拷贝源"></param>
 <param name="拷贝目标"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.字段属性值都相同``1(``0,``0)">
 <summary>
 比较两个相同类型的对象的所有字段和属性值是否都相同
 </summary>
 <param name="A对象">要比较的第1个对象</param>
 <param name="B对象">要比较的第2个对象</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历(System.Windows.Forms.ListView.SelectedListViewItemCollection,System.Action{System.Windows.Forms.ListViewItem},System.Boolean)">
 <summary>
 对ListView控件中选定的每一项进行操作
 </summary>
 <param name="LvItms">选定项集合</param>
 <param name="操作">对指定项进行操作</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历(System.Windows.Forms.ListView.ListViewItemCollection,System.Action{System.Windows.Forms.ListViewItem},System.Boolean)">
 <summary>
 对集合中的每一项进行操作
 </summary>
 <param name="LvItms">项集合</param>
 <param name="操作">对指定项进行操作</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历(System.Windows.Forms.ListView.SelectedIndexCollection,System.Action{System.Int32})">
 <summary>
 对ListView控件中选定的每一个索引号进行操作
 </summary>
 <param name="LvItms">项索引集合</param>
 <param name="操作">对指定项进行操作</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.计时开始">
 <summary>
 使一个全局计时器在后台计时
 <para>每次调用"计时开始"时,将会使全局计时器先清零</para>
 <para>使用"计时结束"停止全局计时</para>
 <para>使用"计时时间"输出总耗时毫秒数</para>
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.计时结束">
 <summary>
 使全局计时器停止计时
 <para>使用"计时开始"启动全局计时器开始计时</para>
 <para>使用"计时时间"输出总耗时毫秒数</para>
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.计时时间">
 <summary>
 获取全局计时器总计时毫秒数
 <para>使用"计时开始"启动全局计时器开始计时</para>
 <para>使用"计时结束"停止全局计时</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据查找条件生成一个包含源数据新的DataTable
 </summary>
 <param name="TB"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表_高速无序(System.Data.DataTable,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据查找条件生成一个包含源数据新的DataTable
 </summary>
 <param name="TB"></param>
 <param name="查找条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Int32,System.Int32)">
 <summary>
 根据查找条件生成一个包含源数据新的DataTable
 </summary>
 <param name="TB"></param>
 <param name="起始行号">要从哪行开始提取</param>
 <param name="结束行号">要提取到哪行,如果结束行号超出源DataTable总行数，则立即返回</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.String)">
 <summary>
 根据选定的列<b>(以逗号分割的各列名)</b>生成一个包含源数据新的DataTable
 <para>可以使用"->"来更换为新的列名</para>
 <para>示例：提取新表({"Name->名称","Sex->性别"}</para>
 </summary>
 <param name="TB"></param>
 <param name="列名s">要提取的各列名称,如果需要多列，以逗号","分割</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Int32[])">
 <summary>
 根据选定的列生成一个包含源数据新的DataTable
 </summary>
 <param name="TB"></param>
 <param name="列号">要提取的各列索引号</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.String[],System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据选定的列提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">可以使用"->"来更换为新的列名</list>
 <list type="bullet">示例：提取新表({"Name->名称","Sex->性别"})</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名"></param>
 <param name="筛选条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.String},System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据选定的列提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">列名和别名为一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名和别名">一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</param>
 <param name="筛选条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 根据选定的列提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">列名和别名为一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名和别名">一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,DSAPI.神扩展.DS字典.DS字典{System.String},System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据选定的列提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">列名和别名为一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名和别名">一个DS字典类型(Of String)，分别对应原始列名称，新表中更改后的列名称</param>
 <param name="筛选条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,DSAPI.神扩展.DS字典.DS字典{System.String})">
 <summary>
 根据选定的列提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">列名和别名为一个字典类型(Of String,String)，分别对应原始列名称，新表中更改后的列名称</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名和别名">一个DS字典类型(Of String)，分别对应原始列名称，新表中更改后的列名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.String,System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据选定的列<b>(以逗号分割的各列名)</b>提取满足条件的行并生成一个包含源数据新的DataTable
 <para><b>提示</b></para>
 <list type="bullet">可以使用"->"来更换为新的列名</list>
 <list type="bullet">示例：提取新表({"Name->名称","Sex->性别"})</list>
 <para>更多示例请参阅：<a href="http://dsapi.dylikesoft.com">从DataTable提取新表</a></para>
 </summary>
 <param name="TB"></param>
 <param name="列名s">要提取的各列名称,如果需要多列，以逗号","分割</param>
 <param name="筛选条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.提取新表(System.Data.DataTable,System.Int32[],System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
 根据选定的列生成一个包含源数据新的DataTable
 </summary>
 <param name="TB"></param>
 <param name="列号">要提取的各列索引号</param>
 <param name="筛选条件">提取符合条件的行</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从CSV文件创建DataTable(System.String,System.Boolean,System.Char)">
 <summary>
 从指定的CSV文件读取数据并生成一个DataTable
 </summary>
 <param name="CSV文件路径"></param>
 <param name="首行为标题行"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从CSV文件创建DataTable(System.String,System.Text.Encoding,System.Boolean,System.Char)">
 <summary>
 从指定的CSV文件读取数据并生成一个DataTable
 </summary>
 <param name="CSV文件路径"></param>
 <param name="首行为标题行"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从CSV字符串创建DataTable(System.String,System.Boolean,System.Char)">
 <summary>
 从CSV格式的字符串文本生成一个DataTable
 </summary>
 <param name="CSV字符串">CSV格式的字符串文本</param>
 <param name="首行为标题行"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.整列生成字符串(System.Data.DataColumn,System.String)">
 <summary>
 将此列所有数据合并生成字符串
 </summary>
 <param name="Cl"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.整行生成字符串(System.Data.DataRow,System.String)">
 <summary>
 将此行所有数据合并生成字符串
 </summary>
 <param name="R"></param>
 <param name="分割符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.重复执行(System.Int32,System.Action)">
 <summary>
 重复执行指定的操作
 </summary>
 <param name="执行次数">设置重复执行的最大次数</param>
 <param name="执行操作">要执行操作</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.重复执行``1(System.Int32,System.Func{``0,System.Boolean},System.Object,System.Func{``0})">
 <summary>
 重复执行指定的操作，重复过程中如果执行的操作返回值满足中断条件，则立即返回该值，且不再进行后续的重复操作
 <para>如果执行次数完成，但是中途没有满足中断条件，则返回“默认返回值”</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="中断条件">重复过程中如果执行的操作返回值满足中断条件，则立即返回执行结果值，不再进行后续的重复操作</param>
 <param name="默认返回值">如果执行次数完成，但是中途没有满足中断条件，则返回“默认返回值”</param>
 <param name="执行次数">设置重复执行的最大次数</param>
 <param name="执行操作">要执行操作</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.重复执行(System.Int32,System.Func{System.Boolean},System.Action)">
 <summary>
 重复执行指定的操作，重复过程中如果满足中断条件，则立即退出重复循环过程，且不再进行后续的重复操作
 </summary>
 <param name="中断条件">重复过程中如果执行的操作返回值满足中断条件，则立即退出重复执行循环过程，不再进行后续的重复操作</param>
 <param name="执行次数">设置重复执行的最大次数</param>
 <param name="执行操作">要执行操作</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.转10进制值(System.Byte)">
 <summary>
 将一个字节转为10进制的数值
 </summary>
 <param name="B"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转10进制值(System.Byte[],System.Boolean,System.Boolean)">
 <summary>
 自动识别字节数组并转成10进制值,最大支持8个字节长度
 </summary>
 <param name="Bts"></param>
 <param name="反转数组顺序">指示是否反转数组顺序</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转10进制值(System.Collections.Generic.List{System.Byte},System.Boolean,System.Boolean)">
 <summary>
 自动识别字节数组并转成10进制值,最大支持8个字节长度
 </summary>
 <param name="Bts"></param>
 <param name="反转数组顺序">指示是否反转数组顺序</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.所有项都满足条件``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
 <summary>
 判断集合中所有项是否都满足指定的条件
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.所有项都满足条件``1(System.Collections.ICollection,System.Func{``0,System.Boolean})">
 <summary>
 判断集合中所有项是否都满足指定的条件
 </summary>
 <typeparam name="T"></typeparam>
 <param name="查找对象"></param>
 <param name="满足条件"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Object},System.Func{``0,System.Boolean})">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">对集合内每个对象进行分组的元素依据</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean}[],System.Func{``0,System.Boolean})">
 <summary>
  获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Object},System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
  获取进行分组后的行列表
 </summary>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组(System.Data.DataRowCollection,System.Func{System.Data.DataRow,System.Boolean}[],System.Func{System.Data.DataRow,System.Boolean})">
 <summary>
  获取进行分组后的行列表
 </summary>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Object},System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
  获取进行分组后的行列表
 </summary>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组(System.Windows.Forms.DataGridViewRowCollection,System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean}[],System.Func{System.Windows.Forms.DataGridViewRow,System.Boolean})">
 <summary>
  获取进行分组后的行列表
 </summary>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.ICollection,System.Func{``0,System.Object},System.Func{``0,System.Boolean})">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">对集合内每个对象进行分组的元素依据</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.ICollection,System.Func{``0,System.Boolean}[],System.Func{``0,System.Boolean})">
 <summary>
  获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object},System.Func{``0,System.Boolean})">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">对集合内每个对象进行分组的元素依据</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean}[],System.Func{``0,System.Boolean})">
 <summary>
  获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="分组依据">一系列Boolean类型的判断依据，每个判断依据作为一个分组</param>
 <param name="排除条件">满足排除条件的项将被丢弃</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.ICollection{``0},System.Int32)">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="每组数量">分成若干组，每组指定数量</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="每组数量">分成若干组，每组指定数量</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分组``1(System.Collections.ICollection,System.Int32)">
 <summary>
 获取进行分组后的列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj">要获取分组的集合对象</param>
 <param name="每组数量">分成若干组，每组指定数量</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.创建匿名类列表``1(``0)">
 <summary>
 创建一个指定匿名类的集合列表
 </summary>
 <typeparam name="T"></typeparam>
 <param name="匿名类模板"><para>匿名类模板</para>
 <par>示例：dim A=创建匿名类列表(new with{.Name="",.Age=0}</par></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.项``2(System.Collections.Generic.Dictionary{``0,``1},System.Int32)">
 <summary>
 返回字典中指定索引号的项
 </summary>
 <typeparam name="TKyey"></typeparam>
 <typeparam name="TValue"></typeparam>
 <param name="Dic"></param>
 <param name="项索引"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Unicode编码2(System.String)">
 <summary>
 将指定的字符串转为\u0000\u0001...格式的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.Unicode解码(System.String)">
 <summary>
 指定的\u0000\u0001...格式的字符串解析为实际的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历字段``1(``0,System.Action{System.Reflection.FieldInfo})">
 <summary>
 遍历一个对象的所有字段，不包括非公开的字段
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有字段``1(``0,System.Action{System.Reflection.FieldInfo})">
 <summary>
 遍历一个对象的所有字段,包括非公开的字段
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历属性``1(``0,System.Action{System.Reflection.PropertyInfo})">
 <summary>
 遍历一个对象的所有属性，不包括非公开的属性
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有属性``1(``0,System.Action{System.Reflection.PropertyInfo})">
 <summary>
 遍历一个对象的所有属性,包括非公开的属性
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历字段``1(``0,System.Func{System.Reflection.FieldInfo,System.Boolean})">
 <summary>
 遍历一个对象的所有字段，不包括非公开的字段
 <para>当遍历过程返回True时，则立即中断并跳出遍历过程</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有字段``1(``0,System.Func{System.Reflection.FieldInfo,System.Boolean})">
 <summary>
 遍历一个对象的所有字段,包括非公开的字段
 <para>当遍历过程返回True时，则立即中断并跳出遍历过程</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历属性``1(``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})">
 <summary>
 遍历一个对象的所有属性，不包括非公开的属性
 <para>当遍历过程返回True时，则立即中断并跳出遍历过程</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历所有属性``1(``0,System.Func{System.Reflection.PropertyInfo,System.Boolean})">
 <summary>
 遍历一个对象的所有属性,包括非公开的属性
 <para>当遍历过程返回True时，则立即中断并跳出遍历过程</para>
 </summary>
 <typeparam name="T"></typeparam>
 <param name="遍历对象">遍历字段的对象</param>
 <param name="遍历过程">每个字段的遍历过程</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.水平居中(System.Windows.Forms.Control)">
 <summary>
 将控件设置为所在容器的水平居中位置
 </summary>
 <param name="Ct"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.垂直居中(System.Windows.Forms.Control)">
 <summary>
 将控件设置为所在容器的垂直居中位置
 </summary>
 <param name="Ct"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.居中(System.Windows.Forms.Control)">
 <summary>
 将控件设置为所在容器的水平和垂直居中位置
 </summary>
 <param name="Ct"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Windows.Forms.Control,System.Func{System.Boolean},System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
<param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Func{System.Boolean},System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
<param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Single,System.Windows.Forms.Control,System.Func{System.Boolean},System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Single,System.Func{System.Boolean},System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Single,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
<param name="步进速度">指示每次动画应步进的速度，范围1到100</param> 
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Windows.Forms.Control,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
<param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Windows.Forms.Control,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Windows.Forms.Control,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Bitmap,System.Single,System.Windows.Forms.Control,System.Action{System.Drawing.Bitmap},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Image,System.Single,System.Windows.Forms.Control,System.Func{System.Boolean},System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Func{System.Boolean},System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Bitmap,System.Single,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Image,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Single,System.Windows.Forms.Control,System.Func{System.Boolean},System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Single,System.Func{System.Boolean},System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="中断条件">当条件满足返回True时立即中断动画线程</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Single,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Image,System.Windows.Forms.Control,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Windows.Forms.Control,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡入动画(System.Drawing.Image,System.Single,System.Windows.Forms.Control,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全透明到完全不透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.淡出动画(System.Drawing.Image,System.Single,System.Windows.Forms.Control,System.Action{System.Drawing.Image},System.Int32)">
 <summary>
 图像从完全不透明到完全透明的渐变动画，可设置中断条件，以便随时停止动画过程。
 </summary>
 <param name="Bmp"></param>
 <param name="动画间隔时间">动画效果的间隔时间，毫秒单位</param>
 <param name="委托控件">指示动画线程将用来委托回调的控件</param>
 <param name="回调">动画线程将要执行的方法，并将更改透明度后的图像作为参数传入方法</param>
 <param name="步进速度">指示每次动画应步进的速度，范围1到100</param>  
</member>
<member name="M:DSAPI.神扩展.神扩展.获取渐变对应颜色(System.Drawing.Color,System.Drawing.Color,System.Single)">
 <summary>
 获取由一种颜色到另一种颜色渐变过程中指定位置的颜色
 </summary>
 <param name="起始颜色">渐变的起始颜色</param>
 <param name="结束颜色">渐变的结束颜色</param>
 <param name="获取位置">位置百分比，位于0和1之间</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取渐变对应颜色(System.Drawing.Color[],System.Single)">
 <summary>
 获取由一种颜色到另一种颜色渐变过程中指定位置的颜色
 </summary>
 <param name="颜色数组">一系列用来平均分布渐变颜色的颜色数组</param>
 <param name="获取位置">位置百分比，位于0和1之间</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取文件列表(System.String,System.Boolean,System.String[],System.Boolean,System.Boolean)">
 <summary>
 获取指定文件夹里的文件列表
 </summary>
 <param name="文件夹路径">要从中获取文件列表的文件夹路径</param>
 <param name="包含子文件夹">指示搜索时是否包含子文件夹里的文件列表</param>
 <param name="扩展名列表">指定一种或多种要搜索的文件扩展名</param>
 <param name="去掉完整路径只保留文件名">去掉完整路径只保留文件名</param>
 <param name="去掉扩展名部分">去掉扩展名部分，只保留文件名</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取文件列表(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
 <summary>
 获取指定文件夹里的文件列表
 </summary>
 <param name="文件夹路径">要从中获取文件列表的文件夹路径</param>
 <param name="包含子文件夹">指示搜索时是否包含子文件夹里的文件列表</param>
 <param name="扩展名">指定一种要搜索的扩展名</param>
 <param name="去掉完整路径只保留文件名">去掉完整路径只保留文件名</param>
 <param name="去掉扩展名部分">去掉扩展名部分，只保留文件名</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历资源(System.Resources.ResourceManager,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
 <summary>
 遍历指定的资源文件，每次执行相应的操作
 </summary>
 <param name="R"></param>
 <param name="操作">每次遍历时执行的操作,自动传入参数（资源名称,资源对象）
 <para>示例：</para>
 <para>Sub(x) MsgBox(x.Key)</para>
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历资源(System.Resources.ResourceManager,System.Func{System.Collections.Generic.KeyValuePair{System.String,System.Object},System.Boolean})">
 <summary>
 遍历指定的资源文件，每次执行相应的操作
 </summary>
 <param name="R"></param>
 <param name="操作">每次遍历时执行的操作,自动传入参数（资源名称,资源对象）,若返回True则立即终止遍历过程
 <para>示例：</para>
 <para>Function(x) MsgBox(x.Key)</para>
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.找到资源(System.Resources.ResourceManager,System.String)">
 <summary>
 从资源集合中找到指定资源
 </summary>
 <param name="R"></param>
 <param name="资源名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.取值(System.Data.DataTable,System.Int32,System.String,System.Object)">
 <summary>
 提取DataTable指定单元格的值
 </summary>
 <param name="Dt"></param>
 <param name="行号"></param>
 <param name="列名"></param>
 <param name="DBNull时返回值">如果单元格为DbNull,则返回指定的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.取值(System.Data.DataTable,System.Int32,System.Int32,System.Object)">
 <summary>
 提取DataTable指定单元格的值
 </summary>
 <param name="Dt"></param>
 <param name="行号"></param>
 <param name="列号"></param>
 <param name="DBNull时返回值">如果单元格为DbNull,则返回指定的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.取值(System.Data.DataRow,System.String,System.Object)">
 <summary>
 提取DataRow指定单元格的值
 </summary>
 <param name="Dt"></param>
 <param name="列名"></param>
 <param name="DBNull时返回值">如果单元格为DbNull,则返回指定的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.取值(System.Data.DataRow,System.Int32,System.Object)">
 <summary>
 提取DataRow指定单元格的值
 </summary>
 <param name="Dt"></param>
 <param name="列号"></param>
 <param name="DBNull时返回值">如果单元格为DbNull,则返回指定的值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.线性提取(System.String,System.UInt32[])">
 <summary>
 从0开始依次提取指定长度的字符串，返回提取后的字符串数组
 <para>示例：</para>
 <para>线性提取("123456789",2,1,4,2)</para>
 <para>返回 {"12","3","4567","89"}</para>
 </summary>
 <param name="源文本"></param>
 <param name="依次提取的长度">可变数组参数，1个或多个数值</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.插入字符串数组(System.String[],System.String[])">
 <summary>
 将指定的数组中每个字符串依次插入到目标字符串数组之间，并返回合并后的字符串
 <para>示例</para>
 <para>插入字符串数组({"2021","02","21","15:00"},{"年","月","日"}</para>
 <para>返回"2021年02月21日15:00"</para>
 </summary>
 <param name="源数组"></param>
 <param name="要插入的数组"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.插入字符串数组(System.String[],System.String)">
 <summary>
 将指定的字符串中每个字符依次插入到目标字符串数组之间，并返回合并后的字符串
 <para>示例</para>
 <para>插入字符串数组({"2021","02","21","15:00"},{"年月日"}</para>
 <para>返回"2021年02月21日15:00"</para>
 </summary>
 <param name="源数组"></param>
 <param name="要插入的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.转日期类型(System.String)">
 <summary>
 将指定的字符串转为相应的日期类型
 <para>需要至少4位数字长度的字符串，字符长度必须为4,6,8,10,12,14,17之一</para>
 <para>示例</para>
 <para>Dt=转日期类型("20210221")</para>
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.清空字段和属性值``1(``0)">
 <summary>
 清除对象的字段和属性值
 <para>这将导致数值变成0或字符串变成空值，列表和数组会被清空</para>
 <para>该操作会忽略标识为“清空时忽略”特性的字段和属性，以及当标识有“DefaultValue”特性时会将设置为指定的默认值。</para>
 <para>"清空时忽略"特性位于DSAPI.反射</para>
 </summary>
 <param name="对象">要被执行操作的对象</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.分段``1(System.Collections.Generic.ICollection{``0},System.UInt32)">
 <summary>
 将一个集合分成指定的段数，每一段均为平均划分数量的列表集合（除了最后一段）。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <param name="段数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分段(System.String,System.UInt32)">
 <summary>
 将一个集合分成指定的段数，每一段均为平均划分数量的列表集合（除了最后一段）。
 </summary>
 <param name="C"></param>
 <param name="段数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分段``1(System.Collections.ICollection,System.UInt32)">
 <summary>
 将一个集合分成指定的段数，每一段均为平均划分数量的列表集合（除了最后一段）。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <param name="段数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.分段``1(System.Collections.Generic.IEnumerable{``0},System.UInt32)">
 <summary>
 将一个集合分成指定的段数，每一段均为平均划分数量的列表集合（除了最后一段）。
 </summary>
 <typeparam name="T"></typeparam>
 <param name="C"></param>
 <param name="段数"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.极窄边框窗体">
 <summary>
 一种窗体样式,效果参考Windows7系统中点击托盘区音量图标之后显示的窗体
 </summary>
</member>
<member name="P:DSAPI.极窄边框窗体.失去焦点后自动关闭窗体">
 <summary>
 指示当窗体失去焦点后是否自动关闭
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.DS单机授权.清除注册表记录(System.String)">
 <summary>
 清除授权文件对于该项目的注册表信息
 </summary>
</member>
<member name="M:DSAPI.DS单机授权.显示授权激活窗口">
 <summary>
 当软件未激活时,弹出激活窗口
 </summary>
</member>
<member name="M:DSAPI.DS单机授权.算法.授权验证算法(System.String,System.String,System.String,System.String)">
 <summary>
 该方法将在授权验证时调用
 判断授权无效的条件：剩余天数为0，已激活为False '程序将拒绝继续使用，直接退出
 判断授权有效的条件：剩余天数不为0，已激活为False '程序可以继续使用，直到剩余天数为0
 当已激活为True，则不再继续判断剩余天数，软件可继续使用
 </summary>
 <param name="传入ID"></param>
 <param name="密钥"></param>
 <param name="软件名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.DS标签.微软常用蓝色">
 <summary>
 微软常用的一种颜色，此属性仅为方便复制颜色值存在，不起其他任何作用。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.DS标签.启用链接编辑">
 <summary>
 参考：
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.格式化字符串_链接(System.String,System.String,System.String,System.Drawing.Color)">
 <summary>
 获取根据参数格式化后的DSL链接字符串
 </summary>
 <param name="字符串"></param>
 <param name="链接标识符"></param>
 <param name="链接目标"></param>
 <param name="颜色"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.格式化字符串_链接(System.String,System.String,System.String)">
 <summary>
 获取根据参数格式化后的DSL链接字符串
 </summary>
 <param name="字符串"></param>
 <param name="链接标识符"></param>
 <param name="链接目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.格式化字符串_链接(System.String,System.String)">
 <summary>
 获取根据参数格式化后的DSL链接字符串
 </summary>
 <param name="字符串"></param>
 <param name="链接标识符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.格式化字符串(System.String,System.Drawing.Color,System.Drawing.FontStyle)">
 <summary>
 获取根据参数格式化后的DSL字符串
 </summary>
 <param name="字符串"></param>
 <param name="颜色"></param>
 <param name="字体样式"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.格式化字符串(System.String,System.Drawing.Color)">
 <summary>
 获取根据参数格式化后的DSL字符串
 </summary>
 <param name="字符串"></param>
 <param name="颜色"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.DS标签.从DataTable行更新变量值(System.Data.DataTable,System.Int32)">
 <summary>
 从指定的DataTable行获取列名称与变量名相同的单元格值。
 </summary>
 <param name="目标">要从中获取变量值的DataTable</param>
 <param name="行号">指定要从中提取值的行号</param>
</member>
<member name="M:DSAPI.DS标签.从DataTable列更新变量值(System.Data.DataTable,System.Int32,System.Int32)">
 <summary>
 从指定的DataTable列获取变量名相同的单元格值。
 </summary>
 <param name="目标">要从中获取变量值的DataTable</param>
 <param name="列号">指定要从中提取值的列号</param>
 <param name="变量名所在列号">指示查找器哪一列包含变量名</param>
</member>
<member name="M:DSAPI.DS标签.从XML结构更新变量值(System.String,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 提取XML结构字符串中对应的变量值
 </summary>
 <param name="XML结构字符串">要从中提取变量值的XML结构或格式字符串</param>
 <param name="删除双引号和单引号">指示是否应将提取的变量值中删除双引号和单引号</param>
 <param name="删除换行符及回车符">指示是否应将提取的变量值中删除换行符及回车符</param>
 <param name="删除首尾空格">指示是否应将提取的变量值中删除首尾空格</param>
</member>
<member name="M:DSAPI.DS标签.从INI结构更新变量值(System.String,System.Boolean,System.Boolean)">
 <summary>
 提取INI结构字符串中对应的变量值
 </summary>
 <param name="INI结构字符串">要从中提取变量值的XML结构或格式字符串</param>
 <param name="删除双引号和单引号">指示是否应将提取的变量值中删除双引号和单引号</param>
 <param name="删除首尾空格">指示是否应将提取的变量值中删除首尾空格</param>
</member>
<member name="M:DSAPI.DS标签.从JSON结构更新变量值(System.String,System.Boolean,System.Boolean)">
 <summary>
 提取JSON结构字符串中对应的变量值
 </summary>
 <param name="JSON结构字符串">要从中提取变量值的JSON结构或格式字符串</param>
 <param name="删除双引号和单引号">指示是否应将提取的变量值中删除双引号和单引号</param>
 <param name="删除首尾空格">指示是否应将提取的变量值中删除首尾空格</param>
</member>
<member name="T:DSAPI.DS标签.数值">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 </summary>
</member>
<member name="T:DSAPI.DS标签.日期格式">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 </summary>
</member>
<member name="T:DSAPI.DS标签.控件宽度">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 <para>指示加载的控件宽度</para>
 </summary>
</member>
<member name="T:DSAPI.DS标签.控件高度">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 <para>指示加载的控件高度</para>
 </summary>
</member>
<member name="T:DSAPI.DS标签.文本">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 </summary>
</member>
<member name="T:DSAPI.DS标签.DS标签链接编辑">
 <summary>
 点击DS标签中的链接时，通过链接.标识来获取相应的字段或属性，并加载指定的控件。
 </summary>
</member>
<member name="M:DSAPI.DS标签.DS标签链接编辑.#ctor(System.String,System.Boolean)">
 <summary>
 自动识别基本类型
 </summary>
 <param name="_绑定字段或属性名称"></param>
</member>
<member name="M:DSAPI.DS标签.DS标签链接编辑.#ctor">
 <summary>
 自动识别基本类型
 </summary>
</member>
<member name="T:DSAPI.DS标签.字段和属性值">
 <summary>
 指示DS标签中点击链接创建控件时应对创建的控件进行的字段或属性操作。
 </summary>
</member>
<member name="T:DSAPI.CT图形图像.彩色文字图像.数值调整">
 <summary>
 格式：ChValue=显示文本,目标控件名称,绑定的属性名称,最小值,最大值,当前值
 </summary>
</member>
<member name="P:DSAPI.CT图形图像.彩色文字图像.字体">
 <summary>
 字体
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.CT图形图像.彩色文字图像.描边颜色">
 <summary>
 文字描边颜色
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="E:DSAPI.TV节点拖放.节点拖放完毕">
 <summary>
 拖放到的目标TreeView的目标节点下，如果应用更改=False，则取消当前操作。
 </summary>
 <param name="TV">拖放到的目标TreeView</param>
 <param name="目标节点"></param>
 <param name="应用更改">如果应用更改=False，则取消当前操作</param>
</member>
<member name="P:DSAPI.TV节点拖放.允许拖放到节点级别">
 <summary>
 允许将节点拖放到这些级别的节点里
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.控件.控制台窗口关闭时执行(System.Action)">
 <summary>
 当本函数所在代码为控制台窗体,且控制台窗口被用户关闭时,执行指定的方法.
 注意:该方法不与GC资源回收器同步,请勿在此方法中执行较为耗时的过程,因为执行时可能部分调用的对象已经被GC回收.
 </summary>
 <param name="Act"></param>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.String)">
 <summary>
 将路径添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.String[])">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.通过路径查找节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView查找指定树路径的唯一节点
 </summary>
 <param name="Tv">要在其中查找的TreeView</param>
 <param name="路径">完整的树路径</param>
 <returns>返回一个节点</returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.清除指定路径节点的子节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView中清空指定树路径中最后一个节点
 </summary>
 <param name="Tv">要在其中清空树路径中最后一个节点的TreeView</param>
 <param name="路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.将节点绑定到文件系统(System.Windows.Forms.TreeView,System.String,System.Boolean)">
 <summary>
 以逐层添加模式将指定TreeView控件绑定到驱动器以显示驱动器文件目录
 </summary>
 <param name="T">目标TreeView</param>
 <param name="文件夹路径">要显示的文件夹路径</param>
 <param name="点击节点时加载子文件列表">是否添加点击事件以支持用户操作</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.解除节点与文件系统的绑定关系(System.Windows.Forms.TreeView)">
 <summary>
 从目标TreeView解除驱动器绑定并清除内容
 </summary>
 <param name="T">目标TreeView</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.Form窗体.透明窗体样式显示图像(System.Windows.Forms.Form,System.Drawing.Bitmap,System.Byte)">
 <summary>
 将一个窗体以UpdateLayeredWindow方式显示为指定的PNG格式图像
 </summary>
 <param name="要显示透明图像的窗体"></param>
 <param name="要显示的透明图像"></param>
 <param name="透明度_0到255"></param>
 <note type="important">如果发现图像显示不完整,请确认窗体当前大小是否足够显示指定的图像</note>
 <example>
 <para>显示PNG异形窗体</para>
 <para>素材图片,添加至资源文件</para>
 <para><img src="../CodesImages/251958-20190225155934366-602538992.png"/></para>
 <para>运行后效果</para>
 <para><img src="../CodesImages/251958-20190225155949563-2079818713.png"/></para>
 <para>示例源码</para>
 <code language="vbnet">
 Me.Size = My.Resources._1409908158443933277.Size
DSAPI.控件.Form窗体.透明窗体样式显示图像(Me, My.Resources._1409908158443933277, 255)
DSAPI.控件.Form窗体.鼠标点击任意位置拖动窗体(Me)
</code>
<code language="cs">
this.Size = My.Resources._1409908158443933277.Size;
DSAPI.控件.Form窗体.透明窗体样式显示图像(this, My.Resources._1409908158443933277, 255);
DSAPI.控件.Form窗体.鼠标点击任意位置拖动窗体(this);
 </code>        
 </example>
</member>
<member name="T:DSAPI.控件.文件拖放助手">
 <summary>
 可对控件加入文件拖放支持，该操作无需手动开启控件的AllowDrop属性。
 </summary>
 <example>
 <para>对窗体控件加入文件拖放支持</para>
 <code source="E:\CodesDemo\文件拖放助手_vb.txt" language="vbnet"></code>
 <code source="E:\CodesDemo\文件拖放助手_cs.txt" language="cs"></code>
 </example>
 <remarks>
 <note type="important">注意：请在控件完全初始化完成后再使用<b>初始化</b>，建议将初始化写在窗体的<b>Shown</b>事件过程</note>
 </remarks>
</member>
<member name="E:DSAPI.控件.文件拖放助手.拖入文件">
 <summary>
 当用户将一个或多个文件拖至控件上时触发
 </summary>
 <param name="控件">指示用户将文件拖至哪个控件上</param>
 <param name="文件路径">用户拖入的文件列表</param>
</member>
<member name="P:DSAPI.控件.文件拖放助手.支持扩展名">
 <summary>
 批示哪些文件类型将被拖放助手接受并导致触发拖入文件事件
 </summary>
 <returns>支持的文件类型列表</returns>
</member>
<member name="F:DSAPI.控件.文件拖放助手.绑定控件列表">
 <summary>
 指示哪些控件将被文件拖放助手自动绑定文件拖放操作
 </summary>
</member>
<member name="M:DSAPI.控件.文件拖放助手.初始化">
 <summary>
 对配置中添加的控件列表进行自动化事件绑定，仅当初始化完成后，目标控件才能起到文件拖放支持作用。
 </summary>
</member>
<member name="M:DSAPI.控件.创建一个控件``1(System.Type,System.String)">
 <summary>
 通过指定的控件类型名称创建一个控件
 </summary>
 <typeparam name="T"></typeparam>
 <param name="控件库中其中一个控件类型">用来帮助本方法查找控件的源，如命名空间等。示例："System.Windows.Forms.Form"></param>
<param name="控件类型名称">指示要创建的控件类型名称，区分大小写，如："Button"</param>
 <returns></returns>
</member>
<member name="M:DSAPI.控件.创建一个控件(System.Type,System.String)">
 <summary>
 通过指定的控件类型名称创建一个控件
 </summary>
 <param name="控件库中其中一个控件类型">用来帮助本方法查找控件的源，如命名空间等。示例："System.Windows.Forms.Form"></param>
<param name="控件类型名称">指示要创建的控件类型名称，区分大小写，如："Button"</param>
 <returns></returns>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.在指定控件上启动视频预览(System.IntPtr,System.Drawing.Rectangle,System.Int32)">
 <summary>
 开始显示图像
 </summary>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.停止预览">
 <summary>
 停止显示
 </summary>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.停止录像">
 <summary>
 停止录像
 </summary>
</member>
<member name="M:DSAPI.文件.获取文件列表(System.String,System.Boolean,System.String[],System.Boolean,System.Boolean)">
 <summary>
 获取指定文件夹里的文件列表
 </summary>
 <param name="文件夹路径">要从中获取文件列表的文件夹路径</param>
 <param name="包含子文件夹">指示搜索时是否包含子文件夹里的文件列表</param>
 <param name="扩展名列表">指定一种或多种要搜索的文件扩展名</param>
 <param name="去掉完整路径只保留文件名">去掉完整路径只保留文件名</param>
 <param name="去掉扩展名部分">去掉扩展名部分，只保留文件名</param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.获取文件列表(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
 <summary>
 获取指定文件夹里的文件列表
 </summary>
 <param name="文件夹路径">要从中获取文件列表的文件夹路径</param>
 <param name="包含子文件夹">指示搜索时是否包含子文件夹里的文件列表</param>
 <param name="扩展名">指定一种要搜索的扩展名</param>
 <param name="去掉完整路径只保留文件名">去掉完整路径只保留文件名</param>
 <param name="去掉扩展名部分">去掉扩展名部分，只保留文件名</param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.系统右键菜单.#ctor">
 <summary>Default constructor</summary>
</member>
<member name="M:DSAPI.文件.系统右键菜单.Finalize">
 <summary>Ensure all resources get released</summary>
</member>
<member name="M:DSAPI.文件.系统右键菜单.GetContextMenuInterfaces(DSAPI.文件.系统右键菜单.IShellFolder,System.IntPtr[],System.IntPtr@)">
 <summary>Gets the interfaces to the context menu</summary>
 <param name="oParentFolder">Parent folder</param>
 <param name="arrPIDLs">PIDLs</param>
 <returns>true if it got the interfaces, otherwise false</returns>
</member>
<member name="M:DSAPI.文件.ShellContextMenuException.#ctor">
 <summary>Default contructor</summary>
</member>
<member name="M:DSAPI.文件.ShellContextMenuException.#ctor(System.String)">
 <summary>Constructor with message</summary>
 <param name="message">Message</param>
</member>
<member name="T:DSAPI.文件.CMD命令行进程代理">
 <summary>
 用来和CMD.exe或指定exe进行输出重定向的简化使用工具，可隐藏或显式地启动一个cmd.exe，并将输出流、输入流和错误流重定向至代理，通过事件触发方式与之交互。
 </summary>
 <example>
 <para>输出和输出控制台<b>CMD.EXE</b>内容</para>
 <para><img src="../CodesImages/251958-20190514143031705-856083432.gif"/></para>
 <code language="vb" source="e:\codesdemo\CMD命令行_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\CMD命令行_c#.txt"></code>
 </example>
</member>
<member name="T:DSAPI.文件.FolderNameEditor">
 <summary>
 FolderBrowser 的设计器基类
 </summary>
</member>
<member name="T:DSAPI.文件.文件夹选择对话框">
 <summary>
 Vista 样式的选择文件对话框的基类
 </summary>
</member>
<member name="M:DSAPI.文件.文件夹选择对话框.#ctor">
 <summary>
 初始化 FolderBrowser 的新实例
 </summary>
</member>
<member name="P:DSAPI.文件.文件夹选择对话框.选定路径">
 <summary>
 获取在 FolderBrowser 中选择的文件夹路径
 </summary>
</member>
<member name="M:DSAPI.文件.文件夹选择对话框.打开对话框(System.Windows.Forms.IWin32Window)">
 <summary>
 向用户显示 FolderBrowser 的对话框
 </summary>
 <param name="宿主">任何实现 System.Windows.Forms.IWin32Window（表示将拥有模式对话框的顶级窗口）的对象。</param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.INI读写器.载入INI文件(System.String)">
 <summary>
 默认编码:UTF8
 </summary>
 <param name="文件路径"></param>
</member>
<member name="M:DSAPI.文件.INI读写器.保存到文件(System.String)">
 <summary>
 默认编码:UTF8
 </summary>
 <param name="保存文件路径"></param>
</member>
<member name="M:DSAPI.文件.找到当前项目中的资源(System.String)">
 <summary>
 查找当前整个项目中对应名称的资源
 </summary>
 <param name="资源名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.将可执行程序注册为Windows服务(System.String,System.String,System.String)">
 <summary>
 该方法将服务启动设置为“自动”
 </summary>
 <param name="可执行文件路径"></param>
 <param name="显示名称"></param>
 <param name="服务说明"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.长路径转短路径(System.String)">
 <summary>
 将一个超长的文件路径转换为短路径
 </summary>
 <param name="长路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.文件.短路径转长路径(System.String)">
 <summary>
 将一个变短的文件路径转换为原始长路径
 </summary>
 <param name="短路径"></param>
 <returns></returns>
</member>
<member name="F:DSAPI.硬件信息.输出长度.短">
 <summary>
16个字符
 </summary>
</member>
<member name="F:DSAPI.硬件信息.输出长度.中">
 <summary>
 24个字符
 </summary>
</member>
<member name="F:DSAPI.硬件信息.输出长度.长">
 <summary>
 32个字符
 </summary>
</member>
<member name="F:DSAPI.硬件信息.分段.无">
 <summary>
 不使用分段
 </summary>
</member>
<member name="F:DSAPI.硬件信息.分段.短">
 <summary>
 2个字符长度
 </summary>
</member>
<member name="F:DSAPI.硬件信息.分段.中">
 <summary>
 4个字符长度
 </summary>
</member>
<member name="F:DSAPI.硬件信息.分段.长">
 <summary>
 6个字符长度
 </summary>
</member>
<member name="T:DSAPI.硬件信息.机器唯一码">
 <summary>
 根据本机CPU和主板进行运算得出的唯一码
 </summary>
</member>
<member name="M:DSAPI.硬件信息.机器唯一码.生成唯一码(DSAPI.硬件信息.输出长度,DSAPI.硬件信息.分段)">
 <summary>
 根据本机CPU和主板进行运算得出的唯一码
 </summary>
 <param name="长度">设置唯一码输出长度,16或24或32位</param>
 <param name="分段方式">设置是否字符串之间分段</param>
 <returns></returns>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Processor">
 <summary>
  CPU 处理器 
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Processor_LoadPercentage">
 <summary>
 CPU使用率
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PhysicalMemory">
 <summary>
 物理内存条
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Keyboard">
 <summary>
 键盘
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PointingDevice">
 <summary>
 输入设备
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_FloppyDrive">
 <summary>
 软盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_DiskDrive">
 <summary>
 硬盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.DiskDrive_SerialNumber">
 <summary>
 硬盘序列号
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_CDROMDrive">
 <summary>
 光盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_BaseBoard">
 <summary>
 主板
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_BIOS">
 <summary>
 BIOS芯片
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_SoundDevice">
 <summary>
 多媒体设备,声卡
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_USBController">
 <summary>
 USB控制器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_NetworkAdapter">
 <summary>
 网络适配器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.NetworAdapterMAC">
 <summary>
 网卡MAC地址
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Printer">
 <summary>
 打印机
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PrintJob">
 <summary>
 打印机任务
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_POTSModem">
 <summary>
 MODEM调制解调器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_VideoController">
 <summary>
 显卡
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.Hdd.AtapiDevice">
 
 ATAPI驱动器相关
 
</member>
<member name="M:DSAPI.系统信息.调整系统音量(System.Single)">
 <summary>
 调整计算机当前系统音量
 </summary>
 <param name="音量百分比">音量百分比范围0到1(即0%到100%)</param>
</member>
<member name="T:DSAPI.系统信息.系统错误信息">
 <summary>
 Win32错误信息
 </summary>
</member>
<member name="P:DSAPI.系统信息.系统错误信息.错误号">
 <summary>
 如果错误号不是0，则表示出现了错误
 </summary>
</member>
<member name="P:DSAPI.系统信息.系统错误信息.信息内容">
 <summary>
 当错误号不为0时，将包含一条错误信息内容字符串
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.系统信息.捕捉Win32错误信息">
 <summary>
  捕捉由GetLastError产生的错误信息字符串
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.系统信息.程序路径.程序名称">
 <summary>
 程序对应的名称
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.系统信息.程序路径.文件路径">
 <summary>
 程序对应所在路径
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.系统信息.程序路径.删除">
 <summary>
 从注册表删除该程序路径
 </summary>
</member>
<member name="T:DSAPI.系统信息.全局程序路径">
 <summary>
 注册表中记录全局程序文件名及路径的信息，这使得你可以直接打开程序文件名而无需输入完整的路径。
 <para>示例：开始菜单->运行->输入"notepad",点击“确定”按钮，即可打开“记事本”程序。</para>
 <para>注意：路径只能指向文件路径，不能是文件夹路径</para>
 </summary>
</member>
<member name="M:DSAPI.系统信息.全局程序路径.重新载入">
 <summary>
 重新从注册表读取信息
 </summary>
</member>
<member name="P:DSAPI.系统信息.全局程序路径.程序(System.String)">
 <summary>
 通过指定的程序名称来获取程序路径信息
 </summary>
 <param name="程序名称"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.系统信息.全局程序路径.添加(System.String,System.String)">
 <summary>
 将一条程序路径信息添加到注册表
 <para>注意：如果添加的程序名称已经存在，则将替换为新的文件路径。</para> 
 </summary>
 <param name="程序名称">要设置的全局程序文件名称</param>
 <param name="文件路径">文件对应的路径</param>
</member>
<member name="M:DSAPI.系统信息.全局程序路径.删除(System.String)">
 <summary>
 将一条程序路径信息从注册表删除
 </summary>
 <param name="程序名称">要删除的全局程序文件名称</param>
</member>
<member name="M:DSAPI.系统信息.全局程序路径.添加(DSAPI.系统信息.程序路径)">
 <summary>
 将一条程序路径信息添加到注册表
 <para>注意：如果添加的程序名称已经存在，则将替换为新的文件路径。</para>
 </summary>
 <param name="item">要添加的程序路径信息</param>
</member>
<member name="M:DSAPI.系统信息.Windows防火墙.添加端口规则(System.String,System.Int32,DSAPI.系统信息.Windows防火墙.协议类型)">
 <summary>  
 添加防火墙例外端口  
 </summary>  
 <param name="规则名称">名称</param>  
 <param name="端口">端口</param>  
 <param name="协议">协议(TCP、UDP)</param>  
</member>
<member name="M:DSAPI.系统信息.Windows防火墙.添加应用程序规则(System.String,System.String)">
 <summary>  
 将应用程序添加到防火墙例外  
 </summary>  
 <param name="规则名称">应用程序名称</param>  
 <param name="应用程序路径">应用程序可执行文件全路径</param>  
</member>
<member name="M:DSAPI.系统信息.Windows防火墙.删除端口规则(System.Int32,DSAPI.系统信息.Windows防火墙.协议类型)">
 <summary>  
 删除防火墙例外端口  
 </summary>  
 <param name="端口">端口</param>  
 <param name="协议">协议（TCP、UDP、任何）</param>  
</member>
<member name="M:DSAPI.系统信息.Windows防火墙.删除应用程序规则(System.String)">
 <summary>  
 删除防火墙例外中应用程序  
 </summary>  
 <param name="应用程序路径">程序的绝对路径</param>  
</member>
<member name="M:DSAPI.系统信息.Windows防火墙.获取指定进程的命令行参数(System.String)">
 <summary>
 获取指定进程名称的命令行参数
 </summary>
 <param name="进程名称">进程名称,如"notepad.exe"</param>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.服务端.IP黑名单">
 <summary>
 位于黑名单中的IP在连接后会立即被强制断开
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.服务端.自定义黑名单">
 <summary>
 一个自定义Function,将被传入正在连接的Socket客户端,如果Function处理后返回False,则此Socket客户将被立即断开,如果为True则保持连接
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.服务端.接收缓存大小">
 <summary>
 获取或设置服务端接收的缓存区容量大小
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.服务端.发送缓存大小">
 <summary>
 获取或设置服务端接收的缓存区容量大小
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.服务端.超时自动断开时间">
 <summary>
 当客户端在指定的超时时间内没有通讯的,则认为是已超时,自动从小客户端列表中移除
 <para>如果超时时间小于或等于0,则表示不使用超时设置</para>
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.网络.Socket传输_Tcp.服务端.小客户端">
 <summary>
 Socket传输_Tcp.服务端中的已连接的Tcp客户端
 </summary>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.断开">
 <summary>
 断开该客户端，并从小客户端列表移除
 </summary>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.移除">
 <summary>
 断开该客户端，并从小客户端列表移除
 </summary>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.小客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.客户端列表.Clear">
 <summary>
 断开所有小客户端并清空小客户端列表
 </summary>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.客户端列表.Remove(DSAPI.网络.Socket传输_Tcp.服务端.小客户端)">
 <summary>
 断开指定小客户端并从列表移除
 </summary>
 <param name="item"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.客户端列表.Remove(System.String,System.Int32)">
 <summary>
 断开指定小客户端并从列表移除
 </summary>
<param name="IP">指定小客户端的IP地址</param>
<param name="端口">指定小客户端的端口号</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.服务端.客户端列表.断开所有小客户端">
 <summary>
 断开所有小客户端并清空小客户端列表
 </summary>
</member>
<member name="P:DSAPI.网络.Socket传输_Tcp.客户端.发送缓存大小">
 <summary>
 获取或设置服务端接收的缓存区容量大小
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Tcp.客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送文本(System.String,System.String,System.Int32)">
 <summary>
 以ASCII编码发送文本
 </summary>
 <param name="文本内容"></param>
 <param name="目标IP"></param>
 <param name="端口"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.读取数据_String(System.String,System.Int32,System.String,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 向串口发送字符串数据并等待返回,编码随配置信息而定
 </summary>
 <param name="IP">要发送到的目标IP地址</param>
 <param name="端口">要发送到的目标主机端口</param>
 <param name="发送的数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.读取数据_String(System.String,System.Int32,System.String,System.Int32,System.Boolean)">
 <summary>
 向串口发送ASCII编码的字符串数据并等待返回
 </summary>
 <param name="IP">要发送到的目标IP地址</param>
 <param name="端口">要发送到的目标主机端口</param>
 <param name="发送的数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.读取数据_Bytes(System.String,System.Int32,System.Byte[],System.Int32,System.Boolean)">
 <summary>
 向串口发送字节数组并等待返回
 </summary>
 <param name="IP">要发送到的目标IP地址</param>
 <param name="端口">要发送到的目标主机端口</param>
 <param name="发送的数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据放作为参数传入到测试方法，返回测试结果（True或False）
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回由测试方法产生的结果(True或False)</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Byte[],System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试返回(System.Byte[],System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送数据">发送指定的数据</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.发送数据并测试返回(System.String,System.Int32,DSAPI.通讯.超时方式,System.String,System.Func{System.Byte[],System.Boolean})">
 <summary>
 发送指定的数据，并将返回的数据作为参数传入到测试方法，返回接收的数据及测试结果
 </summary>
 <param name="发送字符串">发送指定的字符串</param>
 <param name="超时时间">最多待多久，单位毫秒，如果直到超时时间后没有接收到任何数据的，该方法直接返回False，也不会调用测试方法</param>
 <param name="等待超时方式">指示在发送数据后以何种方式等待，然后调用测试方法</param>
 <param name="特定数据">当指定等待超时方式为“收到特定数据”时，指定“特定数据”</param>
 <param name="测试方法">一个方法，参数将自动传入接收到的Byte数组，该方法应返回True或False以表示测试是否通过<para>如果测试方法不存在，则返回True</para></param>
 <returns>返回接收的数据及测试结果</returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串(System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串_POST(System.String,System.Byte[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="传递数据">一个参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组(System.String)">
 <summary>
 产生一个Http请求
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTable(System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTable(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTable_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url，如果是WebAPI，则还应包含API名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串II(System.String,System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串II(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串II_POST(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组II(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
<param name="API函数名称">指示要调用的API函数名称</param> 
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组II_POST(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
<param name="API函数名称">指示要调用的API函数名称</param> 
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组II(System.String,System.String)">
 <summary>
 产生一个Http请求，并获取返回值,该请求将不使用UserAgent标识
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableII(System.String,System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableII(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableII_POST(System.String,System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="Url">请求的基Url</param>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串III(System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串III(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字符串III_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数">一个或多个请求参数</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组III(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
<param name="API函数名称">指示要调用的API函数名称</param> 
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组III_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
<param name="API函数名称">指示要调用的API函数名称</param> 
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载字节数组III(System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableIII(System.String)">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableIII(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.网络.Http客户端.下载DataTableIII_POST(System.String,DSAPI.神扩展.神扩展.请求参数[])">
 <summary>
 产生一个Http请求，并获取返回值
 </summary>
 <param name="API函数名称">指示要调用的API函数名称</param>
 <param name="参数"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.网络.HTTP监听.允许外网连接">
 <summary>
 是否允许外网访问本服务
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.绑定端口">
 <summary>
 本服务欲绑定的监听端口号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.使用参数前导符">
 <summary>
 是否使用参数前导符，当此属性设置为True时，客户端访问时若没有以指定参数前导符开头的请求将被丢弃。
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.参数前导符">
 <summary>
 设置或获取参数前导符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.编码">
 <summary>
 确定解析用户URL以及返回给用户的数据使用何种字符编码
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.允许外网连接">
 <summary>
 是否允许外网访问本服务
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.绑定端口">
 <summary>
 本服务欲绑定的监听端口号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.使用参数前导符">
 <summary>
 是否使用参数前导符，当此属性设置为True时，客户端访问时若没有以指定参数前导符开头的请求将被丢弃。
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.参数前导符">
 <summary>
 设置或获取参数前导符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.监听状态">
 <summary>
 确定解析用户URL以及返回给用户的数据使用何种字符编码
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.DSWebClient">
 <summary>
 一个可设置自定义超时时间的WebClient
 </summary>
</member>
<member name="M:DSAPI.网络.获取域名指向的IP(System.String)">
 <summary>
 获取域名指向的IP,如通过动态域名获取IP
 </summary>
 <param name="不包括http的域名">要解析成IP的域名,不包括http://开头</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:DSAPI.网络.局域网广播._Port">
 <summary>
 局域网广播器_客户端
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.开始接收广播">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.开始接收广播(System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.停止接收广播">
 <summary>
 停止接收
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.局域网组播.局域网组播_客户端">
 <summary>
 局域网广播器_客户端
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播(System.String,System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播">
 <summary>
 开始接收组播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播(System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.停止接收组播">
 <summary>
 停止接收
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.局域网组播.局域网组播_服务端">
 <summary>
 局域网广播器_服务端
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.解析转换.金额转换.数字金额转人民币大写(System.Decimal)">
 <summary> 
 数字转大写金额
 </summary>
 <param name="要转换的数字">参数最大值为万亿位或数字个数不超过16个（含小数点）</param>
</member>
<member name="M:DSAPI.解析转换.Unicode解码(System.String)">
 <summary>
 指定的\u0000\u0001...格式的字符串解析为实际的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.解析转换.Unicode编码(System.String)">
 <summary>
 将指定的字符串转为\u0000\u0001...格式的字符串
 </summary>
 <param name="S"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.解析转换.Bytes解析器">
 <summary>
 一个用于解析Byte数组自定义解析器类
 </summary>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.附加数据">
 <summary>
 一个额外可存放键和值的字典
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.顺序号">
 <summary>
 在解析包开始解析前，先以包内的解析器进行以顺序号为依据的排序，然后再开始解析
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.字典">
 <summary>
 一个定自定义字典,除键名称外,每个字典项还可以存储用户自定义的若干个数据
 <para>值:Object类型,用来存储任何对象</para>
 <para>值1:Oject类型,默认值,仅当值2设置为True时,每次解析前都会将值设置为该默认值</para>
 <para>值2:Boolean类型,指示是否在每次解析前将值设置为默认值(即将值2赋值给值</para>
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.字典项(System.String)">
 <summary>
 获取自定义字典中指定键名称的值
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.字典包含键名称(System.String)">
 <summary>
 检查自定义字典中是否包含有指定键名称的字典项
 </summary>
 <param name="键名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.返回类型">
 <summary>
 告知调用端由“解析方法”返回的数据是什么类型的
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.名称">
 <summary>
 指定解析器的名称,当解析器位于一个解析包中时,解析器的名称不能和现有列表中的解析器名称重复.
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.字节起始位">
 <summary>
 指示应从数据字节哪里开始提取
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.字节长度">
 <summary>
 指示应提取数据字节字节数量
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.原始字节">
 <summary>
 经由指定起始位和长度从接收到的数据中摘取出的字节数组
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.解析方法">
 <summary>
 指定一个方法,解析器将调用该方法,并传入提取字节数组,方法应返回一个Object类型的结果.<para>如果解析方法不存在,则返回提取的字节数组.</para>
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.解析结果">
 <summary>
 获取经由解析方法解析返回的结果,或是原始字节数组
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析器.触发条件">
 <summary>
 当传入的方法满足指定要求时,才进行解析.方法将自动传入接收到的完整字节数组.<para>如果返回False，则不进行解析</para>
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.解析转换.IBytes解析器">
 <summary>
 一个用于解析Byte数组自定义解析器类接口
 </summary>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.附加数据">
 <summary>
 一个额外可存放键和值的字典
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.字典">
 <summary>
 一个定自定义字典,除键名称外,每个字典项还可以存储用户自定义的若干个数据
 <para>值:Object类型,用来存储任何对象</para>
 <para>值1:Oject类型,默认值,仅当值2设置为True时,每次解析前都会将值设置为该默认值</para>
 <para>值2:Boolean类型,指示是否在每次解析前将值设置为默认值(即将值2赋值给值</para>
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.返回类型">
 <summary>
 告知调用端由“解析方法”返回的数据是什么类型的
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.名称">
 <summary>
 指定解析器的名称,当解析器位于一个解析包中时,解析器的名称不能和现有列表中的解析器名称重复.
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.字节起始位">
 <summary>
 指示应从数据字节哪里开始提取
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.字节长度">
 <summary>
 指示应提取数据字节字节数量
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.解析转换.IBytes解析器.解析(System.Byte[])">
 <summary>
 指定一个方法,解析器将调用该方法,并传入提取字节数组,方法应返回一个Object类型的结果.<para>如果解析方法不存在,则返回提取的字节数组.</para>
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.解析转换.IBytes解析器.触发条件(System.Byte[])">
 <summary>
 当传入的方法满足指定要求时,才进行解析.方法将自动传入接收到的完整字节数组.<para>如果返回False，则不进行解析</para>
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.IBytes解析器.顺序号">
 <summary>
 在解析包开始解析前，先以包内的解析器进行以顺序号为依据的排序，然后再开始解析
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.解析数据(System.Byte[])">
 <summary>
 开始解析指定的字节数组
 </summary>
 <param name="Bts"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.解析数据(DSAPI.解析转换.Bytes解析器,System.Byte[])">
 <summary>
 使用指定的解析器对指定的数据进行解析
 </summary>
 <param name="指定解析器"></param>
 <param name="Bts"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.解析数据(System.String,System.Byte[])">
 <summary>
 使用指定的解析器对指定的数据进行解析，并返回该解析器
 </summary>
 <param name="解析器名称">解析包内的指定解析器的名称</param>
 <param name="Bts"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.添加解析器(System.String,System.Int32,System.Int32,System.Func{System.Byte[],System.Boolean},System.Func{System.Byte[],System.Object},DSAPI.神扩展.DS字典.DS字典{System.Object,System.Object,System.Boolean},System.UInt32)">
 <summary>
 添加一个解析器到解析包
 </summary>
 <param name="名称">新建解析器的名称</param>
 <param name="起始字节位">指示应从数据字节哪里开始提取</param>
 <param name="字节长度">指示应提取数据字节字节数量</param>
 <param name="触发条件">指定一个方法,该方法返回True时才进行解析,如果方法不存在,则默认为解析</param>
 <param name="解析方法">指定一个方法,解析器将调用该方法,并传入提取字节数组,方法应返回一个Object类型的结果.<para>如果解析方法不存在,则返回提取的字节数组.</para></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.添加解析器(DSAPI.解析转换.Bytes解析器)">
 <summary>
 添加一个解析器到解析包
 <param name="解析器">准备添加的一个现成的解析器</param>
 </summary>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.添加解析器(System.String)">
 <summary>
 将一个实现了“I解析器”接口的Dll文件加载到解析包中，如果文件加载失败，则自动忽略，不报任何异常
 </summary>
 <param name="解析器Dll文件路径"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.添加解析器(System.Byte[])">
 <summary>
 将一个实现了“I解析器”接口的Dll文件加载到解析包中，如果文件加载失败，则自动忽略，不报任何异常
 </summary>
 <param name="解析器Dll文件数据"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.添加解析器(System.String,System.Int32,System.Int32,System.Func{System.Byte[],System.Object},System.UInt32)">
 <summary>
 添加一个解析器到解析包
 </summary>
 <param name="名称">新建解析器的名称</param>
 <param name="起始字节位">指示应从数据字节哪里开始提取</param>
 <param name="字节长度">指示应提取数据字节字节数量</param>
 <param name="解析方法">指定一个方法,解析器将调用该方法,并传入提取字节数组,方法应返回一个Object类型的结果.<para>如果解析方法不存在,则返回提取的字节数组.</para></param>
</member>
<member name="P:DSAPI.解析转换.Bytes解析包.解析器(System.String)">
 <summary>
 获取指定名称的解析器的解析结果
 </summary>
 <param name="解析器名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析包.获取解析器(System.String)">
 <summary>
 获取指定名称的解析器
 </summary>
 <param name="解析器名称"></param>
 <returns></returns>
</member>
<member name="P:DSAPI.解析转换.Bytes解析包.解析器列表">
 <summary>
 获取解析包内所有解析器的列表
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.删除解析器(System.String)">
 <summary>
 删除解析包指定名称的解析器
 </summary>
 <param name="解析器名称"></param>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.删除解析器(DSAPI.解析转换.Bytes解析器)">
 <summary>
 删除解析包内指定解析器
 </summary>
</member>
<member name="M:DSAPI.解析转换.Bytes解析包.清空解析器">
 <summary>
 清空解析包内所有解析器
 </summary>
</member>
<member name="T:DSAPI.语言和版本.国家名称">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="T:DSAPI.语言和版本.多国语言">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="T:DSAPI.语言和版本.主版本">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="P:DSAPI.语言和版本.主版本.未指定">
 <summary>
 表示未特定为某个版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.内部测试版">
 <summary>
 Alpha：通常会送交到开发软件的组织或社群中的各个软件测试者，用作内部测试。在市场上，越来越多公司会邀请外部的客户或合作伙伴参与其软件的Alpha测试阶段。这令软件在此阶段有更大的可用性测试。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.外部测试版">
 <summary>
 Beta：软件开发公司为对外宣传，将非正式产品免费发送给具有典型性的用户，让用户测试该软件的不足之处及存在问题，以便在正式发行前进一步改进和完善 。一般可通过Internet免费下载，也可以向软件公司索取。Beta版本是第一个对外公开的软件版本，是由公众参与的测试阶段。一般来说，Beta包含所有功能，但可能有一些已知问题和较轻微的臭虫（Bug）。Beta版本的测试者通常是开发软件的组织的客户，他们会以免费或优惠价钱得到软件，但会成为组织的免费测试者。Beta版本主要测试产品的支援和市场反应（在邀请Beta用户时）等。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.演示版">
 <summary>
 Demo：主要是演示正式软件的部分功能，用户可以从中得知软件的基本操作，为正式产品的发售扩大影响。如果是游戏的话，则只有一两个关卡可以玩。该版本也可以从Internet上免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.发行版">
 <summary>
 Release：稳定的发行版，可从Internet上免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.RC版">
 <summary>
 Release Candidate：指可能成为最终产品的版本，如果没有再出现问题则可释出正式版本。在此阶段，产品包含所有功能亦不会出现严重问题。通常此阶段的产品是接近完整的。
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.语言和版本.次版本">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="P:DSAPI.语言和版本.次版本.未指定">
 <summary>
 表示未特定为某个版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.增强版或加强版">
 <summary>
 Enhanced：如果是一般软件，一般称作“"增强版"”，会加入一些实用的新功能。如果是游戏，一般称作“"加强版"”，会加入一些新的游戏场景和游戏情节等。这是正式发售的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.自由版_免费版">
 <summary>
 Free：这一般是个人或自由软件联盟组织的成员制作的软件，希望免费给大家使用，没有版权，一般也是通过Internet免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.完全版_完整版">
 <summary>
 Full：也就是正式版，是最终正式发售的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.共享版">
 <summary>
 Shareware：有些公司为了吸引客户，对于他们制作的某些软件，可以让用户通过Internet免费下载的方式获取。不过，此版本软件多会带有一些使用时间或次数的限制，但可以利用在线注册或电子注册成为正式版用户。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.升级版">
 <summary>
 Upgrade：当你有某个软件以前的正式版本时，可以购买升级版，将你的软件升级为最新版。升级后的软件与正式版在功能上相同，但价格会低些，这主要是为了给原有的正版用户提供优惠。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.零售版">
 <summary>
 Retail：一般只针对个人的功能不是很全的版本，价格比较低，升级时间也有限制。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.增强版">
 <summary>
 Plus：这种大部分是在程序界面及多媒体功能上增强。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.预览版">
 <summary>
 Preview：软件作者为了满足那些对新版本很关注的人，发布的可以看到大部分功能的测试软件。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.企业版">
 <summary>
 Corporation：只针对企业发布的全功能版本，服务非常齐全。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.大客户企业版">
 <summary>
 Enterprise：只针对大型企业发布的全功能版本，价格比较昂贵，服务非常齐全。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.标准版">
 <summary>
 Standard：软件商推荐大家使用的版本，这种版本一般比较稳定，BUG少。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.迷你版">
 <summary>
 Mini：也叫精简版，只有最基本的功能，为那些想节省硬盘空间或者不追求华丽的人准备的。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.超值版">
 <summary>
 Premium：可以理解为对软件进行了最大限度的优化，属于优质版本或者高级版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.专业版">
 <summary>
 Professional：在原始版本基础上进行了修改或加强，使其比其原先版本存在更为广阔的功能和某一方面的独特优势。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.简易版">
 <summary>
 Express：有别于精简版，它是针对必要功能的定制开发，去掉不必要的功能，而不是简单的功能删减。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.豪华版">
 <summary>
 Deluxe：在原始版本基础上进行了修改或加强，主要体现在用户界面和扩展功能。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.已注册版">
 <summary>
 Registered：用户已通过软件注册渠道进行了注册，比如给软件提供商缴纳了相关费用，或是提交了注册码。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.多国语言版">
 <summary>
 Multilanguage：允许用户在多国语言间进行切换的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.试用版">
 <summary>
 Trial：含有某些限制，如时间、功能，注册后也有可能变为正式版。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.最终批量版">
 <summary>
 RTM：这基本就是最终的版本，英文是 Release To Manufacture，意思是发布到生产商。通常，这是提供给OEM厂商进行批量刻盘或集成所用。
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.通讯.十六进制字串转字节(System.String)">
 <summary>
 将一串以16进制表示的字符串转为了字节数组,如"AA BB CC"将被转换为Byte(){0xAA,0xBB,0xCC}"
 </summary>
 <param name="S">要被转换的以16进制表示的字符串,如"AA BB CC",建议以空格分割</param>
 <returns>返回转换后的字节数组</returns>
</member>
<member name="M:DSAPI.通讯.逆序(System.String,System.Boolean)">
 <summary>
 将一串以16进制表示的字符串以16进制方式反转顺序,如"A1 B2 C3"将被转换为"C3 B2 A1"
 </summary>
 <param name="S">要进行逆序操作的以16进制表示的字符串</param>
 <param name="去除空格">是否去除字符串内所有空格字符</param>
 <returns>返回经过逆序处理的字符串</returns>
</member>
<member name="M:DSAPI.通讯.批量补零(System.String)">
 <summary>
 将一串以16进制表示的字符串自动填充字符"0",如"A1 B C D2"将被转换为"A1 0B 0C D2"
 </summary>
 <param name="S1">需要指补零的字符串</param>
 <returns>返回经批量补零后字符串</returns>
</member>
<member name="M:DSAPI.通讯.两位补零(System.String)">
 <summary>
 将指定字符串自动填充字符"0",如"A"转为"0A",仅当字符不足2位时才会被补零
 </summary>
 <param name="B">要被自动补零的字符串</param>
 <returns>返回经两位补零后的字符串</returns>
</member>
<member name="M:DSAPI.通讯.四位补零(System.String)">
 <summary>
 将指定字符串自动填充字符"0",如"A"转为"000A",仅当字符不足4位时才会被补零
 </summary>
 <param name="B">要被自动补零的字符串</param>
 <returns>返回经四位补零后的字符串</returns>
</member>
<member name="T:DSAPI.通讯.超时方式">
 <summary>
 指示在发送数据后以何种方式等待，然后调用测试方法
 </summary>
</member>
<member name="F:DSAPI.通讯.超时方式.收到数据立即返回">
 <summary>
 当收到数据后立即返回，即使超时时间未到
 </summary>
</member>
<member name="F:DSAPI.通讯.超时方式.等到超时时间到">
 <summary>
 即使收到数据也继续等待，直到到达超时时间
 </summary>
</member>
<member name="F:DSAPI.通讯.超时方式.收到特定数据">
 <summary>
 当接收过程中收到特定的数据时取消继续等待
 </summary>
</member>
<member name="M:DSAPI.键盘.Ctrl_C">
 <summary>
 Ctrl+C
 </summary>
</member>
<member name="M:DSAPI.键盘.Ctrl_V">
 <summary>
 Ctrl+V
 </summary>
</member>
<member name="T:DSAPI.键盘鼠标钩子">
 <summary>
全局钩子，特别注意：若要确保兼容所有Windows平台，请先确你的程序与平台相符，如编译为32位程序在32位操作系统使用，编译为64位程序在64位操作系统使用。
<para>勾子属于中间处理过程，切勿在勾子事件中调用弹出模式窗体等阻塞代码。</para>
 </summary>
 <example>
 <para><img src="../CodesImages/键鼠勾子.png"></img></para>
 <para><a href="../Demos/DSAPI键盘鼠标勾子使用（含屏蔽按键）.rar">下载示例代码:DSAPI键盘鼠标勾子使用（含屏蔽按键）.rar</a></para>
 </example>
</member>
<member name="T:DSAPI.键盘鼠标钩子.组合键">
 <summary>
 用户同时按下的一个或多个键。如果设置了指定的组合键，当用户按下或放开相应的组合键时并触发“按下组合键”和“放开组合键”事件。
 </summary>
 <example>
 <para><img src="../CodesImages/QQ图片20200505094204.png"/></para>
 <para><a href="../Demos/组合键.rar">下载示例项目(VB.NET)</a></para>
 <code language="vb" source="e:\codesdemo\键盘鼠标钩子_组合键_VB.txt"></code>
 <code language="cs" source="e:\codesdemo\键盘鼠标钩子_组合键_CSharp.txt"></code>
 </example>
</member>
<member name="M:DSAPI.键盘鼠标钩子.组合键.op_Implicit(System.String)~DSAPI.键盘鼠标钩子.组合键">
 <summary>
 将指定的组合键表达式转为组合键对象，表达式格式为
 <br>名称:F1+F2+F3...</br>
 <br>名称:F1 + F2 + F3 ...</br>
 <br>名称=F1+F2+F3...</br>
 <br>名称=F1 + F2 + F3 ...</br>
 </summary>
 <param name="组合键表达式"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.键盘鼠标钩子.HookProc">
 <summary>
 Hook Function
 </summary>
 <param name="nCode">HC_ACTION或HC_NOREMOVE</param>
 <param name="wParam">表按键Virtual Key</param>
 <param name="lParam">与WM_键按下同</param>
 <returns>若讯息要被处理传0反之传1</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.SetWindowsHookEx(DSAPI.键盘鼠标钩子.HookType,DSAPI.键盘鼠标钩子.HookProc,System.Int32,System.Int32)">
 <summary>
 本函数是用于启动Hook设置。
 </summary>
 <param name="idHook">Hook的类型，即处理的消息类型。</param>
 <param name="Lpfn">Hook子程（函数或过程）的地址指针。如果dwThreadId参数为0或是一个由别的进程创建的线程的标识，lpfn必须指向DLL中的Hook子程。 除此以外，lpfn可以指向当前进程的一段Hook子程代码</param>
 <param name="hMod">是应用程序实例的句柄，标识包含lpfn所指的子程的DLL。如果dwThreadId 标识当前进程创建的一个线程，而且子程代码位于当前进程，hMod必须为NULL。</param>
 <param name="dwThreadId">与安装Hook子程相关联的线程的标识符，如果为0，Hook子程与所有的线程关联。 </param>
 <returns>函数成功则返回Hook子程的句柄，失败返回NULL。</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.UnhookWindowsHookEx(System.Int32)">
 <summary>
 本函数是解除Hook之用。
 </summary>
 <param name="hHook">Hook函数的句柄。</param>
 <returns>函数成功则返回TRUE，失败返回FALSE。</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.CallNextHookEx(System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 本函数的作用是将当前Hook链中的Hook信息传递给下一个Hook。
 </summary>
 <param name="hHook">当前Hook的句柄，一个应用程序接收这个句柄，作为先前调用SetWindowsHookEx函数的结果。</param>
 <param name="nCode">传递到当前Hook过程的Hook代码，下一个Hook过程使用这段代码去决定如何处理Hook信息。</param>
 <param name="wParam">传递给当前Hook过程的wParam值，它的具体含义是由当前Hook链中的相关Hook的类型决定的。</param>
 <param name="lParam">传递给当前Hook过程的lParam值，它的具体含义是由当前Hook链中的相关Hook的类型决定的。</param>
</member>
<member name="F:DSAPI.鼠标.CURSORINFO.flags">
 <summary>
 0=隐藏,1=显示
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
